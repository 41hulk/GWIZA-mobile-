{"ast":null,"code":"'use strict';var invariant=require('fbjs/lib/invariant');var levelsMap={log:'log',info:'info',warn:'warn',error:'error',fatal:'error'};var warningHandler=null;var RCTLog={logIfNoNativeHook:function logIfNoNativeHook(level){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}if(typeof global.nativeLoggingHook==='undefined'){RCTLog.logToConsole.apply(RCTLog,[level].concat(args));}else{if(warningHandler&&level==='warn'){warningHandler.apply(void 0,args);}}},logToConsole:function logToConsole(level){var _console;var logFn=levelsMap[level];invariant(logFn,'Level \"'+level+'\" not one of '+Object.keys(levelsMap).toString());for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){args[_key2-1]=arguments[_key2];}(_console=console)[logFn].apply(_console,args);},setWarningHandler:function setWarningHandler(handler){warningHandler=handler;}};module.exports=RCTLog;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native/Libraries/Utilities/RCTLog.js"],"names":["invariant","require","levelsMap","log","info","warn","error","fatal","warningHandler","RCTLog","logIfNoNativeHook","level","args","global","nativeLoggingHook","logToConsole","logFn","Object","keys","toString","console","setWarningHandler","handler","module","exports"],"mappings":"AAUA,aAEA,GAAMA,CAAAA,SAAS,CAAGC,OAAO,CAAC,oBAAD,CAAzB,CAEA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,GAAG,CAAE,KADW,CAEhBC,IAAI,CAAE,MAFU,CAGhBC,IAAI,CAAE,MAHU,CAIhBC,KAAK,CAAE,OAJS,CAKhBC,KAAK,CAAE,OALS,CAAlB,CAQA,GAAIC,CAAAA,cAAqC,CAAG,IAA5C,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAEbC,iBAFa,4BAEKC,KAFL,CAE+C,+BAAxBC,IAAwB,qDAAxBA,IAAwB,0BAE1D,GAAI,MAAOC,CAAAA,MAAM,CAACC,iBAAd,GAAoC,WAAxC,CAAqD,CACnDL,MAAM,CAACM,YAAP,OAAAN,MAAM,EAAcE,KAAd,SAAwBC,IAAxB,EAAN,CACD,CAFD,IAEO,CAEL,GAAIJ,cAAc,EAAIG,KAAK,GAAK,MAAhC,CAAwC,CACtCH,cAAc,MAAd,QAAkBI,IAAlB,EACD,CACF,CACF,CAZY,CAebG,YAfa,uBAeAJ,KAfA,CAe0C,cACrD,GAAMK,CAAAA,KAAK,CAAGd,SAAS,CAACS,KAAD,CAAvB,CACAX,SAAS,CACPgB,KADO,CAEP,UAAYL,KAAZ,CAAoB,eAApB,CAAsCM,MAAM,CAACC,IAAP,CAAYhB,SAAZ,EAAuBiB,QAAvB,EAF/B,CAAT,CAFqD,+BAAxBP,IAAwB,2DAAxBA,IAAwB,4BAOrD,UAAAQ,OAAO,EAACJ,KAAD,CAAP,gBAAkBJ,IAAlB,EACD,CAvBY,CAyBbS,iBAzBa,4BAyBKC,OAzBL,CAyB2C,CACtDd,cAAc,CAAGc,OAAjB,CACD,CA3BY,CAAf,CA8BAC,MAAM,CAACC,OAAP,CAAiBf,MAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst invariant = require('fbjs/lib/invariant');\n\nconst levelsMap = {\n  log: 'log',\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n  fatal: 'error',\n};\n\nlet warningHandler: ?(Array<any>) => void = null;\n\nconst RCTLog = {\n  // level one of log, info, warn, error, mustfix\n  logIfNoNativeHook(level: string, ...args: Array<any>): void {\n    // We already printed in the native console, so only log here if using a js debugger\n    if (typeof global.nativeLoggingHook === 'undefined') {\n      RCTLog.logToConsole(level, ...args);\n    } else {\n      // Report native warnings to YellowBox\n      if (warningHandler && level === 'warn') {\n        warningHandler(...args);\n      }\n    }\n  },\n\n  // Log to console regardless of nativeLoggingHook\n  logToConsole(level: string, ...args: Array<any>): void {\n    const logFn = levelsMap[level];\n    invariant(\n      logFn,\n      'Level \"' + level + '\" not one of ' + Object.keys(levelsMap).toString(),\n    );\n\n    console[logFn](...args);\n  },\n\n  setWarningHandler(handler: typeof warningHandler): void {\n    warningHandler = handler;\n  },\n};\n\nmodule.exports = RCTLog;\n"]},"metadata":{},"sourceType":"script"}