{"ast":null,"code":"'use strict';var _require=require(\"../../BatchedBridge/NativeModules\"),SourceCode=_require.SourceCode;var _cachedDevServerURL;var FALLBACK='http://localhost:8081/';function getDevServer(){if(_cachedDevServerURL===undefined){var match=SourceCode&&SourceCode.scriptURL&&SourceCode.scriptURL.match(/^https?:\\/\\/.*?\\//);_cachedDevServerURL=match?match[0]:null;}return{url:_cachedDevServerURL||FALLBACK,bundleLoadedFromServer:_cachedDevServerURL!==null};}module.exports=getDevServer;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native/Libraries/Core/Devtools/getDevServer.js"],"names":["require","SourceCode","_cachedDevServerURL","FALLBACK","getDevServer","undefined","match","scriptURL","url","bundleLoadedFromServer","module","exports"],"mappings":"AAUA,a,aAEqBA,OAAO,qC,CAArBC,U,UAAAA,U,CAEP,GAAIC,CAAAA,mBAAJ,CACA,GAAMC,CAAAA,QAAQ,CAAG,wBAAjB,CAWA,QAASC,CAAAA,YAAT,EAAuC,CACrC,GAAIF,mBAAmB,GAAKG,SAA5B,CAAuC,CACrC,GAAMC,CAAAA,KAAK,CACTL,UAAU,EACVA,UAAU,CAACM,SADX,EAEAN,UAAU,CAACM,SAAX,CAAqBD,KAArB,CAA2B,mBAA3B,CAHF,CAIAJ,mBAAmB,CAAGI,KAAK,CAAGA,KAAK,CAAC,CAAD,CAAR,CAAc,IAAzC,CACD,CAED,MAAO,CACLE,GAAG,CAAEN,mBAAmB,EAAIC,QADvB,CAELM,sBAAsB,CAAEP,mBAAmB,GAAK,IAF3C,CAAP,CAID,CAEDQ,MAAM,CAACC,OAAP,CAAiBP,YAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst {SourceCode} = require('../../BatchedBridge/NativeModules');\n\nlet _cachedDevServerURL: ?string;\nconst FALLBACK = 'http://localhost:8081/';\n\ntype DevServerInfo = {\n  url: string,\n  bundleLoadedFromServer: boolean,\n};\n\n/**\n * Many RN development tools rely on the development server (packager) running\n * @return URL to packager with trailing slash\n */\nfunction getDevServer(): DevServerInfo {\n  if (_cachedDevServerURL === undefined) {\n    const match =\n      SourceCode &&\n      SourceCode.scriptURL &&\n      SourceCode.scriptURL.match(/^https?:\\/\\/.*?\\//);\n    _cachedDevServerURL = match ? match[0] : null;\n  }\n\n  return {\n    url: _cachedDevServerURL || FALLBACK,\n    bundleLoadedFromServer: _cachedDevServerURL !== null,\n  };\n}\n\nmodule.exports = getDevServer;\n"]},"metadata":{},"sourceType":"script"}