{"ast":null,"code":"'use strict';var _extends=require(\"@babel/runtime/helpers/extends\");var _objectSpread=require(\"@babel/runtime/helpers/objectSpread\");var ReactNativeStyleAttributes=require(\"../Components/View/ReactNativeStyleAttributes\");var UIManager=require(\"./UIManager\");var insetsDiffer=require(\"../Utilities/differ/insetsDiffer\");var matricesDiffer=require(\"../Utilities/differ/matricesDiffer\");var pointsDiffer=require(\"../Utilities/differ/pointsDiffer\");var processColor=require(\"../StyleSheet/processColor\");var resolveAssetSource=require(\"../Image/resolveAssetSource\");var sizesDiffer=require(\"../Utilities/differ/sizesDiffer\");var invariant=require('fbjs/lib/invariant');var warning=require('fbjs/lib/warning');function getNativeComponentAttributes(uiViewClassName){var viewConfig=UIManager[uiViewClassName];invariant(viewConfig!=null&&viewConfig.NativeProps!=null,'requireNativeComponent: \"%s\" was not found in the UIManager.',uiViewClassName);var baseModuleName=viewConfig.baseModuleName,bubblingEventTypes=viewConfig.bubblingEventTypes,directEventTypes=viewConfig.directEventTypes;var nativeProps=viewConfig.NativeProps;while(baseModuleName){var baseModule=UIManager[baseModuleName];if(!baseModule){warning(false,'Base module \"%s\" does not exist',baseModuleName);baseModuleName=null;}else{bubblingEventTypes=_objectSpread({},baseModule.bubblingEventTypes,bubblingEventTypes);directEventTypes=_objectSpread({},baseModule.directEventTypes,directEventTypes);nativeProps=_objectSpread({},baseModule.NativeProps,nativeProps);baseModuleName=baseModule.baseModuleName;}}var validAttributes={};for(var key in nativeProps){var typeName=nativeProps[key];var diff=getDifferForType(typeName);var process=getProcessorForType(typeName);validAttributes[key]=diff==null&&process==null?true:{diff:diff,process:process};}validAttributes.style=ReactNativeStyleAttributes;_extends(viewConfig,{uiViewClassName:uiViewClassName,validAttributes:validAttributes,bubblingEventTypes:bubblingEventTypes,directEventTypes:directEventTypes});if(!hasAttachedDefaultEventTypes){attachDefaultEventTypes(viewConfig);hasAttachedDefaultEventTypes=true;}return viewConfig;}var hasAttachedDefaultEventTypes=false;function attachDefaultEventTypes(viewConfig){if(UIManager.ViewManagerNames){viewConfig=merge(viewConfig,UIManager.getDefaultEventTypes());}else{viewConfig.bubblingEventTypes=merge(viewConfig.bubblingEventTypes,UIManager.genericBubblingEventTypes);viewConfig.directEventTypes=merge(viewConfig.directEventTypes,UIManager.genericDirectEventTypes);}}function merge(destination,source){if(!source){return destination;}if(!destination){return source;}for(var key in source){if(!source.hasOwnProperty(key)){continue;}var sourceValue=source[key];if(destination.hasOwnProperty(key)){var destinationValue=destination[key];if(typeof sourceValue==='object'&&typeof destinationValue==='object'){sourceValue=merge(destinationValue,sourceValue);}}destination[key]=sourceValue;}return destination;}function getDifferForType(typeName){switch(typeName){case'CATransform3D':return matricesDiffer;case'CGPoint':return pointsDiffer;case'CGSize':return sizesDiffer;case'UIEdgeInsets':return insetsDiffer;}return null;}function getProcessorForType(typeName){switch(typeName){case'CGColor':case'UIColor':return processColor;case'CGColorArray':case'UIColorArray':return processColorArray;case'CGImage':case'UIImage':case'RCTImageSource':return resolveAssetSource;case'Color':return processColor;case'ColorArray':return processColorArray;}return null;}function processColorArray(colors){return colors==null?null:colors.map(processColor);}module.exports=getNativeComponentAttributes;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js"],"names":["ReactNativeStyleAttributes","require","UIManager","insetsDiffer","matricesDiffer","pointsDiffer","processColor","resolveAssetSource","sizesDiffer","invariant","warning","getNativeComponentAttributes","uiViewClassName","viewConfig","NativeProps","baseModuleName","bubblingEventTypes","directEventTypes","nativeProps","baseModule","validAttributes","key","typeName","diff","getDifferForType","process","getProcessorForType","style","hasAttachedDefaultEventTypes","attachDefaultEventTypes","ViewManagerNames","merge","getDefaultEventTypes","genericBubblingEventTypes","genericDirectEventTypes","destination","source","hasOwnProperty","sourceValue","destinationValue","processColorArray","colors","map","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\nconst UIManager = require('./UIManager');\n\nconst insetsDiffer = require('../Utilities/differ/insetsDiffer');\nconst matricesDiffer = require('../Utilities/differ/matricesDiffer');\nconst pointsDiffer = require('../Utilities/differ/pointsDiffer');\nconst processColor = require('../StyleSheet/processColor');\nconst resolveAssetSource = require('../Image/resolveAssetSource');\nconst sizesDiffer = require('../Utilities/differ/sizesDiffer');\nconst invariant = require('fbjs/lib/invariant');\nconst warning = require('fbjs/lib/warning');\n\nfunction getNativeComponentAttributes(uiViewClassName: string) {\n  const viewConfig = UIManager[uiViewClassName];\n\n  invariant(\n    viewConfig != null && viewConfig.NativeProps != null,\n    'requireNativeComponent: \"%s\" was not found in the UIManager.',\n    uiViewClassName,\n  );\n\n  // TODO: This seems like a whole lot of runtime initialization for every\n  // native component that can be either avoided or simplified.\n  let {baseModuleName, bubblingEventTypes, directEventTypes} = viewConfig;\n  let nativeProps = viewConfig.NativeProps;\n  while (baseModuleName) {\n    const baseModule = UIManager[baseModuleName];\n    if (!baseModule) {\n      warning(false, 'Base module \"%s\" does not exist', baseModuleName);\n      baseModuleName = null;\n    } else {\n      bubblingEventTypes = {\n        ...baseModule.bubblingEventTypes,\n        ...bubblingEventTypes,\n      };\n      directEventTypes = {\n        ...baseModule.directEventTypes,\n        ...directEventTypes,\n      };\n      nativeProps = {\n        ...baseModule.NativeProps,\n        ...nativeProps,\n      };\n      baseModuleName = baseModule.baseModuleName;\n    }\n  }\n\n  const validAttributes = {};\n\n  for (const key in nativeProps) {\n    const typeName = nativeProps[key];\n    const diff = getDifferForType(typeName);\n    const process = getProcessorForType(typeName);\n\n    validAttributes[key] =\n      diff == null && process == null ? true : {diff, process};\n  }\n\n  // Unfortunately, the current setup declares style properties as top-level\n  // props. This makes it so we allow style properties in the `style` prop.\n  // TODO: Move style properties into a `style` prop and disallow them as\n  // top-level props on the native side.\n  validAttributes.style = ReactNativeStyleAttributes;\n\n  Object.assign(viewConfig, {\n    uiViewClassName,\n    validAttributes,\n    bubblingEventTypes,\n    directEventTypes,\n  });\n\n  if (!hasAttachedDefaultEventTypes) {\n    attachDefaultEventTypes(viewConfig);\n    hasAttachedDefaultEventTypes = true;\n  }\n\n  return viewConfig;\n}\n\n// TODO: Figure out how this makes sense. We're using a global boolean to only\n// initialize this on the first eagerly initialized native component.\nlet hasAttachedDefaultEventTypes = false;\nfunction attachDefaultEventTypes(viewConfig: any) {\n  // This is supported on UIManager platforms (ex: Android),\n  // as lazy view managers are not implemented for all platforms.\n  // See [UIManager] for details on constants and implementations.\n  if (UIManager.ViewManagerNames) {\n    // Lazy view managers enabled.\n    viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());\n  } else {\n    viewConfig.bubblingEventTypes = merge(\n      viewConfig.bubblingEventTypes,\n      UIManager.genericBubblingEventTypes,\n    );\n    viewConfig.directEventTypes = merge(\n      viewConfig.directEventTypes,\n      UIManager.genericDirectEventTypes,\n    );\n  }\n}\n\n// TODO: Figure out how to avoid all this runtime initialization cost.\nfunction merge(destination: ?Object, source: ?Object): ?Object {\n  if (!source) {\n    return destination;\n  }\n  if (!destination) {\n    return source;\n  }\n\n  for (const key in source) {\n    if (!source.hasOwnProperty(key)) {\n      continue;\n    }\n\n    let sourceValue = source[key];\n    if (destination.hasOwnProperty(key)) {\n      const destinationValue = destination[key];\n      if (\n        typeof sourceValue === 'object' &&\n        typeof destinationValue === 'object'\n      ) {\n        sourceValue = merge(destinationValue, sourceValue);\n      }\n    }\n    destination[key] = sourceValue;\n  }\n  return destination;\n}\n\nfunction getDifferForType(\n  typeName: string,\n): ?(prevProp: any, nextProp: any) => boolean {\n  switch (typeName) {\n    // iOS Types\n    case 'CATransform3D':\n      return matricesDiffer;\n    case 'CGPoint':\n      return pointsDiffer;\n    case 'CGSize':\n      return sizesDiffer;\n    case 'UIEdgeInsets':\n      return insetsDiffer;\n    // Android Types\n    // (not yet implemented)\n  }\n  return null;\n}\n\nfunction getProcessorForType(typeName: string): ?(nextProp: any) => any {\n  switch (typeName) {\n    // iOS Types\n    case 'CGColor':\n    case 'UIColor':\n      return processColor;\n    case 'CGColorArray':\n    case 'UIColorArray':\n      return processColorArray;\n    case 'CGImage':\n    case 'UIImage':\n    case 'RCTImageSource':\n      return resolveAssetSource;\n    // Android Types\n    case 'Color':\n      return processColor;\n    case 'ColorArray':\n      return processColorArray;\n  }\n  return null;\n}\n\nfunction processColorArray(colors: ?Array<any>): ?Array<?number> {\n  return colors == null ? null : colors.map(processColor);\n}\n\nmodule.exports = getNativeComponentAttributes;\n"]},"metadata":{},"sourceType":"script"}