{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _core=require(\"@react-navigation/core\");var _native=require(\"@react-navigation/native\");var _DrawerRouter=_interopRequireDefault(require(\"../routers/DrawerRouter\"));var _DrawerView=_interopRequireDefault(require(\"../views/DrawerView\"));var _DrawerNavigatorItems=_interopRequireDefault(require(\"../views/DrawerNavigatorItems\"));var defaultContentComponent=function defaultContentComponent(props){return _react.default.createElement(_reactNative.ScrollView,{alwaysBounceVertical:false},_react.default.createElement(_native.SafeAreaView,{forceInset:{top:'always',horizontal:'never'}},_react.default.createElement(_DrawerNavigatorItems.default,props)));};var DefaultDrawerConfig={drawerWidth:function drawerWidth(){var _Dimensions$get=_reactNative.Dimensions.get('window'),height=_Dimensions$get.height,width=_Dimensions$get.width;var smallerAxisSize=Math.min(height,width);var isLandscape=width>height;var isTablet=smallerAxisSize>=600;var appBarHeight=_reactNative.Platform.OS==='ios'?isLandscape?32:44:56;var maxWidth=isTablet?320:280;return Math.min(smallerAxisSize-appBarHeight,maxWidth);},contentComponent:defaultContentComponent,drawerPosition:'left',keyboardDismissMode:'on-drag',drawerBackgroundColor:'white',useNativeAnimations:true,drawerType:'front',hideStatusBar:false,statusBarAnimation:'slide',overlayColor:'black'};var DrawerNavigator=function DrawerNavigator(routeConfigs){var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var mergedConfig=(0,_objectSpread2.default)({},DefaultDrawerConfig,config);var drawerRouter=(0,_DrawerRouter.default)(routeConfigs,mergedConfig);var navigator=(0,_core.createNavigator)(_DrawerView.default,drawerRouter,mergedConfig);return navigator;};var _default=DrawerNavigator;exports.default=_default;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-navigation-drawer/dist/navigators/createDrawerNavigator.js"],"names":["defaultContentComponent","props","top","horizontal","DefaultDrawerConfig","drawerWidth","Dimensions","get","height","width","smallerAxisSize","Math","min","isLandscape","isTablet","appBarHeight","Platform","OS","maxWidth","contentComponent","drawerPosition","keyboardDismissMode","drawerBackgroundColor","useNativeAnimations","drawerType","hideStatusBar","statusBarAnimation","overlayColor","DrawerNavigator","routeConfigs","config","mergedConfig","drawerRouter","navigator","DrawerView"],"mappings":"6PAAA,oDACA,yCACA,4CACA,gDACA,6EACA,uEACA,2FAMA,GAAMA,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,KAAK,QAAI,8BAAC,uBAAD,EAAY,oBAAoB,CAAE,KAAlC,EACrC,6BAAC,oBAAD,EAAc,UAAU,CAAE,CAAEC,GAAG,CAAE,QAAP,CAAiBC,UAAU,CAAE,OAA7B,CAA1B,EACE,6BAAC,6BAAD,CAAiBF,KAAjB,CADF,CADqC,CAAJ,EAArC,CAMA,GAAMG,CAAAA,mBAAmB,CAAG,CAC1BC,WAAW,CAAE,sBAAM,qBAMSC,wBAAWC,GAAX,CAAe,QAAf,CANT,CAMTC,MANS,iBAMTA,MANS,CAMDC,KANC,iBAMDA,KANC,CAOjB,GAAMC,CAAAA,eAAe,CAAGC,IAAI,CAACC,GAAL,CAASJ,MAAT,CAAiBC,KAAjB,CAAxB,CACA,GAAMI,CAAAA,WAAW,CAAGJ,KAAK,CAAGD,MAA5B,CACA,GAAMM,CAAAA,QAAQ,CAAGJ,eAAe,EAAI,GAApC,CACA,GAAMK,CAAAA,YAAY,CAAGC,sBAASC,EAAT,GAAgB,KAAhB,CAAwBJ,WAAW,CAAG,EAAH,CAAQ,EAA3C,CAAgD,EAArE,CACA,GAAMK,CAAAA,QAAQ,CAAGJ,QAAQ,CAAG,GAAH,CAAS,GAAlC,CAEA,MAAOH,CAAAA,IAAI,CAACC,GAAL,CAASF,eAAe,CAAGK,YAA3B,CAAyCG,QAAzC,CAAP,CACD,CAfyB,CAgB1BC,gBAAgB,CAAEnB,uBAhBQ,CAiB1BoB,cAAc,CAAE,MAjBU,CAkB1BC,mBAAmB,CAAE,SAlBK,CAmB1BC,qBAAqB,CAAE,OAnBG,CAoB1BC,mBAAmB,CAAE,IApBK,CAqB1BC,UAAU,CAAE,OArBc,CAsB1BC,aAAa,CAAE,KAtBW,CAuB1BC,kBAAkB,CAAE,OAvBM,CAwB1BC,YAAY,CAAE,OAxBY,CAA5B,CA2BA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,YAAD,CAA+B,IAAhBC,CAAAA,MAAgB,2DAAP,EAAO,CACrD,GAAMC,CAAAA,YAAY,+BAAQ3B,mBAAR,CAAgC0B,MAAhC,CAAlB,CACA,GAAME,CAAAA,YAAY,CAAG,0BAAaH,YAAb,CAA2BE,YAA3B,CAArB,CACA,GAAME,CAAAA,SAAS,CAAG,0BAAgBC,mBAAhB,CAA4BF,YAA5B,CAA0CD,YAA1C,CAAlB,CACA,MAAOE,CAAAA,SAAP,CACD,CALD,C,aAOeL,e","sourcesContent":["import React from 'react';\nimport { Dimensions, Platform, ScrollView } from 'react-native';\nimport { createNavigator } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\nimport DrawerRouter from '../routers/DrawerRouter';\nimport DrawerView from '../views/DrawerView';\nimport DrawerItems from '../views/DrawerNavigatorItems';\n\n// A stack navigators props are the intersection between\n// the base navigator props (navgiation, screenProps, etc)\n// and the view's props\n\nconst defaultContentComponent = props => <ScrollView alwaysBounceVertical={false}>\n    <SafeAreaView forceInset={{ top: 'always', horizontal: 'never' }}>\n      <DrawerItems {...props} />\n    </SafeAreaView>\n  </ScrollView>;\n\nconst DefaultDrawerConfig = {\n  drawerWidth: () => {\n    /*\n     * Default drawer width is screen width - header height\n     * with a max width of 280 on mobile and 320 on tablet\n     * https://material.io/guidelines/patterns/navigation-drawer.html\n     */\n    const { height, width } = Dimensions.get('window');\n    const smallerAxisSize = Math.min(height, width);\n    const isLandscape = width > height;\n    const isTablet = smallerAxisSize >= 600;\n    const appBarHeight = Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n    const maxWidth = isTablet ? 320 : 280;\n\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  },\n  contentComponent: defaultContentComponent,\n  drawerPosition: 'left',\n  keyboardDismissMode: 'on-drag',\n  drawerBackgroundColor: 'white',\n  useNativeAnimations: true,\n  drawerType: 'front',\n  hideStatusBar: false,\n  statusBarAnimation: 'slide',\n  overlayColor: 'black'\n};\n\nconst DrawerNavigator = (routeConfigs, config = {}) => {\n  const mergedConfig = { ...DefaultDrawerConfig, ...config };\n  const drawerRouter = DrawerRouter(routeConfigs, mergedConfig);\n  const navigator = createNavigator(DrawerView, drawerRouter, mergedConfig);\n  return navigator;\n};\n\nexport default DrawerNavigator;"]},"metadata":{},"sourceType":"script"}