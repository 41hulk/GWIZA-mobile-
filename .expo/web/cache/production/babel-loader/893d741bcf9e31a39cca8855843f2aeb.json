{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};exports.default=getChildEventSubscriber;function getChildEventSubscriber(addListener,key){var initialLastFocusEvent=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'didBlur';var actionSubscribers=new Set();var willFocusSubscribers=new Set();var didFocusSubscribers=new Set();var willBlurSubscribers=new Set();var didBlurSubscribers=new Set();var refocusSubscribers=new Set();var removeAll=function removeAll(){[actionSubscribers,willFocusSubscribers,didFocusSubscribers,willBlurSubscribers,didBlurSubscribers,refocusSubscribers].forEach(function(set){return set.clear();});upstreamSubscribers.forEach(function(subs){return subs&&subs.remove();});};var getChildSubscribers=function getChildSubscribers(evtName){switch(evtName){case'action':return actionSubscribers;case'willFocus':return willFocusSubscribers;case'didFocus':return didFocusSubscribers;case'willBlur':return willBlurSubscribers;case'didBlur':return didBlurSubscribers;case'refocus':return refocusSubscribers;default:return null;}};var _emit=function emit(type,payload){var payloadWithType=_extends({},payload,{type:type});var subscribers=getChildSubscribers(type);subscribers&&subscribers.forEach(function(subs){subs(payloadWithType);});};var lastFocusEvent=initialLastFocusEvent;var upstreamEvents=['willFocus','didFocus','willBlur','didBlur','refocus','action'];var upstreamSubscribers=upstreamEvents.map(function(eventName){return addListener(eventName,function(payload){if(eventName==='refocus'){_emit(eventName,payload);return;}var state=payload.state,lastState=payload.lastState,action=payload.action;var lastRoutes=lastState&&lastState.routes;var routes=state&&state.routes;var focusKey=routes&&routes[state.index].key;var isChildFocused=focusKey===key;var lastRoute=lastRoutes&&lastRoutes.find(function(route){return route.key===key;});var newRoute=routes&&routes.find(function(route){return route.key===key;});var childPayload={context:key+\":\"+action.type+\"_\"+(payload.context||'Root'),state:newRoute,lastState:lastRoute,action:action,type:eventName};var isTransitioning=!!state&&state.isTransitioning;var previouslylastFocusEvent=lastFocusEvent;if(lastFocusEvent==='didBlur'){if(eventName==='willFocus'&&isChildFocused){_emit(lastFocusEvent='willFocus',childPayload);}else if(eventName==='action'&&isChildFocused){_emit(lastFocusEvent='willFocus',childPayload);}}if(lastFocusEvent==='willFocus'){if(eventName==='didFocus'&&isChildFocused&&!isTransitioning){_emit(lastFocusEvent='didFocus',childPayload);}else if(eventName==='action'&&isChildFocused&&!isTransitioning){_emit(lastFocusEvent='didFocus',childPayload);}}if(lastFocusEvent==='didFocus'){if(!isChildFocused){_emit(lastFocusEvent='willBlur',childPayload);}else if(eventName==='willBlur'){_emit(lastFocusEvent='willBlur',childPayload);}else if(eventName==='action'&&previouslylastFocusEvent==='didFocus'){_emit('action',childPayload);}}if(lastFocusEvent==='willBlur'){if(eventName==='action'&&!isChildFocused&&!isTransitioning){_emit(lastFocusEvent='didBlur',childPayload);}else if(eventName==='didBlur'){_emit(lastFocusEvent='didBlur',childPayload);}else if(eventName==='action'&&isChildFocused&&!isTransitioning){_emit(lastFocusEvent='didFocus',childPayload);}else if(eventName==='action'&&isChildFocused&&isTransitioning){_emit(lastFocusEvent='willFocus',childPayload);}}if(lastFocusEvent==='didBlur'&&!newRoute){removeAll();}});});return{addListener:function addListener(eventName,eventHandler){var subscribers=getChildSubscribers(eventName);if(!subscribers){throw new Error(\"Invalid event name \\\"\"+eventName+\"\\\"\");}subscribers.add(eventHandler);var remove=function remove(){subscribers.delete(eventHandler);};return{remove:remove};},emit:function emit(eventName,payload){if(eventName!=='refocus'){console.error(\"navigation.emit only supports the 'refocus' event currently.\");return;}_emit(eventName,payload);}};}","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/@react-navigation/core/dist/getChildEventSubscriber.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","getChildEventSubscriber","addListener","initialLastFocusEvent","actionSubscribers","Set","willFocusSubscribers","didFocusSubscribers","willBlurSubscribers","didBlurSubscribers","refocusSubscribers","removeAll","forEach","set","clear","upstreamSubscribers","subs","remove","getChildSubscribers","evtName","emit","type","payload","payloadWithType","subscribers","lastFocusEvent","upstreamEvents","map","eventName","state","lastState","action","lastRoutes","routes","focusKey","index","isChildFocused","lastRoute","find","route","newRoute","childPayload","context","isTransitioning","previouslylastFocusEvent","eventHandler","Error","add","delete","console","error"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = getChildEventSubscriber;\n/*\n * This is used to extract one children's worth of events from a stream of navigation action events\n *\n * Based on the 'action' events that get fired for this navigation state, this utility will fire\n * focus and blur events for this child\n */\nfunction getChildEventSubscriber(addListener, key, initialLastFocusEvent = 'didBlur') {\n  var actionSubscribers = new Set();\n  var willFocusSubscribers = new Set();\n  var didFocusSubscribers = new Set();\n  var willBlurSubscribers = new Set();\n  var didBlurSubscribers = new Set();\n  var refocusSubscribers = new Set();\n\n  var removeAll = () => {\n    [actionSubscribers, willFocusSubscribers, didFocusSubscribers, willBlurSubscribers, didBlurSubscribers, refocusSubscribers].forEach(set => set.clear());\n\n    upstreamSubscribers.forEach(subs => subs && subs.remove());\n  };\n\n  var getChildSubscribers = evtName => {\n    switch (evtName) {\n      case 'action':\n        return actionSubscribers;\n      case 'willFocus':\n        return willFocusSubscribers;\n      case 'didFocus':\n        return didFocusSubscribers;\n      case 'willBlur':\n        return willBlurSubscribers;\n      case 'didBlur':\n        return didBlurSubscribers;\n      case 'refocus':\n        return refocusSubscribers;\n      default:\n        return null;\n    }\n  };\n\n  var emit = (type, payload) => {\n    var payloadWithType = _extends({}, payload, { type });\n    var subscribers = getChildSubscribers(type);\n    subscribers && subscribers.forEach(subs => {\n      subs(payloadWithType);\n    });\n  };\n\n  // lastFocusEvent keeps track of focus state for one route. First we assume\n  // we are blurred. If we are focused on initialization, the first 'action'\n  // event will cause onFocus+willFocus events because we had previously been\n  // considered blurred\n  var lastFocusEvent = initialLastFocusEvent;\n\n  var upstreamEvents = ['willFocus', 'didFocus', 'willBlur', 'didBlur', 'refocus', 'action'];\n\n  var upstreamSubscribers = upstreamEvents.map(eventName => addListener(eventName, payload => {\n    if (eventName === 'refocus') {\n      emit(eventName, payload);\n      return;\n    }\n\n    var { state, lastState, action } = payload;\n    var lastRoutes = lastState && lastState.routes;\n    var routes = state && state.routes;\n\n    // const lastFocusKey =\n    //   lastState && lastState.routes && lastState.routes[lastState.index].key;\n    var focusKey = routes && routes[state.index].key;\n\n    var isChildFocused = focusKey === key;\n    var lastRoute = lastRoutes && lastRoutes.find(route => route.key === key);\n    var newRoute = routes && routes.find(route => route.key === key);\n    var childPayload = {\n      context: `${key}:${action.type}_${payload.context || 'Root'}`,\n      state: newRoute,\n      lastState: lastRoute,\n      action,\n      type: eventName\n    };\n    var isTransitioning = !!state && state.isTransitioning;\n\n    var previouslylastFocusEvent = lastFocusEvent;\n\n    if (lastFocusEvent === 'didBlur') {\n      // The child is currently blurred. Look for willFocus conditions\n      if (eventName === 'willFocus' && isChildFocused) {\n        emit(lastFocusEvent = 'willFocus', childPayload);\n      } else if (eventName === 'action' && isChildFocused) {\n        emit(lastFocusEvent = 'willFocus', childPayload);\n      }\n    }\n    if (lastFocusEvent === 'willFocus') {\n      // We are currently mid-focus. Look for didFocus conditions.\n      // If state.isTransitioning is false, this child event happens immediately after willFocus\n      if (eventName === 'didFocus' && isChildFocused && !isTransitioning) {\n        emit(lastFocusEvent = 'didFocus', childPayload);\n      } else if (eventName === 'action' && isChildFocused && !isTransitioning) {\n        emit(lastFocusEvent = 'didFocus', childPayload);\n      }\n    }\n\n    if (lastFocusEvent === 'didFocus') {\n      // The child is currently focused. Look for blurring events\n      if (!isChildFocused) {\n        // The child is no longer focused within this navigation state\n        emit(lastFocusEvent = 'willBlur', childPayload);\n      } else if (eventName === 'willBlur') {\n        // The parent is getting a willBlur event\n        emit(lastFocusEvent = 'willBlur', childPayload);\n      } else if (eventName === 'action' && previouslylastFocusEvent === 'didFocus') {\n        // While focused, pass action events to children for grandchildren focus\n        emit('action', childPayload);\n      }\n    }\n\n    if (lastFocusEvent === 'willBlur') {\n      // The child is mid-blur. Wait for transition to end\n      if (eventName === 'action' && !isChildFocused && !isTransitioning) {\n        // The child is done blurring because transitioning is over, or isTransitioning\n        // never began and didBlur fires immediately after willBlur\n        emit(lastFocusEvent = 'didBlur', childPayload);\n      } else if (eventName === 'didBlur') {\n        // Pass through the parent didBlur event if it happens\n        emit(lastFocusEvent = 'didBlur', childPayload);\n      } else if (eventName === 'action' && isChildFocused && !isTransitioning) {\n        emit(lastFocusEvent = 'didFocus', childPayload);\n      } else if (eventName === 'action' && isChildFocused && isTransitioning) {\n        emit(lastFocusEvent = 'willFocus', childPayload);\n      }\n    }\n\n    if (lastFocusEvent === 'didBlur' && !newRoute) {\n      removeAll();\n    }\n  }));\n\n  return {\n    addListener(eventName, eventHandler) {\n      var subscribers = getChildSubscribers(eventName);\n      if (!subscribers) {\n        throw new Error(`Invalid event name \"${eventName}\"`);\n      }\n      subscribers.add(eventHandler);\n      var remove = () => {\n        subscribers.delete(eventHandler);\n      };\n      return { remove };\n    },\n    emit(eventName, payload) {\n      if (eventName !== 'refocus') {\n        console.error(`navigation.emit only supports the 'refocus' event currently.`);\n        return;\n      }\n      emit(eventName, payload);\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}