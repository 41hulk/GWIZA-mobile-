{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.CheckBox=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName=\"src/basic/Checkbox.js\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require(\"react\");var _react2=_interopRequireDefault(_react);var _propTypes=require(\"prop-types\");var _propTypes2=_interopRequireDefault(_propTypes);var _reactNative=require(\"react-native\");var _Ionicons=require(\"@expo/vector-icons/Ionicons\");var _Ionicons2=_interopRequireDefault(_Ionicons);var _nativeBaseShoutemTheme=require(\"native-base-shoutem-theme\");var _mapPropsToStyleNames=require(\"../utils/mapPropsToStyleNames\");var _mapPropsToStyleNames2=_interopRequireDefault(_mapPropsToStyleNames);var _platform=require(\"../theme/variables/platform\");var _platform2=_interopRequireDefault(_platform);var _lodash=require(\"lodash\");var _lodash2=_interopRequireDefault(_lodash);var _computeProps=require(\"../utils/computeProps\");var _computeProps2=_interopRequireDefault(_computeProps);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var CheckBox=function(_Component){_inherits(CheckBox,_Component);function CheckBox(){_classCallCheck(this,CheckBox);return _possibleConstructorReturn(this,(CheckBox.__proto__||Object.getPrototypeOf(CheckBox)).apply(this,arguments));}_createClass(CheckBox,[{key:\"getInitialStyle\",value:function getInitialStyle(variables){return{checkStyle:{borderColor:this.props.color?this.props.color:variables.checkboxBgColor,backgroundColor:this.props.checked===true?this.props.color?this.props.color:variables.checkboxBgColor:\"transparent\"}};}},{key:\"prepareRootProps\",value:function prepareRootProps(variables){var defaultProps={style:this.getInitialStyle(variables).checkStyle};return(0,_computeProps2.default)(this.props,defaultProps);}},{key:\"render\",value:function render(){var _this2=this;var variables=this.context.theme?this.context.theme[\"@@shoutem.theme/themeStyle\"].variables:_platform2.default;var platformStyle=variables.platformStyle;var platform=variables.platform;return _react2.default.createElement(_reactNative.TouchableOpacity,_extends({ref:function ref(c){return _this2._root=c;}},this.prepareRootProps(variables),{__source:{fileName:_jsxFileName,lineNumber:40}}),_react2.default.createElement(_Ionicons2.default,{style:{color:this.props.checked===true?variables.checkboxTickColor:\"transparent\",fontSize:variables.CheckboxFontSize,lineHeight:variables.CheckboxIconSize,marginTop:variables.CheckboxIconMarginTop,textShadowRadius:0},name:platform===\"ios\"&&platformStyle!==\"material\"?\"ios-checkmark\":\"md-checkmark\",__source:{fileName:_jsxFileName,lineNumber:41}}));}}]);return CheckBox;}(_react.Component);CheckBox.contextTypes={theme:_propTypes2.default.object};CheckBox.propTypes=_extends({},_reactNative.TouchableOpacity.propTypes,{style:_propTypes2.default.oneOfType([_propTypes2.default.object,_propTypes2.default.number,_propTypes2.default.array]),checked:_propTypes2.default.bool,onPress:_propTypes2.default.func});var StyledCheckBox=(0,_nativeBaseShoutemTheme.connectStyle)(\"NativeBase.CheckBox\",{},_mapPropsToStyleNames2.default)(CheckBox);exports.CheckBox=StyledCheckBox;","map":{"version":3,"sources":["../../../src/basic/Checkbox.js"],"names":["CheckBox","Component","contextTypes","theme","PropTypes","variables","checkStyle","borderColor","backgroundColor","defaultProps","style","variable","platformStyle","platform","color","fontSize","lineHeight","marginTop","textShadowRadius","TouchableOpacity","checked","onPress","StyledCheckBox","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TouchableOpacity, Platform } from \"react-native\";\nimport IconNB from \"react-native-vector-icons/Ionicons\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\nimport variable from \"../theme/variables/platform\";\nimport _ from \"lodash\";\nimport computeProps from \"../utils/computeProps\";\n\nclass CheckBox extends Component {\n  static contextTypes = {\n    theme: PropTypes.object,\n  };\n\n  getInitialStyle(variables) {\n    return {\n      checkStyle: {\n        borderColor: this.props.color ? this.props.color : variables.checkboxBgColor,\n        backgroundColor:\n          this.props.checked === true\n            ? this.props.color ? this.props.color : variables.checkboxBgColor\n            : \"transparent\",\n      },\n    };\n  }\n\n  prepareRootProps(variables) {\n    const defaultProps = {\n      style: this.getInitialStyle(variables).checkStyle,\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n  render() {\n    const variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n    return (\n      <TouchableOpacity ref={c => (this._root = c)} {...this.prepareRootProps(variables)}>\n        <IconNB\n          style={{\n            color: this.props.checked === true ? variables.checkboxTickColor : \"transparent\",\n            fontSize: variables.CheckboxFontSize,\n            lineHeight: variables.CheckboxIconSize,\n            marginTop: variables.CheckboxIconMarginTop,\n            textShadowRadius: 0\n          }}\n          name={platform === \"ios\" && platformStyle !== \"material\" ? \"ios-checkmark\" : \"md-checkmark\"}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n\nCheckBox.propTypes = {\n  ...TouchableOpacity.propTypes,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  checked: PropTypes.bool,\n  onPress: PropTypes.func,\n};\n\nconst StyledCheckBox = connectStyle(\"NativeBase.CheckBox\", {}, mapPropsToStyleNames)(CheckBox);\n\nexport { StyledCheckBox as CheckBox };\n"]},"metadata":{},"sourceType":"script"}