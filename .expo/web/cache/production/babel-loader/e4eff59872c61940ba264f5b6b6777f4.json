{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _RemoteLogging=_interopRequireDefault(require(\"./RemoteLogging\"));function createRemoteConsole(originalConsole){var groupDepth=0;var enhancedConsole=Object.create(originalConsole);_defineConsoleLogMethod('debug','info');_defineConsoleLogMethod('log','info');_defineConsoleLogMethod('info','info');_defineConsoleLogMethod('warn','warn');_defineConsoleLogMethod('error','error');enhancedConsole.assert=function assert(condition){for(var _len=arguments.length,data=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){data[_key-1]=arguments[_key];}if(originalConsole.assert){originalConsole.assert.apply(originalConsole,[!!condition].concat(data));}if(condition){return;}var assertionMessage='Assertion failed';if(!data.length){data.push(assertionMessage);}else{if(typeof data[0]!=='string'){data.unshift(assertionMessage);}else{data[0]=assertionMessage+\": \"+data[0];}}_enqueueRemoteLog('error',{},data);};enhancedConsole.group=function group(){for(var _len2=arguments.length,data=new Array(_len2),_key2=0;_key2<_len2;_key2++){data[_key2]=arguments[_key2];}if(originalConsole.group){originalConsole.group.apply(originalConsole,data);}_enqueueRemoteLog('info',{},data);groupDepth++;};enhancedConsole.groupCollapsed=function groupCollapsed(){for(var _len3=arguments.length,data=new Array(_len3),_key3=0;_key3<_len3;_key3++){data[_key3]=arguments[_key3];}if(originalConsole.groupCollapsed){originalConsole.groupCollapsed.apply(originalConsole,data);}_enqueueRemoteLog('info',{groupCollapsed:true},data);groupDepth++;};enhancedConsole.groupEnd=function groupEnd(){if(originalConsole.groupEnd){originalConsole.groupEnd();}if(groupDepth>0){groupDepth--;}_enqueueRemoteLog('info',{shouldHide:true},[]);};function _defineConsoleLogMethod(name,level){enhancedConsole[name]=function __expoConsoleLog(){var originalMethod=originalConsole[name];for(var _len4=arguments.length,data=new Array(_len4),_key4=0;_key4<_len4;_key4++){data[_key4]=arguments[_key4];}if(typeof originalMethod==='function'){originalMethod.apply(originalConsole,data);}_enqueueRemoteLog(level,{},data);};}function _enqueueRemoteLog(level,additionalFields,data){_RemoteLogging.default.enqueueRemoteLogAsync(level,(0,_objectSpread2.default)({groupDepth:groupDepth},additionalFields),data).catch(function(error){originalConsole.error(\"There was a problem sending log messages to your development environment\",error);});}return enhancedConsole;}var _default={createRemoteConsole:createRemoteConsole};exports.default=_default;","map":{"version":3,"sources":["../../src/logs/RemoteConsole.ts"],"names":[],"mappings":"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","sourcesContent":["import RemoteLogging, { LogEntryFields, LogLevel } from './RemoteLogging';\n\ntype ReactConsole = typeof console;\n\n// error(message?: any, ...optionalParams: any[]): void;\n// info(message?: any, ...optionalParams: any[]): void;\n// log(message?: any, ...optionalParams: any[]): void;\n// warn(message?: any, ...optionalParams: any[]): void;\n// trace(message?: any, ...optionalParams: any[]): void;\n// debug(message?: any, ...optionalParams: any[]): void;\n// table(...data: any[]): void;\n// disableYellowBox: boolean;\n// ignoredYellowBox: string[];\n\n/**\n * Creates a console object that delegates calls to the specified underlying console and also sends\n * the messages to the development environment over a remote connection.\n */\nfunction createRemoteConsole(originalConsole: Console): Console {\n  let groupDepth = 0;\n\n  const enhancedConsole: typeof originalConsole = Object.create(originalConsole);\n\n  // https://console.spec.whatwg.org/#debug\n  // Don't use a level below \"info\" because \"debug\" is intended for messages that shouldn't be shown\n  // to the developer\n  _defineConsoleLogMethod('debug', 'info');\n\n  // https://console.spec.whatwg.org/#log\n  _defineConsoleLogMethod('log', 'info');\n\n  // https://console.spec.whatwg.org/#info\n  _defineConsoleLogMethod('info', 'info');\n\n  // https://console.spec.whatwg.org/#warn\n  _defineConsoleLogMethod('warn', 'warn');\n\n  // https://console.spec.whatwg.org/#error\n  _defineConsoleLogMethod('error', 'error');\n\n  // https://console.spec.whatwg.org/#assert\n  enhancedConsole.assert = function assert(condition: unknown, ...data: unknown[]): void {\n    if (originalConsole.assert) {\n      // @ts-ignore\n      originalConsole.assert(!!condition, ...data);\n    }\n\n    if (condition) {\n      return;\n    }\n\n    const assertionMessage = 'Assertion failed';\n    if (!data.length) {\n      data.push(assertionMessage);\n    } else {\n      if (typeof data[0] !== 'string') {\n        data.unshift(assertionMessage);\n      } else {\n        data[0] = `${assertionMessage}: ${data[0]}`;\n      }\n    }\n\n    _enqueueRemoteLog('error', {}, data);\n  };\n\n  // https://console.spec.whatwg.org/#group\n  enhancedConsole.group = function group(...data: unknown[]): void {\n    if (originalConsole.group) {\n      // @ts-ignore\n      originalConsole.group(...data);\n    }\n\n    _enqueueRemoteLog('info', {}, data);\n    groupDepth++;\n  };\n\n  // https://console.spec.whatwg.org/#groupcollapsed\n  enhancedConsole.groupCollapsed = function groupCollapsed(...data: unknown[]): void {\n    if (originalConsole.groupCollapsed) {\n      // @ts-ignore\n      originalConsole.groupCollapsed(...data);\n    }\n\n    _enqueueRemoteLog('info', { groupCollapsed: true }, data);\n    groupDepth++;\n  };\n\n  // https://console.spec.whatwg.org/#groupend\n  enhancedConsole.groupEnd = function groupEnd(): void {\n    if (originalConsole.groupEnd) {\n      originalConsole.groupEnd();\n    }\n\n    if (groupDepth > 0) {\n      groupDepth--;\n    }\n\n    _enqueueRemoteLog('info', { shouldHide: true }, []);\n  };\n\n  /**\n   * Defines a method in the `console.log()` family on the enhanced console\n   * instance\n   */\n  function _defineConsoleLogMethod(name: keyof typeof console, level: LogLevel): void {\n    enhancedConsole[name] = function __expoConsoleLog(...data: unknown[]): void {\n      let originalMethod = originalConsole[name];\n      if (typeof originalMethod === 'function') {\n        originalMethod.apply(originalConsole, data);\n      }\n\n      _enqueueRemoteLog(level, {}, data);\n    };\n  }\n\n  /**\n   * Schedules the given log entry to be sent remotely in a safe way that handles all errors. This\n   * function is responsible for error handling because the console methods are synchronous but\n   * sending log messages is asynchronous, so this code (instead of the console methods) needs to be\n   * responsible for asynchronous errors.\n   */\n  function _enqueueRemoteLog(\n    level: LogLevel,\n    additionalFields: LogEntryFields,\n    data: unknown[]\n  ): void {\n    RemoteLogging.enqueueRemoteLogAsync(level, { groupDepth, ...additionalFields }, data).catch(\n      error => {\n        originalConsole.error(\n          `There was a problem sending log messages to your development environment`,\n          error\n        );\n      }\n    );\n  }\n\n  return enhancedConsole;\n}\n\nexport default {\n  createRemoteConsole,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}