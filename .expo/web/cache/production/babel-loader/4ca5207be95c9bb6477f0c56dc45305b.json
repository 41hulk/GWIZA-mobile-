{"ast":null,"code":"'use strict';var SamplingProfiler={poke:function poke(token){var error=null;var result=null;try{result=global.pokeSamplingProfiler();if(result===null){console.log('The JSC Sampling Profiler has started');}else{console.log('The JSC Sampling Profiler has stopped');}}catch(e){console.log('Error occurred when restarting Sampling Profiler: '+e.toString());error=e.toString();}var _require=require(\"../BatchedBridge/NativeModules\"),JSCSamplingProfiler=_require.JSCSamplingProfiler;JSCSamplingProfiler.operationComplete(token,result,error);}};module.exports=SamplingProfiler;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native/Libraries/Performance/SamplingProfiler.js"],"names":["SamplingProfiler","poke","token","error","result","global","pokeSamplingProfiler","console","log","e","toString","require","JSCSamplingProfiler","operationComplete","module","exports"],"mappings":"AAUA,aAEA,GAAMA,CAAAA,gBAAgB,CAAG,CACvBC,IAAI,CAAE,cAASC,KAAT,CAA8B,CAClC,GAAIC,CAAAA,KAAK,CAAG,IAAZ,CACA,GAAIC,CAAAA,MAAM,CAAG,IAAb,CACA,GAAI,CACFA,MAAM,CAAGC,MAAM,CAACC,oBAAP,EAAT,CACA,GAAIF,MAAM,GAAK,IAAf,CAAqB,CACnBG,OAAO,CAACC,GAAR,CAAY,uCAAZ,EACD,CAFD,IAEO,CACLD,OAAO,CAACC,GAAR,CAAY,uCAAZ,EACD,CACF,CAAC,MAAOC,CAAP,CAAU,CACVF,OAAO,CAACC,GAAR,CACE,qDAAuDC,CAAC,CAACC,QAAF,EADzD,EAGAP,KAAK,CAAGM,CAAC,CAACC,QAAF,EAAR,CACD,CAfiC,aAiBJC,OAAO,kCAjBH,CAiB3BC,mBAjB2B,UAiB3BA,mBAjB2B,CAkBlCA,mBAAmB,CAACC,iBAApB,CAAsCX,KAAtC,CAA6CE,MAA7C,CAAqDD,KAArD,EACD,CApBsB,CAAzB,CAuBAW,MAAM,CAACC,OAAP,CAAiBf,gBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst SamplingProfiler = {\n  poke: function(token: number): void {\n    let error = null;\n    let result = null;\n    try {\n      result = global.pokeSamplingProfiler();\n      if (result === null) {\n        console.log('The JSC Sampling Profiler has started');\n      } else {\n        console.log('The JSC Sampling Profiler has stopped');\n      }\n    } catch (e) {\n      console.log(\n        'Error occurred when restarting Sampling Profiler: ' + e.toString(),\n      );\n      error = e.toString();\n    }\n\n    const {JSCSamplingProfiler} = require('../BatchedBridge/NativeModules');\n    JSCSamplingProfiler.operationComplete(token, result, error);\n  },\n};\n\nmodule.exports = SamplingProfiler;\n"]},"metadata":{},"sourceType":"script"}