{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=takeSnapshotAsync;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _reactNativeViewShot=require(\"react-native-view-shot\");function takeSnapshotAsync(node,options){return _regenerator.default.async(function takeSnapshotAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",(0,_reactNativeViewShot.captureRef)(node,options));case 1:case\"end\":return _context.stop();}}},null,this);}","map":{"version":3,"sources":["../src/takeSnapshotAsync.ts"],"names":[],"mappings":"6PACA,2DAae,QAAe,CAAA,iBAAf,CACb,IADa,CAEb,OAFa,8JAIN,oCAAW,IAAX,CAAiB,OAAjB,CAJM","sourcesContent":["import * as React from 'react';\nimport { captureRef } from 'react-native-view-shot';\n\ntype ReactNativeNodeHandle = number;\n\ntype SnapshotOptions = {\n  width?: number;\n  height?: number;\n  format: 'png' | 'jpg' | 'raw' | 'webm';\n  quality: number;\n  snapshotContentContainer: boolean;\n  result: \"tmpfile\" | \"base64\" | \"data-uri\" | \"zip-base64\";\n};\n\nexport default async function takeSnapshotAsync(\n  node: ReactNativeNodeHandle | React.Component,\n  options?: SnapshotOptions\n): Promise<string> {\n  return captureRef(node, options);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}