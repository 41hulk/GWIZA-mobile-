{"ast":null,"code":"'use strict';module.exports={get StateUtils(){return require(\"./StateUtils\").default;},get getNavigation(){return require(\"./getNavigation\").default;},get createNavigator(){return require(\"./navigators/createNavigator\").default;},get NavigationContext(){return require(\"./views/NavigationContext\").default;},get NavigationProvider(){return require(\"./views/NavigationContext\").default.Provider;},get NavigationConsumer(){return require(\"./views/NavigationContext\").default.Consumer;},get createSwitchNavigator(){return require(\"./navigators/createSwitchNavigator\").default;},get NavigationActions(){return require(\"./NavigationActions\").default;},get StackActions(){return require(\"./routers/StackActions\").default;},get StackRouter(){return require(\"./routers/StackRouter\").default;},get TabRouter(){return require(\"./routers/TabRouter\").default;},get SwitchRouter(){return require(\"./routers/SwitchRouter\").default;},get createConfigGetter(){return require(\"./routers/createConfigGetter\").default;},get getScreenForRouteName(){return require(\"./routers/getScreenForRouteName\").default;},get validateRouteConfigMap(){return require(\"./routers/validateRouteConfigMap\").default;},get getActiveChildNavigationOptions(){return require(\"./utils/getActiveChildNavigationOptions\").default;},get pathUtils(){return require(\"./routers/pathUtils\");},get SceneView(){return require(\"./views/SceneView\").default;},get SwitchView(){return require(\"./views/SwitchView/SwitchView\").default;},get NavigationEvents(){return require(\"./views/NavigationEvents\").default;},get withNavigation(){return require(\"./views/withNavigation\").default;},get withNavigationFocus(){return require(\"./views/withNavigationFocus\").default;}};","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/@react-navigation/core/dist/index.js"],"names":["module","exports","StateUtils","require","default","getNavigation","createNavigator","NavigationContext","NavigationProvider","Provider","NavigationConsumer","Consumer","createSwitchNavigator","NavigationActions","StackActions","StackRouter","TabRouter","SwitchRouter","createConfigGetter","getScreenForRouteName","validateRouteConfigMap","getActiveChildNavigationOptions","pathUtils","SceneView","SwitchView","NavigationEvents","withNavigation","withNavigationFocus"],"mappings":"AAAA,aAIAA,MAAM,CAACC,OAAP,CAAiB,CACf,GAAIC,CAAAA,UAAJ,EAAiB,CACf,MAAOC,CAAAA,OAAO,gBAAP,CAAwBC,OAA/B,CACD,CAHc,CAIf,GAAIC,CAAAA,aAAJ,EAAoB,CAClB,MAAOF,CAAAA,OAAO,mBAAP,CAA2BC,OAAlC,CACD,CANc,CASf,GAAIE,CAAAA,eAAJ,EAAsB,CACpB,MAAOH,CAAAA,OAAO,gCAAP,CAAwCC,OAA/C,CACD,CAXc,CAYf,GAAIG,CAAAA,iBAAJ,EAAwB,CACtB,MAAOJ,CAAAA,OAAO,6BAAP,CAAqCC,OAA5C,CACD,CAdc,CAef,GAAII,CAAAA,kBAAJ,EAAyB,CACvB,MAAOL,CAAAA,OAAO,6BAAP,CAAqCC,OAArC,CAA6CK,QAApD,CACD,CAjBc,CAkBf,GAAIC,CAAAA,kBAAJ,EAAyB,CACvB,MAAOP,CAAAA,OAAO,6BAAP,CAAqCC,OAArC,CAA6CO,QAApD,CACD,CApBc,CAsBf,GAAIC,CAAAA,qBAAJ,EAA4B,CAC1B,MAAOT,CAAAA,OAAO,sCAAP,CAA8CC,OAArD,CACD,CAxBc,CA2Bf,GAAIS,CAAAA,iBAAJ,EAAwB,CACtB,MAAOV,CAAAA,OAAO,uBAAP,CAA+BC,OAAtC,CACD,CA7Bc,CA8Bf,GAAIU,CAAAA,YAAJ,EAAmB,CACjB,MAAOX,CAAAA,OAAO,0BAAP,CAAkCC,OAAzC,CACD,CAhCc,CAmCf,GAAIW,CAAAA,WAAJ,EAAkB,CAChB,MAAOZ,CAAAA,OAAO,yBAAP,CAAiCC,OAAxC,CACD,CArCc,CAsCf,GAAIY,CAAAA,SAAJ,EAAgB,CACd,MAAOb,CAAAA,OAAO,uBAAP,CAA+BC,OAAtC,CACD,CAxCc,CAyCf,GAAIa,CAAAA,YAAJ,EAAmB,CACjB,MAAOd,CAAAA,OAAO,0BAAP,CAAkCC,OAAzC,CACD,CA3Cc,CA6Cf,GAAIc,CAAAA,kBAAJ,EAAyB,CACvB,MAAOf,CAAAA,OAAO,gCAAP,CAAwCC,OAA/C,CACD,CA/Cc,CAgDf,GAAIe,CAAAA,qBAAJ,EAA4B,CAC1B,MAAOhB,CAAAA,OAAO,mCAAP,CAA2CC,OAAlD,CACD,CAlDc,CAmDf,GAAIgB,CAAAA,sBAAJ,EAA6B,CAC3B,MAAOjB,CAAAA,OAAO,oCAAP,CAA4CC,OAAnD,CACD,CArDc,CAwDf,GAAIiB,CAAAA,+BAAJ,EAAsC,CACpC,MAAOlB,CAAAA,OAAO,2CAAP,CAAmDC,OAA1D,CACD,CA1Dc,CA2Df,GAAIkB,CAAAA,SAAJ,EAAgB,CACd,MAAOnB,CAAAA,OAAO,uBAAd,CACD,CA7Dc,CA+Df,GAAIoB,CAAAA,SAAJ,EAAgB,CACd,MAAOpB,CAAAA,OAAO,qBAAP,CAA6BC,OAApC,CACD,CAjEc,CAoEf,GAAIoB,CAAAA,UAAJ,EAAiB,CACf,MAAOrB,CAAAA,OAAO,iCAAP,CAAyCC,OAAhD,CACD,CAtEc,CAyEf,GAAIqB,CAAAA,gBAAJ,EAAuB,CACrB,MAAOtB,CAAAA,OAAO,4BAAP,CAAoCC,OAA3C,CACD,CA3Ec,CA8Ef,GAAIsB,CAAAA,cAAJ,EAAqB,CACnB,MAAOvB,CAAAA,OAAO,0BAAP,CAAkCC,OAAzC,CACD,CAhFc,CAiFf,GAAIuB,CAAAA,mBAAJ,EAA0B,CACxB,MAAOxB,CAAAA,OAAO,+BAAP,CAAuCC,OAA9C,CACD,CAnFc,CAAjB","sourcesContent":["'use strict';\n\n/* eslint-disable import/no-commonjs */\n\nmodule.exports = {\n  get StateUtils() {\n    return require('./StateUtils').default;\n  },\n  get getNavigation() {\n    return require('./getNavigation').default;\n  },\n\n  // Navigators\n  get createNavigator() {\n    return require('./navigators/createNavigator').default;\n  },\n  get NavigationContext() {\n    return require('./views/NavigationContext').default;\n  },\n  get NavigationProvider() {\n    return require('./views/NavigationContext').default.Provider;\n  },\n  get NavigationConsumer() {\n    return require('./views/NavigationContext').default.Consumer;\n  },\n\n  get createSwitchNavigator() {\n    return require('./navigators/createSwitchNavigator').default;\n  },\n\n  // Actions\n  get NavigationActions() {\n    return require('./NavigationActions').default;\n  },\n  get StackActions() {\n    return require('./routers/StackActions').default;\n  },\n\n  // Routers\n  get StackRouter() {\n    return require('./routers/StackRouter').default;\n  },\n  get TabRouter() {\n    return require('./routers/TabRouter').default;\n  },\n  get SwitchRouter() {\n    return require('./routers/SwitchRouter').default;\n  },\n\n  get createConfigGetter() {\n    return require('./routers/createConfigGetter').default;\n  },\n  get getScreenForRouteName() {\n    return require('./routers/getScreenForRouteName').default;\n  },\n  get validateRouteConfigMap() {\n    return require('./routers/validateRouteConfigMap').default;\n  },\n\n  // Utils\n  get getActiveChildNavigationOptions() {\n    return require('./utils/getActiveChildNavigationOptions').default;\n  },\n  get pathUtils() {\n    return require('./routers/pathUtils');\n  },\n\n  get SceneView() {\n    return require('./views/SceneView').default;\n  },\n\n  // SwitchView\n  get SwitchView() {\n    return require('./views/SwitchView/SwitchView').default;\n  },\n\n  // NavigationEvents\n  get NavigationEvents() {\n    return require('./views/NavigationEvents').default;\n  },\n\n  // HOCs\n  get withNavigation() {\n    return require('./views/withNavigation').default;\n  },\n  get withNavigationFocus() {\n    return require('./views/withNavigationFocus').default;\n  }\n};"]},"metadata":{},"sourceType":"script"}