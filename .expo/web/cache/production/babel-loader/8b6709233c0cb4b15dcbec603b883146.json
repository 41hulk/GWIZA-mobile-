{"ast":null,"code":"'use strict';var _regeneratorRuntime=require(\"@babel/runtime/regenerator\");var NativeEventEmitter=require(\"../EventEmitter/NativeEventEmitter\");var RCTLocationObserver=require(\"../BatchedBridge/NativeModules\").LocationObserver;var invariant=require('fbjs/lib/invariant');var logError=require(\"../Utilities/logError\");var warning=require('fbjs/lib/warning');var LocationEventEmitter=new NativeEventEmitter(RCTLocationObserver);var Platform=require(\"../Utilities/Platform\");var PermissionsAndroid=require(\"../PermissionsAndroid/PermissionsAndroid\");var subscriptions=[];var updatesEnabled=false;var Geolocation={setRNConfiguration:function setRNConfiguration(config){if(RCTLocationObserver.setConfiguration){RCTLocationObserver.setConfiguration(config);}},requestAuthorization:function requestAuthorization(){RCTLocationObserver.requestAuthorization();},getCurrentPosition:function getCurrentPosition(geo_success,geo_error,geo_options){var hasPermission,status;return _regeneratorRuntime.async(function getCurrentPosition$(_context){while(1){switch(_context.prev=_context.next){case 0:invariant(typeof geo_success==='function','Must provide a valid geo_success callback.');hasPermission=true;if(!(Platform.OS==='android'&&Platform.Version>=23)){_context.next=11;break;}_context.next=5;return _regeneratorRuntime.awrap(PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION));case 5:hasPermission=_context.sent;if(hasPermission){_context.next=11;break;}_context.next=9;return _regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION));case 9:status=_context.sent;hasPermission=status===PermissionsAndroid.RESULTS.GRANTED;case 11:if(hasPermission){RCTLocationObserver.getCurrentPosition(geo_options||{},geo_success,geo_error||logError);}case 12:case\"end\":return _context.stop();}}},null,this);},watchPosition:function watchPosition(success,error,options){if(!updatesEnabled){RCTLocationObserver.startObserving(options||{});updatesEnabled=true;}var watchID=subscriptions.length;subscriptions.push([LocationEventEmitter.addListener('geolocationDidChange',success),error?LocationEventEmitter.addListener('geolocationError',error):null]);return watchID;},clearWatch:function clearWatch(watchID){var sub=subscriptions[watchID];if(!sub){return;}sub[0].remove();var sub1=sub[1];sub1&&sub1.remove();subscriptions[watchID]=undefined;var noWatchers=true;for(var ii=0;ii<subscriptions.length;ii++){if(subscriptions[ii]){noWatchers=false;}}if(noWatchers){Geolocation.stopObserving();}},stopObserving:function stopObserving(){if(updatesEnabled){RCTLocationObserver.stopObserving();updatesEnabled=false;for(var ii=0;ii<subscriptions.length;ii++){var sub=subscriptions[ii];if(sub){warning(false,'Called stopObserving with existing subscriptions.');sub[0].remove();var sub1=sub[1];sub1&&sub1.remove();}}subscriptions=[];}}};module.exports=Geolocation;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native/Libraries/Geolocation/Geolocation.js"],"names":["NativeEventEmitter","require","RCTLocationObserver","LocationObserver","invariant","logError","warning","LocationEventEmitter","Platform","PermissionsAndroid","subscriptions","updatesEnabled","Geolocation","setRNConfiguration","config","setConfiguration","requestAuthorization","getCurrentPosition","geo_success","geo_error","geo_options","hasPermission","OS","Version","check","PERMISSIONS","ACCESS_FINE_LOCATION","request","status","RESULTS","GRANTED","watchPosition","success","error","options","startObserving","watchID","length","push","addListener","clearWatch","sub","remove","sub1","undefined","noWatchers","ii","stopObserving","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst NativeEventEmitter = require('../EventEmitter/NativeEventEmitter');\nconst RCTLocationObserver = require('../BatchedBridge/NativeModules').LocationObserver;\n\nconst invariant = require('fbjs/lib/invariant');\nconst logError = require('../Utilities/logError');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst warning = require('fbjs/lib/warning');\n\nconst LocationEventEmitter = new NativeEventEmitter(RCTLocationObserver);\n\nconst Platform = require('../Utilities/Platform');\nconst PermissionsAndroid = require('../PermissionsAndroid/PermissionsAndroid');\n\nlet subscriptions = [];\nlet updatesEnabled = false;\n\ntype GeoConfiguration = {\n  skipPermissionRequests: boolean,\n};\n\ntype GeoOptions = {\n  timeout?: number,\n  maximumAge?: number,\n  enableHighAccuracy?: boolean,\n  distanceFilter: number,\n  useSignificantChanges?: boolean,\n};\n\n/**\n * The Geolocation API extends the web spec:\n * https://developer.mozilla.org/en-US/docs/Web/API/Geolocation\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html\n */\nconst Geolocation = {\n  /*\n    * Sets configuration options that will be used in all location requests.\n    *\n    * See https://facebook.github.io/react-native/docs/geolocation.html#setrnconfiguration\n    *\n    */\n  setRNConfiguration: function(config: GeoConfiguration) {\n    if (RCTLocationObserver.setConfiguration) {\n      RCTLocationObserver.setConfiguration(config);\n    }\n  },\n\n  /*\n   * Request suitable Location permission based on the key configured on pList.\n   *\n   * See https://facebook.github.io/react-native/docs/geolocation.html#requestauthorization\n   */\n  requestAuthorization: function() {\n    RCTLocationObserver.requestAuthorization();\n  },\n\n  /*\n   * Invokes the success callback once with the latest location info.\n   *\n   * See https://facebook.github.io/react-native/docs/geolocation.html#getcurrentposition\n   */\n  getCurrentPosition: async function(\n    geo_success: Function,\n    geo_error?: Function,\n    geo_options?: GeoOptions,\n  ) {\n    invariant(\n      typeof geo_success === 'function',\n      'Must provide a valid geo_success callback.',\n    );\n    let hasPermission = true;\n    // Supports Android's new permission model. For Android older devices,\n    // it's always on.\n    if (Platform.OS === 'android' && Platform.Version >= 23) {\n      hasPermission = await PermissionsAndroid.check(\n        PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\n      );\n      if (!hasPermission) {\n        const status = await PermissionsAndroid.request(\n          PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\n        );\n        hasPermission = status === PermissionsAndroid.RESULTS.GRANTED;\n      }\n    }\n    if (hasPermission) {\n      RCTLocationObserver.getCurrentPosition(\n        geo_options || {},\n        geo_success,\n        geo_error || logError,\n      );\n    }\n  },\n\n  /*\n   * Invokes the success callback whenever the location changes.\n   *\n   * See https://facebook.github.io/react-native/docs/geolocation.html#watchposition\n   */\n  watchPosition: function(\n    success: Function,\n    error?: Function,\n    options?: GeoOptions,\n  ): number {\n    if (!updatesEnabled) {\n      RCTLocationObserver.startObserving(options || {});\n      updatesEnabled = true;\n    }\n    const watchID = subscriptions.length;\n    subscriptions.push([\n      LocationEventEmitter.addListener('geolocationDidChange', success),\n      error\n        ? LocationEventEmitter.addListener('geolocationError', error)\n        : null,\n    ]);\n    return watchID;\n  },\n\n  clearWatch: function(watchID: number) {\n    const sub = subscriptions[watchID];\n    if (!sub) {\n      // Silently exit when the watchID is invalid or already cleared\n      // This is consistent with timers\n      return;\n    }\n\n    sub[0].remove();\n    // array element refinements not yet enabled in Flow\n    const sub1 = sub[1];\n    sub1 && sub1.remove();\n    subscriptions[watchID] = undefined;\n    let noWatchers = true;\n    for (let ii = 0; ii < subscriptions.length; ii++) {\n      if (subscriptions[ii]) {\n        noWatchers = false; // still valid subscriptions\n      }\n    }\n    if (noWatchers) {\n      Geolocation.stopObserving();\n    }\n  },\n\n  stopObserving: function() {\n    if (updatesEnabled) {\n      RCTLocationObserver.stopObserving();\n      updatesEnabled = false;\n      for (let ii = 0; ii < subscriptions.length; ii++) {\n        const sub = subscriptions[ii];\n        if (sub) {\n          warning(false, 'Called stopObserving with existing subscriptions.');\n          sub[0].remove();\n          // array element refinements not yet enabled in Flow\n          const sub1 = sub[1];\n          sub1 && sub1.remove();\n        }\n      }\n      subscriptions = [];\n    }\n  },\n};\n\nmodule.exports = Geolocation;\n"]},"metadata":{},"sourceType":"script"}