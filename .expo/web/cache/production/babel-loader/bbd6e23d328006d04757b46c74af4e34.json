{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _reactNative=require(\"react-native\");var _StackViewStyleInterpolator=_interopRequireDefault(require(\"./StackViewStyleInterpolator\"));var _ReactNativeFeatures=require(\"../../utils/ReactNativeFeatures\");var IOSTransitionSpec;if((0,_ReactNativeFeatures.supportsImprovedSpringAnimation)()){IOSTransitionSpec={timing:_reactNative.Animated.spring,stiffness:1000,damping:500,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01};}else{IOSTransitionSpec={duration:500,easing:_reactNative.Easing.bezier(0.2833,0.99,0.31833,0.99),timing:_reactNative.Animated.timing};}var SlideFromRightIOS={transitionSpec:IOSTransitionSpec,screenInterpolator:_StackViewStyleInterpolator.default.forHorizontal,containerStyle:{backgroundColor:'#eee'}};var ModalSlideFromBottomIOS={transitionSpec:IOSTransitionSpec,screenInterpolator:_StackViewStyleInterpolator.default.forVertical,containerStyle:{backgroundColor:'#eee'}};var FadeInFromBottomAndroid={transitionSpec:{duration:350,easing:_reactNative.Easing.out(_reactNative.Easing.poly(5)),timing:_reactNative.Animated.timing},screenInterpolator:_StackViewStyleInterpolator.default.forFadeFromBottomAndroid};var FadeOutToBottomAndroid={transitionSpec:{duration:150,easing:_reactNative.Easing.in(_reactNative.Easing.linear),timing:_reactNative.Animated.timing},screenInterpolator:_StackViewStyleInterpolator.default.forFadeToBottomAndroid};function defaultTransitionConfig(transitionProps,prevTransitionProps,isModal){if(_reactNative.Platform.OS==='android'){if(prevTransitionProps&&transitionProps.index<prevTransitionProps.index){return FadeOutToBottomAndroid;}return FadeInFromBottomAndroid;}if(isModal){return ModalSlideFromBottomIOS;}return SlideFromRightIOS;}function getTransitionConfig(transitionConfigurer,transitionProps,prevTransitionProps,isModal){var defaultConfig=defaultTransitionConfig(transitionProps,prevTransitionProps,isModal);if(transitionConfigurer){return(0,_objectSpread2.default)({},defaultConfig,transitionConfigurer(transitionProps,prevTransitionProps,isModal));}return defaultConfig;}var _default={defaultTransitionConfig:defaultTransitionConfig,getTransitionConfig:getTransitionConfig,SlideFromRightIOS:SlideFromRightIOS,ModalSlideFromBottomIOS:ModalSlideFromBottomIOS,FadeInFromBottomAndroid:FadeInFromBottomAndroid,FadeOutToBottomAndroid:FadeOutToBottomAndroid};exports.default=_default;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-navigation-stack/dist/views/StackView/StackViewTransitionConfigs.js"],"names":["IOSTransitionSpec","timing","Animated","spring","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","duration","easing","Easing","bezier","SlideFromRightIOS","transitionSpec","screenInterpolator","StyleInterpolator","forHorizontal","containerStyle","backgroundColor","ModalSlideFromBottomIOS","forVertical","FadeInFromBottomAndroid","out","poly","forFadeFromBottomAndroid","FadeOutToBottomAndroid","in","linear","forFadeToBottomAndroid","defaultTransitionConfig","transitionProps","prevTransitionProps","isModal","Platform","OS","index","getTransitionConfig","transitionConfigurer","defaultConfig"],"mappings":"6PAAA,yCACA,gGACA,oEAEA,GAAIA,CAAAA,iBAAJ,CACA,GAAI,0DAAJ,CAAuC,CAErCA,iBAAiB,CAAG,CAClBC,MAAM,CAAEC,sBAASC,MADC,CAElBC,SAAS,CAAE,IAFO,CAGlBC,OAAO,CAAE,GAHS,CAIlBC,IAAI,CAAE,CAJY,CAKlBC,iBAAiB,CAAE,IALD,CAMlBC,yBAAyB,CAAE,IANT,CAOlBC,kBAAkB,CAAE,IAPF,CAApB,CASD,CAXD,IAWO,CAELT,iBAAiB,CAAG,CAClBU,QAAQ,CAAE,GADQ,CAElBC,MAAM,CAAEC,oBAAOC,MAAP,CAAc,MAAd,CAAsB,IAAtB,CAA4B,OAA5B,CAAqC,IAArC,CAFU,CAGlBZ,MAAM,CAAEC,sBAASD,MAHC,CAApB,CAKD,CAGD,GAAMa,CAAAA,iBAAiB,CAAG,CACxBC,cAAc,CAAEf,iBADQ,CAExBgB,kBAAkB,CAAEC,oCAAkBC,aAFd,CAGxBC,cAAc,CAAE,CACdC,eAAe,CAAE,MADH,CAHQ,CAA1B,CASA,GAAMC,CAAAA,uBAAuB,CAAG,CAC9BN,cAAc,CAAEf,iBADc,CAE9BgB,kBAAkB,CAAEC,oCAAkBK,WAFR,CAG9BH,cAAc,CAAE,CACdC,eAAe,CAAE,MADH,CAHc,CAAhC,CASA,GAAMG,CAAAA,uBAAuB,CAAG,CAE9BR,cAAc,CAAE,CACdL,QAAQ,CAAE,GADI,CAEdC,MAAM,CAAEC,oBAAOY,GAAP,CAAWZ,oBAAOa,IAAP,CAAY,CAAZ,CAAX,CAFM,CAGdxB,MAAM,CAAEC,sBAASD,MAHH,CAFc,CAO9Be,kBAAkB,CAAEC,oCAAkBS,wBAPR,CAAhC,CAWA,GAAMC,CAAAA,sBAAsB,CAAG,CAE7BZ,cAAc,CAAE,CACdL,QAAQ,CAAE,GADI,CAEdC,MAAM,CAAEC,oBAAOgB,EAAP,CAAUhB,oBAAOiB,MAAjB,CAFM,CAGd5B,MAAM,CAAEC,sBAASD,MAHH,CAFa,CAO7Be,kBAAkB,CAAEC,oCAAkBa,sBAPT,CAA/B,CAUA,QAASC,CAAAA,uBAAT,CAAiCC,eAAjC,CAAkDC,mBAAlD,CAAuEC,OAAvE,CAAgF,CAC9E,GAAIC,sBAASC,EAAT,GAAgB,SAApB,CAA+B,CAG7B,GAAIH,mBAAmB,EAAID,eAAe,CAACK,KAAhB,CAAwBJ,mBAAmB,CAACI,KAAvE,CAA8E,CAE5E,MAAOV,CAAAA,sBAAP,CACD,CACD,MAAOJ,CAAAA,uBAAP,CACD,CAED,GAAIW,OAAJ,CAAa,CACX,MAAOb,CAAAA,uBAAP,CACD,CACD,MAAOP,CAAAA,iBAAP,CACD,CAED,QAASwB,CAAAA,mBAAT,CAA6BC,oBAA7B,CAAmDP,eAAnD,CAAoEC,mBAApE,CAAyFC,OAAzF,CAAkG,CAChG,GAAMM,CAAAA,aAAa,CAAGT,uBAAuB,CAACC,eAAD,CAAkBC,mBAAlB,CAAuCC,OAAvC,CAA7C,CACA,GAAIK,oBAAJ,CAA0B,CACxB,oCACKC,aADL,CAEKD,oBAAoB,CAACP,eAAD,CAAkBC,mBAAlB,CAAuCC,OAAvC,CAFzB,EAID,CACD,MAAOM,CAAAA,aAAP,CACD,C,aAEc,CACbT,uBAAuB,CAAvBA,uBADa,CAEbO,mBAAmB,CAAnBA,mBAFa,CAGbxB,iBAAiB,CAAjBA,iBAHa,CAIbO,uBAAuB,CAAvBA,uBAJa,CAKbE,uBAAuB,CAAvBA,uBALa,CAMbI,sBAAsB,CAAtBA,sBANa,C","sourcesContent":["import { Animated, Easing, Platform } from 'react-native';\nimport StyleInterpolator from './StackViewStyleInterpolator';\nimport { supportsImprovedSpringAnimation } from '../../utils/ReactNativeFeatures';\n\nlet IOSTransitionSpec;\nif (supportsImprovedSpringAnimation()) {\n  // These are the exact values from UINavigationController's animation configuration\n  IOSTransitionSpec = {\n    timing: Animated.spring,\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01\n  };\n} else {\n  // This is an approximation of the IOS spring animation using a derived bezier curve\n  IOSTransitionSpec = {\n    duration: 500,\n    easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    timing: Animated.timing\n  };\n}\n\n// Standard iOS navigation transition\nconst SlideFromRightIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forHorizontal,\n  containerStyle: {\n    backgroundColor: '#eee'\n  }\n};\n\n// Standard iOS navigation transition for modals\nconst ModalSlideFromBottomIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forVertical,\n  containerStyle: {\n    backgroundColor: '#eee'\n  }\n};\n\n// Standard Android navigation transition when opening an Activity\nconst FadeInFromBottomAndroid = {\n  // See http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_open_enter.xml\n  transitionSpec: {\n    duration: 350,\n    easing: Easing.out(Easing.poly(5)), // decelerate\n    timing: Animated.timing\n  },\n  screenInterpolator: StyleInterpolator.forFadeFromBottomAndroid\n};\n\n// Standard Android navigation transition when closing an Activity\nconst FadeOutToBottomAndroid = {\n  // See http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_close_exit.xml\n  transitionSpec: {\n    duration: 150,\n    easing: Easing.in(Easing.linear), // accelerate\n    timing: Animated.timing\n  },\n  screenInterpolator: StyleInterpolator.forFadeToBottomAndroid\n};\n\nfunction defaultTransitionConfig(transitionProps, prevTransitionProps, isModal) {\n  if (Platform.OS === 'android') {\n    // Use the default Android animation no matter if the screen is a modal.\n    // Android doesn't have full-screen modals like iOS does, it has dialogs.\n    if (prevTransitionProps && transitionProps.index < prevTransitionProps.index) {\n      // Navigating back to the previous screen\n      return FadeOutToBottomAndroid;\n    }\n    return FadeInFromBottomAndroid;\n  }\n  // iOS and other platforms\n  if (isModal) {\n    return ModalSlideFromBottomIOS;\n  }\n  return SlideFromRightIOS;\n}\n\nfunction getTransitionConfig(transitionConfigurer, transitionProps, prevTransitionProps, isModal) {\n  const defaultConfig = defaultTransitionConfig(transitionProps, prevTransitionProps, isModal);\n  if (transitionConfigurer) {\n    return {\n      ...defaultConfig,\n      ...transitionConfigurer(transitionProps, prevTransitionProps, isModal)\n    };\n  }\n  return defaultConfig;\n}\n\nexport default {\n  defaultTransitionConfig,\n  getTransitionConfig,\n  SlideFromRightIOS,\n  ModalSlideFromBottomIOS,\n  FadeInFromBottomAndroid,\n  FadeOutToBottomAndroid\n};"]},"metadata":{},"sourceType":"script"}