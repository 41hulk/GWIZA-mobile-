{"ast":null,"code":"'use strict';var _extends=require(\"@babel/runtime/helpers/extends\");var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var WebSocketEvent=function WebSocketEvent(type,eventInitDict){_classCallCheck(this,WebSocketEvent);this.type=type.toString();_extends(this,eventInitDict);};module.exports=WebSocketEvent;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native/Libraries/WebSocket/WebSocketEvent.js"],"names":["WebSocketEvent","type","eventInitDict","toString","module","exports"],"mappings":"AASA,a,+HAUMA,CAAAA,c,CACJ,wBAAYC,IAAZ,CAAkBC,aAAlB,CAAiC,sCAC/B,KAAKD,IAAL,CAAYA,IAAI,CAACE,QAAL,EAAZ,CACA,SAAc,IAAd,CAAoBD,aAApB,EACD,C,CAGHE,MAAM,CAACC,OAAP,CAAiBL,cAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\n/**\n * Event object passed to the `onopen`, `onclose`, `onmessage`, `onerror`\n * callbacks of `WebSocket`.\n *\n * The `type` property is \"open\", \"close\", \"message\", \"error\" respectively.\n *\n * In case of \"message\", the `data` property contains the incoming data.\n */\nclass WebSocketEvent {\n  constructor(type, eventInitDict) {\n    this.type = type.toString();\n    Object.assign(this, eventInitDict);\n  }\n}\n\nmodule.exports = WebSocketEvent;\n"]},"metadata":{},"sourceType":"script"}