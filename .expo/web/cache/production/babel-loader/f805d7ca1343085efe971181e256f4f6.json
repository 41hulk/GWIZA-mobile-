{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.logInWithReadPermissionsAsync=logInWithReadPermissionsAsync;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _reactNative=require(\"react-native\");var ExponentFacebook=_reactNative.NativeModules.ExponentFacebook;function logInWithReadPermissionsAsync(appId,options){return _regenerator.default.async(function logInWithReadPermissionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(typeof appId!=='string'){console.warn(\"logInWithReadPermissionsAsync: parameter 'appId' must be a string, was '\"+typeof appId+\"''.\");appId=String(appId);}if(!options||typeof options!=='object'){options={};}return _context.abrupt(\"return\",ExponentFacebook.logInWithReadPermissionsAsync(appId,options));case 3:case\"end\":return _context.stop();}}},null,this);}","map":{"version":3,"sources":["../src/Facebook.ts"],"names":[],"mappings":"+RAAA,yC,GAEQ,CAAA,gB,CAAqB,0B,CAArB,gB,CAaD,QAAe,CAAA,6BAAf,CACL,KADK,CAEL,OAFK,0IAIL,GAAI,MAAO,CAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7B,OAAO,CAAC,IAAR,4EAC6E,MAAO,CAAA,KADpF,QAGA,KAAK,CAAG,MAAM,CAAC,KAAD,CAAd,CACD,CAED,GAAI,CAAC,OAAD,EAAY,MAAO,CAAA,OAAP,GAAmB,QAAnC,CAA6C,CAC3C,OAAO,CAAG,EAAV,CACD,CAbI,gCAcE,gBAAgB,CAAC,6BAAjB,CAA+C,KAA/C,CAAsD,OAAtD,CAdF","sourcesContent":["import { NativeModules } from 'react-native';\n\nconst { ExponentFacebook } = NativeModules;\n\ntype FacebookLoginResult = {\n  type: string;\n  token?: string;\n  expires?: number;\n};\n\ntype FacebookOptions = {\n  permissions?: string[];\n  behavior?: 'web' | 'native' | 'browser' | 'system';\n};\n\nexport async function logInWithReadPermissionsAsync(\n  appId: string,\n  options?: FacebookOptions\n): Promise<FacebookLoginResult> {\n  if (typeof appId !== 'string') {\n    console.warn(\n      `logInWithReadPermissionsAsync: parameter 'appId' must be a string, was '${typeof appId}''.`\n    );\n    appId = String(appId);\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {};\n  }\n  return ExponentFacebook.logInWithReadPermissionsAsync(appId, options);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}