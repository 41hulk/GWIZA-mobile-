{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireDefault(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _reactNative=require(\"react-native\");var _reactNativeGestureHandler=require(\"react-native-gesture-handler\");var AnimatedBaseButton=_reactNative.Animated.createAnimatedComponent(_reactNativeGestureHandler.BaseButton);var BorderlessButton=function(_React$Component){(0,_inherits2.default)(BorderlessButton,_React$Component);function BorderlessButton(props){var _this;(0,_classCallCheck2.default)(this,BorderlessButton);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(BorderlessButton).call(this,props));_this._onActiveStateChange=function(active){if(_reactNative.Platform.OS!=='android'){_reactNative.Animated.spring(_this._opacity,{stiffness:1000,damping:500,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01,toValue:active?_this.props.activeOpacity:1,useNativeDriver:true}).start();}_this.props.onActiveStateChange&&_this.props.onActiveStateChange(active);};_this._opacity=new _reactNative.Animated.Value(1);return _this;}(0,_createClass2.default)(BorderlessButton,[{key:\"render\",value:function render(){var _this$props=this.props,children=_this$props.children,style=_this$props.style,rest=(0,_objectWithoutProperties2.default)(_this$props,[\"children\",\"style\"]);return _react.default.createElement(AnimatedBaseButton,(0,_extends2.default)({},rest,{onActiveStateChange:this._onActiveStateChange,style:[style,_reactNative.Platform.OS==='ios'&&{opacity:this._opacity}]}),children);}}]);return BorderlessButton;}(_react.default.Component);exports.default=BorderlessButton;BorderlessButton.propTypes=(0,_objectSpread2.default)({},_reactNativeGestureHandler.BaseButton.propTypes,{borderless:_propTypes.default.bool});BorderlessButton.defaultProps={activeOpacity:0.3,borderless:true};","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-navigation-stack/dist/views/BorderlessButton.js"],"names":["AnimatedBaseButton","Animated","createAnimatedComponent","BaseButton","BorderlessButton","props","_onActiveStateChange","active","Platform","OS","spring","_opacity","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","toValue","activeOpacity","useNativeDriver","start","onActiveStateChange","Value","children","style","rest","opacity","React","Component","propTypes","borderless","PropTypes","bool","defaultProps"],"mappings":"u5BAAA,oDACA,6DACA,yCACA,uEAEA,GAAMA,CAAAA,kBAAkB,CAAGC,sBAASC,uBAAT,CAAiCC,qCAAjC,CAA3B,C,GAEqBC,CAAAA,gB,sFAWnB,0BAAYC,KAAZ,CAAmB,+DACjB,4GAAMA,KAAN,GADiB,MAKnBC,oBALmB,CAKI,SAAAC,MAAM,CAAI,CAC/B,GAAIC,sBAASC,EAAT,GAAgB,SAApB,CAA+B,CAC7BR,sBAASS,MAAT,CAAgB,MAAKC,QAArB,CAA+B,CAC7BC,SAAS,CAAE,IADkB,CAE7BC,OAAO,CAAE,GAFoB,CAG7BC,IAAI,CAAE,CAHuB,CAI7BC,iBAAiB,CAAE,IAJU,CAK7BC,yBAAyB,CAAE,IALE,CAM7BC,kBAAkB,CAAE,IANS,CAO7BC,OAAO,CAAEX,MAAM,CAAG,MAAKF,KAAL,CAAWc,aAAd,CAA8B,CAPhB,CAQ7BC,eAAe,CAAE,IARY,CAA/B,EASGC,KATH,GAUD,CAED,MAAKhB,KAAL,CAAWiB,mBAAX,EAAkC,MAAKjB,KAAL,CAAWiB,mBAAX,CAA+Bf,MAA/B,CAAlC,CACD,CApBkB,CAEjB,MAAKI,QAAL,CAAgB,GAAIV,uBAASsB,KAAb,CAAmB,CAAnB,CAAhB,CAFiB,aAGlB,C,iFAmBQ,iBAC8B,KAAKlB,KADnC,CACCmB,QADD,aACCA,QADD,CACWC,KADX,aACWA,KADX,CACqBC,IADrB,yEAGP,MAAO,8BAAC,kBAAD,0BAAwBA,IAAxB,EAA8B,mBAAmB,CAAE,KAAKpB,oBAAxD,CAA8E,KAAK,CAAE,CAACmB,KAAD,CAAQjB,sBAASC,EAAT,GAAgB,KAAhB,EAAyB,CAAEkB,OAAO,CAAE,KAAKhB,QAAhB,CAAjC,CAArF,GACFa,QADE,CAAP,CAGD,C,8BAvC2CI,eAAMC,S,mCAA/BzB,gB,CACZ0B,S,+BACF3B,sCAAW2B,S,EACdC,UAAU,CAAEC,mBAAUC,I,GAHL7B,gB,CAMZ8B,Y,CAAe,CACpBf,aAAa,CAAE,GADK,CAEpBY,UAAU,CAAE,IAFQ,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, Platform } from 'react-native';\nimport { BaseButton } from 'react-native-gesture-handler';\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nexport default class BorderlessButton extends React.Component {\n  static propTypes = {\n    ...BaseButton.propTypes,\n    borderless: PropTypes.bool\n  };\n\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      Animated.spring(this._opacity, {\n        stiffness: 1000,\n        damping: 500,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01,\n        toValue: active ? this.props.activeOpacity : 1,\n        useNativeDriver: true\n      }).start();\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return <AnimatedBaseButton {...rest} onActiveStateChange={this._onActiveStateChange} style={[style, Platform.OS === 'ios' && { opacity: this._opacity }]}>\n        {children}\n      </AnimatedBaseButton>;\n  }\n}"]},"metadata":{},"sourceType":"script"}