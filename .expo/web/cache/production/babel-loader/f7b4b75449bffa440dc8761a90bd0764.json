{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.List=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName=\"src/basic/List.js\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require(\"react\");var _react2=_interopRequireDefault(_react);var _reactNative=require(\"react-native\");var _nativeBaseShoutemTheme=require(\"native-base-shoutem-theme\");var _SwipeRow=require(\"./SwipeRow\");var _mapPropsToStyleNames=require(\"../utils/mapPropsToStyleNames\");var _mapPropsToStyleNames2=_interopRequireDefault(_mapPropsToStyleNames);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var List=function(_Component){_inherits(List,_Component);function List(props){_classCallCheck(this,List);var _this=_possibleConstructorReturn(this,(List.__proto__||Object.getPrototypeOf(List)).call(this,props));_this._rows={};_this.openCellId=null;if(props.dataArray&&props.renderRow){var rowHasChanged=props.rowHasChanged||function(r1,r2){return r1!==r2;};var ds=new _reactNative.ListView.DataSource({rowHasChanged:rowHasChanged});_this.state={dataSource:ds.cloneWithRows(props.dataArray)};}else{_this.state={};}return _this;}_createClass(List,[{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(this.state.dataSource){this.setState({dataSource:this.state.dataSource.cloneWithRows(nextProps.dataArray)});}}},{key:\"renderChildren\",value:function renderChildren(){var childrenArray=_react2.default.Children.map(this.props.children,function(child){return child;});return childrenArray;}},{key:\"setScrollEnabled\",value:function setScrollEnabled(enable){this._listView.setNativeProps({scrollEnabled:enable});}},{key:\"safeCloseOpenRow\",value:function safeCloseOpenRow(){if(this._rows[this.openCellId]._root){this._rows[this.openCellId]._root.closeRow();}}},{key:\"rowSwipeGestureBegan\",value:function rowSwipeGestureBegan(id){if(this.props.closeOnRowBeginSwipe&&this.openCellId&&this.openCellId!==id){this.safeCloseOpenRow();}}},{key:\"onRowOpen\",value:function onRowOpen(secId,rowId,rowMap){var cellIdentifier=\"\"+secId+rowId;if(this.openCellId&&this.openCellId!==cellIdentifier){this.safeCloseOpenRow();}this.openCellId=cellIdentifier;this.props.onRowOpen&&this.props.onRowOpen(secId,rowId,rowMap);}},{key:\"onRowPress\",value:function onRowPress(id){if(this.openCellId){if(this.props.closeOnRowPress){this.safeCloseOpenRow();this.openCellId=null;}}}},{key:\"closeRow\",value:function closeRow(id){if(this.openCellId){if(this.props.closeOnRowPress){this.safeCloseOpenRow();this.openCellId=null;}}}},{key:\"openLeftRow\",value:function openLeftRow(id){this._rows[id]._root.openLeftRow();}},{key:\"openRightRow\",value:function openRightRow(id){this._rows[id]._root.openRightRow();}},{key:\"onScroll\",value:function onScroll(e){if(this.openCellId){if(this.props.closeOnScroll){this.safeCloseOpenRow();this.openCellId=null;}}this.props.onScroll&&this.props.onScroll(e);}},{key:\"setRefs\",value:function setRefs(ref){this._listView=ref;this.props.listViewRef&&this.props.listViewRef(ref);}},{key:\"renderRow\",value:function renderRow(rowData,secId,rowId,rowMap){var _this2=this;var previewRowId=this.props.dataSource&&this.props.dataSource.getRowIDForFlatIndex(this.props.previewRowIndex||0);return _react2.default.createElement(_SwipeRow.SwipeRow,{list:true,ref:function ref(row){return _this2._rows[\"\"+secId+rowId]=row;},swipeGestureBegan:function swipeGestureBegan(_){return _this2.rowSwipeGestureBegan(\"\"+secId+rowId);},onRowOpen:function onRowOpen(_){return _this2.onRowOpen(secId,rowId,_this2._rows);},onRowDidOpen:function onRowDidOpen(_){return _this2.props.onRowDidOpen&&_this2.props.onRowDidOpen(secId,rowId,_this2._rows);},onRowClose:function onRowClose(_){return _this2.props.onRowClose&&_this2.props.onRowClose(secId,rowId,_this2._rows);},onRowDidClose:function onRowDidClose(_){return _this2.props.onRowDidClose&&_this2.props.onRowDidClose(secId,rowId,_this2._rows);},onRowPress:function onRowPress(_){return _this2.onRowPress(\"\"+secId+rowId);},openLeftRow:function openLeftRow(_){return _this2.openLeftRow(\"\"+secId+rowId);},openRightRow:function openRightRow(_){return _this2.openRightRow(\"\"+secId+rowId);},closeRow:function closeRow(_){return _this2.closeRow(\"\"+secId+rowId);},setScrollEnabled:function setScrollEnabled(enable){return _this2.setScrollEnabled(enable);},leftOpenValue:this.props.leftOpenValue,rightOpenValue:this.props.rightOpenValue,closeOnRowPress:this.props.closeOnRowPress,disableLeftSwipe:this.props.disableLeftSwipe,disableRightSwipe:this.props.disableRightSwipe,stopLeftSwipe:this.props.stopLeftSwipe,stopRightSwipe:this.props.stopRightSwipe,recalculateHiddenLayout:this.props.recalculateHiddenLayout,style:this.props.swipeRowStyle,preview:(this.props.previewFirstRow||this.props.previewRowIndex)&&rowId===previewRowId,previewDuration:this.props.previewDuration,previewOpenValue:this.props.previewOpenValue,tension:this.props.tension,friction:this.props.friction,directionalDistanceChangeThreshold:this.props.directionalDistanceChangeThreshold,swipeToOpenPercent:this.props.swipeToOpenPercent,left:this.props.renderLeftHiddenRow&&this.props.renderLeftHiddenRow(rowData,secId,rowId,this._rows),right:this.props.renderRightHiddenRow&&this.props.renderRightHiddenRow(rowData,secId,rowId,this._rows),body:this.props.renderRow&&this.props.renderRow(rowData,secId,rowId,this._rows),__source:{fileName:_jsxFileName,lineNumber:129}});}},{key:\"render\",value:function render(){var _this3=this;if(this.props.renderLeftHiddenRow||this.props.renderRightHiddenRow){return _react2.default.createElement(_reactNative.ListView,_extends({},this.props,{ref:function ref(_ref){_this3.setRefs(_ref);_this3._root=_ref;},enableEmptySections:true,onScroll:function onScroll(e){return _this3.onScroll(e);},renderRow:function renderRow(rowData,secId,rowId){return _this3.renderRow(rowData,secId,rowId,_this3._rows);},__source:{fileName:_jsxFileName,lineNumber:190}}));}else if(this.state.dataSource){return _react2.default.createElement(_reactNative.ListView,_extends({},this.props,{ref:function ref(_ref2){return _this3._root=_ref2;},enableEmptySections:true,dataSource:this.state.dataSource,renderRow:this.props.renderRow,__source:{fileName:_jsxFileName,lineNumber:205}}));}return _react2.default.createElement(_reactNative.View,_extends({ref:function ref(c){return _this3._root=c;}},this.props,{__source:{fileName:_jsxFileName,lineNumber:215}}),this.renderChildren());}}]);return List;}(_react.Component);List.defaultProps={leftOpenValue:0,rightOpenValue:0,closeOnRowBeginSwipe:false,closeOnScroll:true,closeOnRowPress:true,disableLeftSwipe:false,disableRightSwipe:false,recalculateHiddenLayout:false,previewFirstRow:false,directionalDistanceChangeThreshold:2,swipeToOpenPercent:50};var StyledList=(0,_nativeBaseShoutemTheme.connectStyle)(\"NativeBase.List\",{},_mapPropsToStyleNames2.default)(List);exports.List=StyledList;","map":{"version":3,"sources":["../../../src/basic/List.js"],"names":["List","Component","defaultProps","leftOpenValue","rightOpenValue","closeOnRowBeginSwipe","closeOnScroll","closeOnRowPress","disableLeftSwipe","disableRightSwipe","recalculateHiddenLayout","previewFirstRow","directionalDistanceChangeThreshold","swipeToOpenPercent","props","rowHasChanged","r1","ds","ListView","dataSource","nextProps","childrenArray","React","enable","scrollEnabled","id","secId","rowId","rowMap","cellIdentifier","e","ref","rowData","previewRowId","StyledList","mapPropsToStyleNames"],"mappings":"m1BAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,C,2CACA,GAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CACA,GAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,CAEA,GAAA,CAAA,SAAA,CAAA,OAAA,cAAA,CACA,GAAA,CAAA,qBAAA,CAAA,OAAA,iCAAA,C,y8BAEMA,IAAAA,CAAAA,I,iDAcJ,QAAA,CAAA,IAAA,CAAA,KAAA,CAAmB,CAAA,eAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,0BAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,SAAA,EAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,EAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAEjB,KAAA,CAAA,KAAA,CAAA,EAAA,CACA,KAAA,CAAA,UAAA,CAAA,IAAA,CACA,GAAIc,KAAAA,CAAAA,SAAAA,EAAmBA,KAAAA,CAAvB,SAAA,CAAwC,CACtC,GAAIC,CAAAA,aAAAA,CAAgBD,KAAAA,CAAAA,aAAAA,EAAwB,SAAA,EAAA,CAAA,EAAA,CAAA,CAAA,MAAYE,CAAAA,EAAAA,GAAZ,EAAA,CAA5C,CAAA,CACA,GAAMC,CAAAA,EAAAA,CAAK,GAAIC,CAAAA,YAAAA,CAAAA,QAAAA,CAAJ,UAAA,CAAwB,CAAEH,aAAAA,CAArC,aAAmC,CAAxB,CAAX,CACA,KAAA,CAAA,KAAA,CAAa,CACXI,UAAAA,CAAYF,EAAAA,CAAAA,aAAAA,CAAiBH,KAAAA,CAD/B,SACcG,CADD,CAAb,CAHF,CAAA,IAMO,CACL,KAAA,CAAA,KAAA,CAAA,EAAA,CAXe,OAAA,CAAA,KAAA,C,8FAcOG,S,CAAW,CACnC,GAAI,KAAA,KAAA,CAAJ,UAAA,CAA2B,CACzB,KAAA,QAAA,CAAc,CACZD,UAAAA,CAAY,KAAA,KAAA,CAAA,UAAA,CAAA,aAAA,CAAoCC,SAAAA,CADlD,SACc,CADA,CAAd,EAIH,C,wDACgB,CACf,GAAMC,CAAAA,aAAAA,CAAgBC,OAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CACpB,KAAA,KAAA,CADoBA,QAAAA,CAEpB,SAAA,KAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAFF,CAAsBA,CAAtB,CAKA,MAAA,CAAA,aAAA,C,2DAEeC,M,CAAQ,CACvB,KAAA,SAAA,CAAA,cAAA,CAA8B,CAAEC,aAAAA,CAAhC,MAA8B,CAA9B,E,4DAGiB,CAEjB,GAAI,KAAA,KAAA,CAAW,KAAX,UAAA,EAAJ,KAAA,CAAuC,CACrC,KAAA,KAAA,CAAW,KAAX,UAAA,EAAA,KAAA,CAAA,QAAA,GAEH,C,mEAEoBC,E,CAAI,CACvB,GACE,KAAA,KAAA,CAAA,oBAAA,EACA,KADA,UAAA,EAEA,KAAA,UAAA,GAHF,EAAA,CAIE,CACA,KAAA,gBAAA,GAEH,C,6CAESC,K,CAAOC,K,CAAOC,M,CAAQ,CAC9B,GAAMC,CAAAA,cAAAA,CAAAA,GAAAA,KAAAA,CAAN,KAAA,CACA,GAAI,KAAA,UAAA,EAAmB,KAAA,UAAA,GAAvB,cAAA,CAA2D,CACzD,KAAA,gBAAA,GAEF,MAAA,UAAA,CAAA,cAAA,CACA,KAAA,KAAA,CAAA,SAAA,EAAwB,KAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,KAAA,CAAxB,MAAwB,CAAxB,C,+CAGSJ,E,CAAI,CACb,GAAI,KAAJ,UAAA,CAAqB,CACnB,GAAI,KAAA,KAAA,CAAJ,eAAA,CAAgC,CAC9B,KAAA,gBAAA,GACA,KAAA,UAAA,CAAA,IAAA,CAEH,CACF,C,2CAEQA,E,CAAI,CACX,GAAI,KAAJ,UAAA,CAAqB,CACnB,GAAI,KAAA,KAAA,CAAJ,eAAA,CAAgC,CAC9B,KAAA,gBAAA,GACA,KAAA,UAAA,CAAA,IAAA,CAEH,CACF,C,iDAEWA,E,CAAI,CACd,KAAA,KAAA,CAAA,EAAA,EAAA,KAAA,CAAA,WAAA,G,mDAGWA,E,CAAI,CACf,KAAA,KAAA,CAAA,EAAA,EAAA,KAAA,CAAA,YAAA,G,2CAGOK,C,CAAG,CACV,GAAI,KAAJ,UAAA,CAAqB,CACnB,GAAI,KAAA,KAAA,CAAJ,aAAA,CAA8B,CAC5B,KAAA,gBAAA,GACA,KAAA,UAAA,CAAA,IAAA,CAEH,CACD,MAAA,KAAA,CAAA,QAAA,EAAuB,KAAA,KAAA,CAAA,QAAA,CAAvB,CAAuB,CAAvB,C,yCAGMC,G,CAAK,CACX,KAAA,SAAA,CAAA,GAAA,CACA,KAAA,KAAA,CAAA,WAAA,EAA0B,KAAA,KAAA,CAAA,WAAA,CAA1B,GAA0B,CAA1B,C,6CAGQC,O,CAASN,K,CAAOC,K,CAAOC,M,CAAQ,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CACvC,GAAMK,CAAAA,YAAAA,CACJ,KAAA,KAAA,CAAA,UAAA,EACA,KAAA,KAAA,CAAA,UAAA,CAAA,oBAAA,CACE,KAAA,KAAA,CAAA,eAAA,EAHJ,CAEE,CAFF,CAKA,MACE,CAAA,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,SAAA,CAAD,QAAA,CAAA,CACE,IAAA,CADF,IAAA,CAEE,GAAA,CAAK,QAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,MAAQ,CAAA,MAAA,CAAA,KAAA,CAAA,GAAA,KAAA,CAAA,KAAA,EAAR,GAAA,CAFP,CAAA,CAGE,iBAAA,CAAmB,QAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,MAAK,CAAA,MAAA,CAAA,oBAAA,CAAA,GAAA,KAAA,CAAL,KAAK,CAAL,CAHrB,CAAA,CAIE,SAAA,CAAW,QAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,MAAK,CAAA,MAAA,CAAA,SAAA,CAAA,KAAA,CAAA,KAAA,CAA6B,MAAA,CAAlC,KAAK,CAAL,CAJb,CAAA,CAKE,YAAA,CAAc,QAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,MACZ,CAAA,MAAA,CAAA,KAAA,CAAA,YAAA,EACA,MAAA,CAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,KAAA,CAAsC,MAAA,CAF1B,KAEZ,CAFY,CALhB,CAAA,CASE,UAAA,CAAY,QAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAAA,MACV,CAAA,MAAA,CAAA,KAAA,CAAA,UAAA,EACA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,KAAA,CAAA,KAAA,CAAoC,MAAA,CAF1B,KAEV,CAFU,CATd,CAAA,CAaE,aAAA,CAAe,QAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,MACb,CAAA,MAAA,CAAA,KAAA,CAAA,aAAA,EACA,MAAA,CAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,KAAA,CAAuC,MAAA,CAF1B,KAEb,CAFa,CAbjB,CAAA,CAiBE,UAAA,CAAY,QAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAAA,MAAK,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,KAAA,CAAL,KAAK,CAAL,CAjBd,CAAA,CAkBE,WAAA,CAAa,QAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,MAAK,CAAA,MAAA,CAAA,WAAA,CAAA,GAAA,KAAA,CAAL,KAAK,CAAL,CAlBf,CAAA,CAmBE,YAAA,CAAc,QAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,MAAK,CAAA,MAAA,CAAA,YAAA,CAAA,GAAA,KAAA,CAAL,KAAK,CAAL,CAnBhB,CAAA,CAoBE,QAAA,CAAU,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAK,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,KAAA,CAAL,KAAK,CAAL,CApBZ,CAAA,CAqBE,gBAAA,CAAkB,QAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,CAAA,MAAU,CAAA,MAAA,CAAA,gBAAA,CAAV,MAAU,CAAV,CArBpB,CAAA,CAsBE,aAAA,CAAe,KAAA,KAAA,CAtBjB,aAAA,CAuBE,cAAA,CAAgB,KAAA,KAAA,CAvBlB,cAAA,CAwBE,eAAA,CAAiB,KAAA,KAAA,CAxBnB,eAAA,CAyBE,gBAAA,CAAkB,KAAA,KAAA,CAzBpB,gBAAA,CA0BE,iBAAA,CAAmB,KAAA,KAAA,CA1BrB,iBAAA,CA2BE,aAAA,CAAe,KAAA,KAAA,CA3BjB,aAAA,CA4BE,cAAA,CAAgB,KAAA,KAAA,CA5BlB,cAAA,CA6BE,uBAAA,CAAyB,KAAA,KAAA,CA7B3B,uBAAA,CA8BE,KAAA,CAAO,KAAA,KAAA,CA9BT,aAAA,CA+BE,OAAA,CACE,CAAC,KAAA,KAAA,CAAA,eAAA,EAA8B,KAAA,KAAA,CAA/B,eAAA,GACAN,KAAAA,GAjCJ,YAAA,CAmCE,eAAA,CAAiB,KAAA,KAAA,CAnCnB,eAAA,CAoCE,gBAAA,CAAkB,KAAA,KAAA,CApCpB,gBAAA,CAqCE,OAAA,CAAS,KAAA,KAAA,CArCX,OAAA,CAsCE,QAAA,CAAU,KAAA,KAAA,CAtCZ,QAAA,CAuCE,kCAAA,CACE,KAAA,KAAA,CAxCJ,kCAAA,CA0CE,kBAAA,CAAoB,KAAA,KAAA,CA1CtB,kBAAA,CA2CE,IAAA,CACE,KAAA,KAAA,CAAA,mBAAA,EACA,KAAA,KAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,CAAsD,KA7C1D,KA6CI,CA7CJ,CA+CE,KAAA,CACE,KAAA,KAAA,CAAA,oBAAA,EACA,KAAA,KAAA,CAAA,oBAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,CAAuD,KAjD3D,KAiDI,CAjDJ,CAmDE,IAAA,CACE,KAAA,KAAA,CAAA,SAAA,EACA,KAAA,KAAA,CAAA,SAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,CAA4C,KArDhD,KAqDI,CArDJ,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADF,GACE,CAAA,CAAA,CADF,C,wCA2DO,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CACP,GAAI,KAAA,KAAA,CAAA,mBAAA,EAAkC,KAAA,KAAA,CAAtC,oBAAA,CAAuE,CACrE,MACE,CAAA,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,QAAA,CAAA,QAAA,CAAA,EAAA,CACM,KADN,KAAA,CAAA,CAEE,GAAA,CAAK,QAAA,CAAA,GAAA,CAAA,IAAA,CAAO,CACV,MAAA,CAAA,OAAA,CAAA,IAAA,EACA,MAAA,CAAA,KAAA,CAAA,IAAA,CAJJ,CAAA,CAME,mBAAA,CANF,IAAA,CAOE,QAAA,CAAU,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAK,CAAA,MAAA,CAAA,QAAA,CAAL,CAAK,CAAL,CAPZ,CAAA,CAQE,SAAA,CAAW,QAAA,CAAA,SAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,MACT,CAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,CAAsC,MAAA,CAD7B,KACT,CADS,CARb,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADF,GACE,CAAA,CAAA,CAAA,CADF,CADF,CAAA,IAeO,IAAI,KAAA,KAAA,CAAJ,UAAA,CAA2B,CAChC,MACE,CAAA,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,QAAA,CAAA,QAAA,CAAA,EAAA,CACM,KADN,KAAA,CAAA,CAEE,GAAA,CAAK,QAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,MAAQ,CAAA,MAAA,CAAA,KAAA,CAAR,KAAA,CAFP,CAAA,CAGE,mBAAA,CAHF,IAAA,CAIE,UAAA,CAAY,KAAA,KAAA,CAJd,UAAA,CAKE,SAAA,CAAW,KAAA,KAAA,CALb,SAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADF,GACE,CAAA,CAAA,CAAA,CADF,CAUF,OACE,CAAA,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,QAAA,CAAA,CAAM,GAAA,CAAK,QAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,MAAM,CAAA,MAAA,CAAA,KAAA,CAAN,CAAA,CAAX,CAAA,CAAA,CAAsC,KAAtC,KAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CACG,KAFL,cAEK,EADH,CADF,C,mBA9Me1B,MAAAA,CAAAA,S,CAAbD,CAAAA,I,CACGE,YADHF,CACkB,CACpBG,aAAAA,CADoB,CAAA,CAEpBC,cAAAA,CAFoB,CAAA,CAGpBC,oBAAAA,CAHoB,KAAA,CAIpBC,aAAAA,CAJoB,IAAA,CAKpBC,eAAAA,CALoB,IAAA,CAMpBC,gBAAAA,CANoB,KAAA,CAOpBC,iBAAAA,CAPoB,KAAA,CAQpBC,uBAAAA,CARoB,KAAA,CASpBC,eAAAA,CAToB,KAAA,CAUpBC,kCAAAA,CAVoB,CAAA,CAWpBC,kBAAAA,CAXoB,EAAA,CADlBb,CAqNN,GAAMkC,CAAAA,UAAAA,CAAa,CAAA,EAAA,uBAAA,CAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,CAAoCC,sBAAAA,CAApC,OAAA,EAAnB,IAAmB,CAAnB,C,QAIuBnC,I,CAAdkC,U","sourcesContent":["import React, { Component } from \"react\";\nimport { ListView, View } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\n\nimport { SwipeRow } from \"./SwipeRow\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass List extends Component {\n  static defaultProps = {\n    leftOpenValue: 0,\n    rightOpenValue: 0,\n    closeOnRowBeginSwipe: false,\n    closeOnScroll: true,\n    closeOnRowPress: true,\n    disableLeftSwipe: false,\n    disableRightSwipe: false,\n    recalculateHiddenLayout: false,\n    previewFirstRow: false,\n    directionalDistanceChangeThreshold: 2,\n    swipeToOpenPercent: 50\n  };\n  constructor(props) {\n    super(props);\n    this._rows = {};\n    this.openCellId = null;\n    if (props.dataArray && props.renderRow) {\n      let rowHasChanged = props.rowHasChanged || ((r1, r2) => r1 !== r2);\n      const ds = new ListView.DataSource({ rowHasChanged: rowHasChanged });\n      this.state = {\n        dataSource: ds.cloneWithRows(props.dataArray)\n      };\n    } else {\n      this.state = {};\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (this.state.dataSource) {\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(nextProps.dataArray)\n      });\n    }\n  }\n  renderChildren() {\n    const childrenArray = React.Children.map(\n      this.props.children,\n      child => child\n    );\n\n    return childrenArray;\n  }\n  setScrollEnabled(enable) {\n    this._listView.setNativeProps({ scrollEnabled: enable });\n  }\n\n  safeCloseOpenRow() {\n    // if the openCellId is stale due to deleting a row this could be undefined\n    if (this._rows[this.openCellId]._root) {\n      this._rows[this.openCellId]._root.closeRow();\n    }\n  }\n\n  rowSwipeGestureBegan(id) {\n    if (\n      this.props.closeOnRowBeginSwipe &&\n      this.openCellId &&\n      this.openCellId !== id\n    ) {\n      this.safeCloseOpenRow();\n    }\n  }\n\n  onRowOpen(secId, rowId, rowMap) {\n    const cellIdentifier = `${secId}${rowId}`;\n    if (this.openCellId && this.openCellId !== cellIdentifier) {\n      this.safeCloseOpenRow();\n    }\n    this.openCellId = cellIdentifier;\n    this.props.onRowOpen && this.props.onRowOpen(secId, rowId, rowMap);\n  }\n\n  onRowPress(id) {\n    if (this.openCellId) {\n      if (this.props.closeOnRowPress) {\n        this.safeCloseOpenRow();\n        this.openCellId = null;\n      }\n    }\n  }\n\n  closeRow(id) {\n    if (this.openCellId) {\n      if (this.props.closeOnRowPress) {\n        this.safeCloseOpenRow();\n        this.openCellId = null;\n      }\n    }\n  }\n\n  openLeftRow(id) {\n    this._rows[id]._root.openLeftRow();\n  }\n\n  openRightRow(id) {\n    this._rows[id]._root.openRightRow();\n  }\n\n  onScroll(e) {\n    if (this.openCellId) {\n      if (this.props.closeOnScroll) {\n        this.safeCloseOpenRow();\n        this.openCellId = null;\n      }\n    }\n    this.props.onScroll && this.props.onScroll(e);\n  }\n\n  setRefs(ref) {\n    this._listView = ref;\n    this.props.listViewRef && this.props.listViewRef(ref);\n  }\n\n  renderRow(rowData, secId, rowId, rowMap) {\n    const previewRowId =\n      this.props.dataSource &&\n      this.props.dataSource.getRowIDForFlatIndex(\n        this.props.previewRowIndex || 0\n      );\n    return (\n      <SwipeRow\n        list={true}\n        ref={row => (this._rows[`${secId}${rowId}`] = row)}\n        swipeGestureBegan={_ => this.rowSwipeGestureBegan(`${secId}${rowId}`)}\n        onRowOpen={_ => this.onRowOpen(secId, rowId, this._rows)}\n        onRowDidOpen={_ =>\n          this.props.onRowDidOpen &&\n          this.props.onRowDidOpen(secId, rowId, this._rows)\n        }\n        onRowClose={_ =>\n          this.props.onRowClose &&\n          this.props.onRowClose(secId, rowId, this._rows)\n        }\n        onRowDidClose={_ =>\n          this.props.onRowDidClose &&\n          this.props.onRowDidClose(secId, rowId, this._rows)\n        }\n        onRowPress={_ => this.onRowPress(`${secId}${rowId}`)}\n        openLeftRow={_ => this.openLeftRow(`${secId}${rowId}`)}\n        openRightRow={_ => this.openRightRow(`${secId}${rowId}`)}\n        closeRow={_ => this.closeRow(`${secId}${rowId}`)}\n        setScrollEnabled={enable => this.setScrollEnabled(enable)}\n        leftOpenValue={this.props.leftOpenValue}\n        rightOpenValue={this.props.rightOpenValue}\n        closeOnRowPress={this.props.closeOnRowPress}\n        disableLeftSwipe={this.props.disableLeftSwipe}\n        disableRightSwipe={this.props.disableRightSwipe}\n        stopLeftSwipe={this.props.stopLeftSwipe}\n        stopRightSwipe={this.props.stopRightSwipe}\n        recalculateHiddenLayout={this.props.recalculateHiddenLayout}\n        style={this.props.swipeRowStyle}\n        preview={\n          (this.props.previewFirstRow || this.props.previewRowIndex) &&\n          rowId === previewRowId\n        }\n        previewDuration={this.props.previewDuration}\n        previewOpenValue={this.props.previewOpenValue}\n        tension={this.props.tension}\n        friction={this.props.friction}\n        directionalDistanceChangeThreshold={\n          this.props.directionalDistanceChangeThreshold\n        }\n        swipeToOpenPercent={this.props.swipeToOpenPercent}\n        left={\n          this.props.renderLeftHiddenRow &&\n          this.props.renderLeftHiddenRow(rowData, secId, rowId, this._rows)\n        }\n        right={\n          this.props.renderRightHiddenRow &&\n          this.props.renderRightHiddenRow(rowData, secId, rowId, this._rows)\n        }\n        body={\n          this.props.renderRow &&\n          this.props.renderRow(rowData, secId, rowId, this._rows)\n        }\n      />\n    );\n  }\n  render() {\n    if (this.props.renderLeftHiddenRow || this.props.renderRightHiddenRow) {\n      return (\n        <ListView\n          {...this.props}\n          ref={ref => {\n            this.setRefs(ref);\n            this._root = ref;\n          }}\n          enableEmptySections\n          onScroll={e => this.onScroll(e)}\n          renderRow={(rowData, secId, rowId) =>\n            this.renderRow(rowData, secId, rowId, this._rows)\n          }\n        />\n      );\n    } else if (this.state.dataSource) {\n      return (\n        <ListView\n          {...this.props}\n          ref={ref => (this._root = ref)}\n          enableEmptySections\n          dataSource={this.state.dataSource}\n          renderRow={this.props.renderRow}\n        />\n      );\n    }\n    return (\n      <View ref={c => (this._root = c)} {...this.props}>\n        {this.renderChildren()}\n      </View>\n    );\n  }\n}\nconst StyledList = connectStyle(\"NativeBase.List\", {}, mapPropsToStyleNames)(\n  List\n);\n\nexport { StyledList as List };"]},"metadata":{},"sourceType":"script"}