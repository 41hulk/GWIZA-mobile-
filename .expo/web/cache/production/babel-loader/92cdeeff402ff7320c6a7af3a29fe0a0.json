{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _objectSpread4=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _react=_interopRequireDefault(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _reactNative=_interopRequireWildcard(require(\"react-native\"));var _reactNativeIphoneXHelper=require(\"react-native-iphone-x-helper\");var _KAM_DEFAULT_TAB_BAR_HEIGHT=(0,_reactNativeIphoneXHelper.isIphoneX)()?83:49;var _KAM_KEYBOARD_OPENING_TIME=250;var _KAM_EXTRA_HEIGHT=75;var supportedKeyboardEvents=['keyboardWillShow','keyboardDidShow','keyboardWillHide','keyboardDidHide','keyboardWillChangeFrame','keyboardDidChangeFrame'];var keyboardEventToCallbackName=function keyboardEventToCallbackName(eventName){return'on'+eventName[0].toUpperCase()+eventName.substring(1);};var keyboardEventPropTypes=supportedKeyboardEvents.reduce(function(acc,eventName){return(0,_objectSpread4.default)({},acc,(0,_defineProperty2.default)({},keyboardEventToCallbackName(eventName),_propTypes.default.func));},{});var keyboardAwareHOCTypeEvents=supportedKeyboardEvents.reduce(function(acc,eventName){return(0,_objectSpread4.default)({},acc,(0,_defineProperty2.default)({},keyboardEventToCallbackName(eventName),Function));},{});function getDisplayName(WrappedComponent){return WrappedComponent&&(WrappedComponent.displayName||WrappedComponent.name)||'Component';}var ScrollIntoViewDefaultOptions={enableOnAndroid:false,contentContainerStyle:undefined,enableAutomaticScroll:true,extraHeight:_KAM_EXTRA_HEIGHT,extraScrollHeight:0,enableResetScrollToCoords:true,keyboardOpeningTime:_KAM_KEYBOARD_OPENING_TIME,viewIsInsideTabBar:false,refPropName:'ref',extractNativeRef:function extractNativeRef(ref){if(ref.getNode){return ref.getNode();}else{return ref;}}};function KeyboardAwareHOC(ScrollableComponent,userOptions){var _class,_temp;var hocOptions=(0,_objectSpread4.default)({},ScrollIntoViewDefaultOptions,userOptions);return _temp=_class=function(_React$Component){(0,_inherits2.default)(_class,_React$Component);function _class(props){var _this;(0,_classCallCheck2.default)(this,_class);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(_class).call(this,props));_this.getScrollResponder=function(){return _this._rnkasv_keyboardView&&_this._rnkasv_keyboardView.getScrollResponder();};_this.scrollToPosition=function(x,y){var animated=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var responder=_this.getScrollResponder();responder&&responder.scrollResponderScrollTo({x:x,y:y,animated:animated});};_this.scrollToEnd=function(){var animated=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;var responder=_this.getScrollResponder();responder&&responder.scrollResponderScrollToEnd({animated:animated});};_this.scrollForExtraHeightOnAndroid=function(extraHeight){_this.scrollToPosition(0,_this.position.y+extraHeight,true);};_this.scrollToFocusedInput=function(reactNode,extraHeight,keyboardOpeningTime){if(extraHeight===undefined){extraHeight=_this.props.extraHeight||0;}if(keyboardOpeningTime===undefined){keyboardOpeningTime=_this.props.keyboardOpeningTime||0;}setTimeout(function(){if(!_this.mountedComponent){return;}var responder=_this.getScrollResponder();responder&&responder.scrollResponderScrollNativeHandleToKeyboard(reactNode,extraHeight,true);},keyboardOpeningTime);};_this.scrollIntoView=function _callee(element){var options,_ref,_ref2,parentLayout,childLayout,getScrollPosition,_getScrollPosition,x,y,animated,_args=arguments;return _regenerator.default.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:options=_args.length>1&&_args[1]!==undefined?_args[1]:{};if(!(!_this._rnkasv_keyboardView||!element)){_context.next=3;break;}return _context.abrupt(\"return\");case 3:_context.next=5;return _regenerator.default.awrap(Promise.all([_this._measureElement(_this._rnkasv_keyboardView),_this._measureElement(element)]));case 5:_ref=_context.sent;_ref2=(0,_slicedToArray2.default)(_ref,2);parentLayout=_ref2[0];childLayout=_ref2[1];getScrollPosition=options.getScrollPosition||_this._defaultGetScrollPosition;_getScrollPosition=getScrollPosition(parentLayout,childLayout,_this.position),x=_getScrollPosition.x,y=_getScrollPosition.y,animated=_getScrollPosition.animated;_this.scrollToPosition(x,y,animated);case 12:case\"end\":return _context.stop();}}},null,this);};_this._defaultGetScrollPosition=function(parentLayout,childLayout,contentOffset){return{x:0,y:Math.max(0,childLayout.y-parentLayout.y+contentOffset.y),animated:true};};_this._measureElement=function(element){var node=(0,_reactNative.findNodeHandle)(element);return new Promise(function(resolve){_reactNative.UIManager.measureInWindow(node,function(x,y,width,height){resolve({x:x,y:y,width:width,height:height});});});};_this._updateKeyboardSpace=function(frames){if(_this.props.enableAutomaticScroll){var keyboardSpace=frames.endCoordinates.height+_this.props.extraScrollHeight;if(_this.props.viewIsInsideTabBar){keyboardSpace-=_KAM_DEFAULT_TAB_BAR_HEIGHT;}_this.setState({keyboardSpace:keyboardSpace});var currentlyFocusedField=_reactNative.TextInput.State.currentlyFocusedField();var responder=_this.getScrollResponder();if(!currentlyFocusedField||!responder){return;}_reactNative.UIManager.viewIsDescendantOf(currentlyFocusedField,responder.getInnerViewNode(),function(isAncestor){if(isAncestor){_reactNative.UIManager.measureInWindow(currentlyFocusedField,function(x,y,width,height){var textInputBottomPosition=y+height;var keyboardPosition=frames.endCoordinates.screenY;var totalExtraHeight=_this.props.extraScrollHeight+_this.props.extraHeight;if(_reactNative.Platform.OS==='ios'){if(textInputBottomPosition>keyboardPosition-totalExtraHeight){_this._scrollToFocusedInputWithNodeHandle(currentlyFocusedField);}}else{if(textInputBottomPosition>keyboardPosition){keyboardSpace=keyboardSpace-(textInputBottomPosition-keyboardPosition);_this.setState({keyboardSpace:keyboardSpace});_this.scrollForExtraHeightOnAndroid(totalExtraHeight);}else if(textInputBottomPosition>keyboardPosition-totalExtraHeight){_this.scrollForExtraHeightOnAndroid(totalExtraHeight-(keyboardPosition-textInputBottomPosition));}}});}});}if(!_this.props.resetScrollToCoords){if(!_this.defaultResetScrollToCoords){_this.defaultResetScrollToCoords=_this.position;}}};_this._resetKeyboardSpace=function(){var keyboardSpace=_this.props.viewIsInsideTabBar?_KAM_DEFAULT_TAB_BAR_HEIGHT:0;_this.setState({keyboardSpace:keyboardSpace});if(_this.props.enableResetScrollToCoords===false){_this.defaultResetScrollToCoords=null;return;}else if(_this.props.resetScrollToCoords){_this.scrollToPosition(_this.props.resetScrollToCoords.x,_this.props.resetScrollToCoords.y,true);}else{if(_this.defaultResetScrollToCoords){_this.scrollToPosition(_this.defaultResetScrollToCoords.x,_this.defaultResetScrollToCoords.y,true);_this.defaultResetScrollToCoords=null;}else{_this.scrollToPosition(0,0,true);}}};_this._scrollToFocusedInputWithNodeHandle=function(nodeID,extraHeight,keyboardOpeningTime){if(extraHeight===undefined){extraHeight=_this.props.extraHeight;}var reactNode=_reactNative.default.findNodeHandle(nodeID);_this.scrollToFocusedInput(reactNode,extraHeight+_this.props.extraScrollHeight,keyboardOpeningTime!==undefined?keyboardOpeningTime:_this.props.keyboardOpeningTime||0);};_this._handleOnScroll=function(e){_this.position=e.nativeEvent.contentOffset;};_this._handleRef=function(ref){_this._rnkasv_keyboardView=ref?hocOptions.extractNativeRef(ref):ref;if(_this.props.innerRef){_this.props.innerRef(_this._rnkasv_keyboardView);}};_this.update=function(){var currentlyFocusedField=_reactNative.TextInput.State.currentlyFocusedField();var responder=_this.getScrollResponder();if(!currentlyFocusedField||!responder){return;}_this._scrollToFocusedInputWithNodeHandle(currentlyFocusedField);};_this.keyboardWillShowEvent=undefined;_this.keyboardWillHideEvent=undefined;_this.callbacks={};_this.position={x:0,y:0};_this.defaultResetScrollToCoords=null;var _keyboardSpace=props.viewIsInsideTabBar?_KAM_DEFAULT_TAB_BAR_HEIGHT:0;_this.state={keyboardSpace:_keyboardSpace};return _this;}(0,_createClass2.default)(_class,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.mountedComponent=true;if(_reactNative.Platform.OS==='ios'){this.keyboardWillShowEvent=_reactNative.Keyboard.addListener('keyboardWillShow',this._updateKeyboardSpace);this.keyboardWillHideEvent=_reactNative.Keyboard.addListener('keyboardWillHide',this._resetKeyboardSpace);}else if(_reactNative.Platform.OS==='android'&&this.props.enableOnAndroid){this.keyboardWillShowEvent=_reactNative.Keyboard.addListener('keyboardDidShow',this._updateKeyboardSpace);this.keyboardWillHideEvent=_reactNative.Keyboard.addListener('keyboardDidHide',this._resetKeyboardSpace);}supportedKeyboardEvents.forEach(function(eventName){var callbackName=keyboardEventToCallbackName(eventName);if(_this2.props[callbackName]){_this2.callbacks[eventName]=_reactNative.Keyboard.addListener(eventName,_this2.props[callbackName]);}});}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(nextProps.viewIsInsideTabBar!==this.props.viewIsInsideTabBar){var keyboardSpace=nextProps.viewIsInsideTabBar?_KAM_DEFAULT_TAB_BAR_HEIGHT:0;if(this.state.keyboardSpace!==keyboardSpace){this.setState({keyboardSpace:keyboardSpace});}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.mountedComponent=false;this.keyboardWillShowEvent&&this.keyboardWillShowEvent.remove();this.keyboardWillHideEvent&&this.keyboardWillHideEvent.remove();Object.values(this.callbacks).forEach(function(callback){return callback.remove();});}},{key:\"render\",value:function render(){var _this$props=this.props,enableOnAndroid=_this$props.enableOnAndroid,contentContainerStyle=_this$props.contentContainerStyle,onScroll=_this$props.onScroll;var newContentContainerStyle;if(_reactNative.Platform.OS==='android'&&enableOnAndroid){newContentContainerStyle=[].concat(contentContainerStyle).concat({paddingBottom:((contentContainerStyle||{}).paddingBottom||0)+this.state.keyboardSpace});}var refProps=(0,_defineProperty2.default)({},hocOptions.refPropName,this._handleRef);return _react.default.createElement(ScrollableComponent,(0,_extends2.default)({},refProps,{keyboardDismissMode:\"interactive\",contentInset:{bottom:this.state.keyboardSpace},automaticallyAdjustContentInsets:false,showsVerticalScrollIndicator:true,scrollEventThrottle:1},this.props,{contentContainerStyle:newContentContainerStyle||contentContainerStyle,keyboardSpace:this.state.keyboardSpace,getScrollResponder:this.getScrollResponder,scrollToPosition:this.scrollToPosition,scrollToEnd:this.scrollToEnd,scrollForExtraHeightOnAndroid:this.scrollForExtraHeightOnAndroid,scrollToFocusedInput:this.scrollToFocusedInput,scrollIntoView:this.scrollIntoView,resetKeyboardSpace:this._resetKeyboardSpace,handleOnScroll:this._handleOnScroll,update:this.update,onScroll:_reactNative.Animated.forkEvent(onScroll,this._handleOnScroll)}));}}]);return _class;}(_react.default.Component),_class.displayName=\"KeyboardAware\"+getDisplayName(ScrollableComponent),_class.propTypes=(0,_objectSpread4.default)({viewIsInsideTabBar:_propTypes.default.bool,resetScrollToCoords:_propTypes.default.shape({x:_propTypes.default.number.isRequired,y:_propTypes.default.number.isRequired}),enableResetScrollToCoords:_propTypes.default.bool,enableAutomaticScroll:_propTypes.default.bool,extraHeight:_propTypes.default.number,extraScrollHeight:_propTypes.default.number,keyboardOpeningTime:_propTypes.default.number,onScroll:_propTypes.default.oneOfType([_propTypes.default.func,_propTypes.default.object]),update:_propTypes.default.func,contentContainerStyle:_propTypes.default.any,enableOnAndroid:_propTypes.default.bool,innerRef:_propTypes.default.func},keyboardEventPropTypes),_class.defaultProps={enableAutomaticScroll:hocOptions.enableAutomaticScroll,extraHeight:hocOptions.extraHeight,extraScrollHeight:hocOptions.extraScrollHeight,enableResetScrollToCoords:hocOptions.enableResetScrollToCoords,keyboardOpeningTime:hocOptions.keyboardOpeningTime,viewIsInsideTabBar:hocOptions.viewIsInsideTabBar,enableOnAndroid:hocOptions.enableOnAndroid},_temp;}var listenToKeyboardEvents=function listenToKeyboardEvents(configOrComp){if(typeof configOrComp==='object'){return function(Comp){return KeyboardAwareHOC(Comp,configOrComp);};}else{return KeyboardAwareHOC(configOrComp);}};var _default=listenToKeyboardEvents;exports.default=_default;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native-keyboard-aware-scroll-view/lib/KeyboardAwareHOC.js"],"names":["_KAM_DEFAULT_TAB_BAR_HEIGHT","_KAM_KEYBOARD_OPENING_TIME","_KAM_EXTRA_HEIGHT","supportedKeyboardEvents","keyboardEventToCallbackName","eventName","toUpperCase","substring","keyboardEventPropTypes","reduce","acc","PropTypes","func","keyboardAwareHOCTypeEvents","Function","getDisplayName","WrappedComponent","displayName","name","ScrollIntoViewDefaultOptions","enableOnAndroid","contentContainerStyle","undefined","enableAutomaticScroll","extraHeight","extraScrollHeight","enableResetScrollToCoords","keyboardOpeningTime","viewIsInsideTabBar","refPropName","extractNativeRef","ref","getNode","KeyboardAwareHOC","ScrollableComponent","userOptions","hocOptions","props","getScrollResponder","_rnkasv_keyboardView","scrollToPosition","x","y","animated","responder","scrollResponderScrollTo","scrollToEnd","scrollResponderScrollToEnd","scrollForExtraHeightOnAndroid","position","scrollToFocusedInput","reactNode","setTimeout","mountedComponent","scrollResponderScrollNativeHandleToKeyboard","scrollIntoView","element","options","Promise","all","_measureElement","parentLayout","childLayout","getScrollPosition","_defaultGetScrollPosition","contentOffset","Math","max","node","resolve","UIManager","measureInWindow","width","height","_updateKeyboardSpace","frames","keyboardSpace","endCoordinates","setState","currentlyFocusedField","TextInput","State","viewIsDescendantOf","getInnerViewNode","isAncestor","textInputBottomPosition","keyboardPosition","screenY","totalExtraHeight","Platform","OS","_scrollToFocusedInputWithNodeHandle","resetScrollToCoords","defaultResetScrollToCoords","_resetKeyboardSpace","nodeID","ReactNative","findNodeHandle","_handleOnScroll","e","nativeEvent","_handleRef","innerRef","update","keyboardWillShowEvent","keyboardWillHideEvent","callbacks","state","Keyboard","addListener","forEach","callbackName","nextProps","remove","Object","values","callback","onScroll","newContentContainerStyle","concat","paddingBottom","refProps","bottom","Animated","forkEvent","React","Component","propTypes","bool","shape","number","isRequired","oneOfType","object","any","defaultProps","listenToKeyboardEvents","configOrComp","Comp"],"mappings":"qoCAEA,oDACA,6DACA,kEAQA,sEAGA,GAAMA,CAAAA,2BAAmC,CAAG,0CAAc,EAAd,CAAmB,EAA/D,CACA,GAAMC,CAAAA,0BAAkC,CAAG,GAA3C,CACA,GAAMC,CAAAA,iBAAyB,CAAG,EAAlC,CAEA,GAAMC,CAAAA,uBAAuB,CAAG,CAC9B,kBAD8B,CAE9B,iBAF8B,CAG9B,kBAH8B,CAI9B,iBAJ8B,CAK9B,yBAL8B,CAM9B,wBAN8B,CAAhC,CAQA,GAAMC,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,CAACC,SAAD,QAClC,KAAOA,SAAS,CAAC,CAAD,CAAT,CAAaC,WAAb,EAAP,CAAoCD,SAAS,CAACE,SAAV,CAAoB,CAApB,CADF,EAApC,CAEA,GAAMC,CAAAA,sBAAsB,CAAGL,uBAAuB,CAACM,MAAxB,CAC7B,SAACC,GAAD,CAAcL,SAAd,sCACKK,GADL,iCAEGN,2BAA2B,CAACC,SAAD,CAF9B,CAE4CM,mBAAUC,IAFtD,IAD6B,CAK7B,EAL6B,CAA/B,CAOA,GAAMC,CAAAA,0BAA0B,CAAGV,uBAAuB,CAACM,MAAxB,CACjC,SAACC,GAAD,CAAcL,SAAd,sCACKK,GADL,iCAEGN,2BAA2B,CAACC,SAAD,CAF9B,CAE4CS,QAF5C,IADiC,CAKjC,EALiC,CAAnC,CAqEA,QAASC,CAAAA,cAAT,CAAwBC,gBAAxB,CAA2D,CACzD,MAAOA,CAAAA,gBAAgB,GAAKA,gBAAgB,CAACC,WAAjB,EAAgCD,gBAAgB,CAACE,IAAtD,CAAhB,EAA+E,WAAtF,CACD,CAED,GAAMC,CAAAA,4BAAqD,CAAG,CAC5DC,eAAe,CAAE,KAD2C,CAE5DC,qBAAqB,CAAEC,SAFqC,CAG5DC,qBAAqB,CAAE,IAHqC,CAI5DC,WAAW,CAAEtB,iBAJ+C,CAK5DuB,iBAAiB,CAAE,CALyC,CAM5DC,yBAAyB,CAAE,IANiC,CAO5DC,mBAAmB,CAAE1B,0BAPuC,CAQ5D2B,kBAAkB,CAAE,KARwC,CAa5DC,WAAW,CAAE,KAb+C,CAgB5DC,gBAAgB,CAAE,0BAACC,GAAD,CAAiB,CAIjC,GAAIA,GAAG,CAACC,OAAR,CAAiB,CACf,MAAOD,CAAAA,GAAG,CAACC,OAAJ,EAAP,CACD,CAFD,IAEO,CACL,MAAOD,CAAAA,GAAP,CACD,CACF,CAzB2D,CAA9D,CA4BA,QAASE,CAAAA,gBAAT,CACEC,mBADF,CAEEC,WAFF,CAGE,kBACA,GAAMC,CAAAA,UAAmC,+BACpCjB,4BADoC,CAEpCgB,WAFoC,CAAzC,CAKA,+FA8CE,gBAAYE,KAAZ,CAA0C,qDACxC,kGAAMA,KAAN,GADwC,MAmE1CC,kBAnE0C,CAmErB,UAAM,CACzB,MACE,OAAKC,oBAAL,EACA,MAAKA,oBAAL,CAA0BD,kBAA1B,EAFF,CAID,CAxEyC,OA0E1CE,gBA1E0C,CA0EvB,SAACC,CAAD,CAAYC,CAAZ,CAAoD,IAA7BC,CAAAA,QAA6B,2DAAT,IAAS,CACrE,GAAMC,CAAAA,SAAS,CAAG,MAAKN,kBAAL,EAAlB,CACAM,SAAS,EAAIA,SAAS,CAACC,uBAAV,CAAkC,CAAEJ,CAAC,CAADA,CAAF,CAAKC,CAAC,CAADA,CAAL,CAAQC,QAAQ,CAARA,QAAR,CAAlC,CAAb,CACD,CA7EyC,OA+E1CG,WA/E0C,CA+E5B,UAA+B,IAA9BH,CAAAA,QAA8B,2DAAT,IAAS,CAC3C,GAAMC,CAAAA,SAAS,CAAG,MAAKN,kBAAL,EAAlB,CACAM,SAAS,EAAIA,SAAS,CAACG,0BAAV,CAAqC,CAAEJ,QAAQ,CAARA,QAAF,CAArC,CAAb,CACD,CAlFyC,OAoF1CK,6BApF0C,CAoFV,SAACxB,WAAD,CAAyB,CACvD,MAAKgB,gBAAL,CAAsB,CAAtB,CAAyB,MAAKS,QAAL,CAAcP,CAAd,CAAkBlB,WAA3C,CAAwD,IAAxD,EACD,CAtFyC,OA4F1C0B,oBA5F0C,CA4FnB,SACrBC,SADqB,CAErB3B,WAFqB,CAGrBG,mBAHqB,CAIlB,CACH,GAAIH,WAAW,GAAKF,SAApB,CAA+B,CAC7BE,WAAW,CAAG,MAAKa,KAAL,CAAWb,WAAX,EAA0B,CAAxC,CACD,CACD,GAAIG,mBAAmB,GAAKL,SAA5B,CAAuC,CACrCK,mBAAmB,CAAG,MAAKU,KAAL,CAAWV,mBAAX,EAAkC,CAAxD,CACD,CACDyB,UAAU,CAAC,UAAM,CACf,GAAI,CAAC,MAAKC,gBAAV,CAA4B,CAC1B,OACD,CACD,GAAMT,CAAAA,SAAS,CAAG,MAAKN,kBAAL,EAAlB,CACAM,SAAS,EACPA,SAAS,CAACU,2CAAV,CACEH,SADF,CAEE3B,WAFF,CAGE,IAHF,CADF,CAMD,CAXS,CAWPG,mBAXO,CAAV,CAYD,CAnHyC,OAqH1C4B,cArH0C,CAqHzB,iBACfC,OADe,sOAEfC,OAFe,+CAEkB,EAFlB,MAIX,CAAC,MAAKlB,oBAAN,EAA8B,CAACiB,OAJpB,oHAQ2BE,OAAO,CAACC,GAAR,CAAY,CACpD,MAAKC,eAAL,CAAqB,MAAKrB,oBAA1B,CADoD,CAEpD,MAAKqB,eAAL,CAAqBJ,OAArB,CAFoD,CAAZ,CAR3B,sEAQRK,YARQ,UAQMC,WARN,UAaTC,iBAbS,CAcbN,OAAO,CAACM,iBAAR,EAA6B,MAAKC,yBAdrB,oBAeYD,iBAAiB,CAC1CF,YAD0C,CAE1CC,WAF0C,CAG1C,MAAKb,QAHqC,CAf7B,CAePR,CAfO,oBAePA,CAfO,CAeJC,CAfI,oBAeJA,CAfI,CAeDC,QAfC,oBAeDA,QAfC,CAoBf,MAAKH,gBAAL,CAAsBC,CAAtB,CAAyBC,CAAzB,CAA4BC,QAA5B,EApBe,yDArHyB,OA4I1CqB,yBA5I0C,CA4Id,SAC1BH,YAD0B,CAE1BC,WAF0B,CAG1BG,aAH0B,CAIP,CACnB,MAAO,CACLxB,CAAC,CAAE,CADE,CAELC,CAAC,CAAEwB,IAAI,CAACC,GAAL,CAAS,CAAT,CAAYL,WAAW,CAACpB,CAAZ,CAAgBmB,YAAY,CAACnB,CAA7B,CAAiCuB,aAAa,CAACvB,CAA3D,CAFE,CAGLC,QAAQ,CAAE,IAHL,CAAP,CAKD,CAtJyC,OAwJ1CiB,eAxJ0C,CAwJxB,SAACJ,OAAD,CAAuD,CACvE,GAAMY,CAAAA,IAAI,CAAG,gCAAeZ,OAAf,CAAb,CACA,MAAO,IAAIE,CAAAA,OAAJ,CAAY,SAACW,OAAD,CAAoC,CACrDC,uBAAUC,eAAV,CACEH,IADF,CAEE,SAAC3B,CAAD,CAAYC,CAAZ,CAAuB8B,KAAvB,CAAsCC,MAAtC,CAAyD,CACvDJ,OAAO,CAAC,CAAE5B,CAAC,CAADA,CAAF,CAAKC,CAAC,CAADA,CAAL,CAAQ8B,KAAK,CAALA,KAAR,CAAeC,MAAM,CAANA,MAAf,CAAD,CAAP,CACD,CAJH,EAMD,CAPM,CAAP,CAQD,CAlKyC,OAqK1CC,oBArK0C,CAqKnB,SAACC,MAAD,CAAoB,CAEzC,GAAI,MAAKtC,KAAL,CAAWd,qBAAf,CAAsC,CACpC,GAAIqD,CAAAA,aAAqB,CACvBD,MAAM,CAACE,cAAP,CAAsBJ,MAAtB,CAA+B,MAAKpC,KAAL,CAAWZ,iBAD5C,CAEA,GAAI,MAAKY,KAAL,CAAWT,kBAAf,CAAmC,CACjCgD,aAAa,EAAI5E,2BAAjB,CACD,CACD,MAAK8E,QAAL,CAAc,CAAEF,aAAa,CAAbA,aAAF,CAAd,EACA,GAAMG,CAAAA,qBAAqB,CAAGC,uBAAUC,KAAV,CAAgBF,qBAAhB,EAA9B,CACA,GAAMnC,CAAAA,SAAS,CAAG,MAAKN,kBAAL,EAAlB,CACA,GAAI,CAACyC,qBAAD,EAA0B,CAACnC,SAA/B,CAA0C,CACxC,OACD,CACD0B,uBAAUY,kBAAV,CACEH,qBADF,CAEEnC,SAAS,CAACuC,gBAAV,EAFF,CAGE,SAACC,UAAD,CAAyB,CACvB,GAAIA,UAAJ,CAAgB,CAEdd,uBAAUC,eAAV,CACEQ,qBADF,CAEE,SAACtC,CAAD,CAAYC,CAAZ,CAAuB8B,KAAvB,CAAsCC,MAAtC,CAAyD,CACvD,GAAMY,CAAAA,uBAAuB,CAAG3C,CAAC,CAAG+B,MAApC,CACA,GAAMa,CAAAA,gBAAgB,CAAGX,MAAM,CAACE,cAAP,CAAsBU,OAA/C,CACA,GAAMC,CAAAA,gBAAgB,CACpB,MAAKnD,KAAL,CAAWZ,iBAAX,CAA+B,MAAKY,KAAL,CAAWb,WAD5C,CAEA,GAAIiE,sBAASC,EAAT,GAAgB,KAApB,CAA2B,CACzB,GACEL,uBAAuB,CACvBC,gBAAgB,CAAGE,gBAFrB,CAGE,CACA,MAAKG,mCAAL,CACEZ,qBADF,EAGD,CACF,CATD,IASO,CAIL,GAAIM,uBAAuB,CAAGC,gBAA9B,CAAgD,CAG9CV,aAAa,CACXA,aAAa,EACZS,uBAAuB,CAAGC,gBADd,CADf,CAGA,MAAKR,QAAL,CAAc,CAAEF,aAAa,CAAbA,aAAF,CAAd,EACA,MAAK5B,6BAAL,CAAmCwC,gBAAnC,EACD,CARD,IAQO,IACLH,uBAAuB,CACvBC,gBAAgB,CAAGE,gBAFd,CAGL,CACA,MAAKxC,6BAAL,CACEwC,gBAAgB,EACbF,gBAAgB,CAAGD,uBADN,CADlB,EAID,CACF,CACF,CAtCH,EAwCD,CACF,CA/CH,EAiDD,CACD,GAAI,CAAC,MAAKhD,KAAL,CAAWuD,mBAAhB,CAAqC,CACnC,GAAI,CAAC,MAAKC,0BAAV,CAAsC,CACpC,MAAKA,0BAAL,CAAkC,MAAK5C,QAAvC,CACD,CACF,CACF,CA1OyC,OA4O1C6C,mBA5O0C,CA4OpB,UAAM,CAC1B,GAAMlB,CAAAA,aAAqB,CAAG,MAAKvC,KAAL,CAAWT,kBAAX,CAC1B5B,2BAD0B,CAE1B,CAFJ,CAGA,MAAK8E,QAAL,CAAc,CAAEF,aAAa,CAAbA,aAAF,CAAd,EAEA,GAAI,MAAKvC,KAAL,CAAWX,yBAAX,GAAyC,KAA7C,CAAoD,CAClD,MAAKmE,0BAAL,CAAkC,IAAlC,CACA,OACD,CAHD,IAGO,IAAI,MAAKxD,KAAL,CAAWuD,mBAAf,CAAoC,CACzC,MAAKpD,gBAAL,CAAsB,MAAKH,KAAL,CAAWuD,mBAAX,CAA+BnD,CAArD,CAAwD,MAAKJ,KAAL,CAAWuD,mBAAX,CAA+BlD,CAAvF,CAA0F,IAA1F,EACD,CAFM,IAEA,CACL,GAAI,MAAKmD,0BAAT,CAAqC,CACnC,MAAKrD,gBAAL,CACE,MAAKqD,0BAAL,CAAgCpD,CADlC,CAEE,MAAKoD,0BAAL,CAAgCnD,CAFlC,CAGE,IAHF,EAKA,MAAKmD,0BAAL,CAAkC,IAAlC,CACD,CAPD,IAOO,CACL,MAAKrD,gBAAL,CAAsB,CAAtB,CAAyB,CAAzB,CAA4B,IAA5B,EACD,CACF,CACF,CAnQyC,OAqQ1CmD,mCArQ0C,CAqQJ,SACpCI,MADoC,CAEpCvE,WAFoC,CAGpCG,mBAHoC,CAIjC,CACH,GAAIH,WAAW,GAAKF,SAApB,CAA+B,CAC7BE,WAAW,CAAG,MAAKa,KAAL,CAAWb,WAAzB,CACD,CACD,GAAM2B,CAAAA,SAAS,CAAG6C,qBAAYC,cAAZ,CAA2BF,MAA3B,CAAlB,CACA,MAAK7C,oBAAL,CACEC,SADF,CAEE3B,WAAW,CAAG,MAAKa,KAAL,CAAWZ,iBAF3B,CAGEE,mBAAmB,GAAKL,SAAxB,CACIK,mBADJ,CAEI,MAAKU,KAAL,CAAWV,mBAAX,EAAkC,CALxC,EAOD,CArRyC,OAuR1CuE,eAvR0C,CAuRxB,SAChBC,CADgB,CAEb,CACH,MAAKlD,QAAL,CAAgBkD,CAAC,CAACC,WAAF,CAAcnC,aAA9B,CACD,CA3RyC,OA6R1CoC,UA7R0C,CA6R7B,SAACtE,GAAD,CAA6B,CACxC,MAAKQ,oBAAL,CAA4BR,GAAG,CAAGK,UAAU,CAACN,gBAAX,CAA4BC,GAA5B,CAAH,CAAsCA,GAArE,CACA,GAAI,MAAKM,KAAL,CAAWiE,QAAf,CAAyB,CACvB,MAAKjE,KAAL,CAAWiE,QAAX,CAAoB,MAAK/D,oBAAzB,EACD,CACF,CAlSyC,OAoS1CgE,MApS0C,CAoSjC,UAAM,CACb,GAAMxB,CAAAA,qBAAqB,CAAGC,uBAAUC,KAAV,CAAgBF,qBAAhB,EAA9B,CACA,GAAMnC,CAAAA,SAAS,CAAG,MAAKN,kBAAL,EAAlB,CAEA,GAAI,CAACyC,qBAAD,EAA0B,CAACnC,SAA/B,CAA0C,CACxC,OACD,CAED,MAAK+C,mCAAL,CAAyCZ,qBAAzC,EACD,CA7SyC,CAExC,MAAKyB,qBAAL,CAA6BlF,SAA7B,CACA,MAAKmF,qBAAL,CAA6BnF,SAA7B,CACA,MAAKoF,SAAL,CAAiB,EAAjB,CACA,MAAKzD,QAAL,CAAgB,CAAER,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,CAAX,CAAhB,CACA,MAAKmD,0BAAL,CAAkC,IAAlC,CACA,GAAMjB,CAAAA,cAAqB,CAAGvC,KAAK,CAACT,kBAAN,CAC1B5B,2BAD0B,CAE1B,CAFJ,CAGA,MAAK2G,KAAL,CAAa,CAAE/B,aAAa,CAAbA,cAAF,CAAb,CAVwC,aAWzC,CAzDH,6FA2DsB,iBAClB,KAAKvB,gBAAL,CAAwB,IAAxB,CAEA,GAAIoC,sBAASC,EAAT,GAAgB,KAApB,CAA2B,CACzB,KAAKc,qBAAL,CAA6BI,sBAASC,WAAT,CAC3B,kBAD2B,CAE3B,KAAKnC,oBAFsB,CAA7B,CAIA,KAAK+B,qBAAL,CAA6BG,sBAASC,WAAT,CAC3B,kBAD2B,CAE3B,KAAKf,mBAFsB,CAA7B,CAID,CATD,IASO,IAAIL,sBAASC,EAAT,GAAgB,SAAhB,EAA6B,KAAKrD,KAAL,CAAWjB,eAA5C,CAA6D,CAClE,KAAKoF,qBAAL,CAA6BI,sBAASC,WAAT,CAC3B,iBAD2B,CAE3B,KAAKnC,oBAFsB,CAA7B,CAIA,KAAK+B,qBAAL,CAA6BG,sBAASC,WAAT,CAC3B,iBAD2B,CAE3B,KAAKf,mBAFsB,CAA7B,CAID,CAED3F,uBAAuB,CAAC2G,OAAxB,CAAgC,SAACzG,SAAD,CAAuB,CACrD,GAAM0G,CAAAA,YAAY,CAAG3G,2BAA2B,CAACC,SAAD,CAAhD,CACA,GAAI,MAAI,CAACgC,KAAL,CAAW0E,YAAX,CAAJ,CAA8B,CAC5B,MAAI,CAACL,SAAL,CAAerG,SAAf,EAA4BuG,sBAASC,WAAT,CAC1BxG,SAD0B,CAE1B,MAAI,CAACgC,KAAL,CAAW0E,YAAX,CAF0B,CAA5B,CAID,CACF,CARD,EASD,CA3FH,4EA6F4BC,SA7F5B,CA6F8D,CAC1D,GAAIA,SAAS,CAACpF,kBAAV,GAAiC,KAAKS,KAAL,CAAWT,kBAAhD,CAAoE,CAClE,GAAMgD,CAAAA,aAAqB,CAAGoC,SAAS,CAACpF,kBAAV,CAC1B5B,2BAD0B,CAE1B,CAFJ,CAGA,GAAI,KAAK2G,KAAL,CAAW/B,aAAX,GAA6BA,aAAjC,CAAgD,CAC9C,KAAKE,QAAL,CAAc,CAAEF,aAAa,CAAbA,aAAF,CAAd,EACD,CACF,CACF,CAtGH,mEAwGyB,CACrB,KAAKvB,gBAAL,CAAwB,KAAxB,CACA,KAAKmD,qBAAL,EAA8B,KAAKA,qBAAL,CAA2BS,MAA3B,EAA9B,CACA,KAAKR,qBAAL,EAA8B,KAAKA,qBAAL,CAA2BQ,MAA3B,EAA9B,CACAC,MAAM,CAACC,MAAP,CAAc,KAAKT,SAAnB,EAA8BI,OAA9B,CAAsC,SAACM,QAAD,QACpCA,CAAAA,QAAQ,CAACH,MAAT,EADoC,EAAtC,EAGD,CA/GH,uCA6VW,iBACsD,KAAK5E,KAD3D,CACCjB,eADD,aACCA,eADD,CACkBC,qBADlB,aACkBA,qBADlB,CACyCgG,QADzC,aACyCA,QADzC,CAEP,GAAIC,CAAAA,wBAAJ,CACA,GAAI7B,sBAASC,EAAT,GAAgB,SAAhB,EAA6BtE,eAAjC,CAAkD,CAChDkG,wBAAwB,CAAG,GAAGC,MAAH,CAAUlG,qBAAV,EAAiCkG,MAAjC,CAAwC,CACjEC,aAAa,CACX,CAAC,CAACnG,qBAAqB,EAAI,EAA1B,EAA8BmG,aAA9B,EAA+C,CAAhD,EACA,KAAKb,KAAL,CAAW/B,aAHoD,CAAxC,CAA3B,CAKD,CACD,GAAM6C,CAAAA,QAAQ,iCAAMrF,UAAU,CAACP,WAAjB,CAA+B,KAAKwE,UAApC,CAAd,CACA,MACE,8BAAC,mBAAD,0BACMoB,QADN,EAEE,mBAAmB,CAAC,aAFtB,CAGE,YAAY,CAAE,CAAEC,MAAM,CAAE,KAAKf,KAAL,CAAW/B,aAArB,CAHhB,CAIE,gCAAgC,CAAE,KAJpC,CAKE,4BAA4B,CAAE,IALhC,CAME,mBAAmB,CAAE,CANvB,EAOM,KAAKvC,KAPX,EAQE,qBAAqB,CACnBiF,wBAAwB,EAAIjG,qBAThC,CAWE,aAAa,CAAE,KAAKsF,KAAL,CAAW/B,aAX5B,CAYE,kBAAkB,CAAE,KAAKtC,kBAZ3B,CAaE,gBAAgB,CAAE,KAAKE,gBAbzB,CAcE,WAAW,CAAE,KAAKM,WAdpB,CAeE,6BAA6B,CAAE,KAAKE,6BAftC,CAgBE,oBAAoB,CAAE,KAAKE,oBAhB7B,CAiBE,cAAc,CAAE,KAAKK,cAjBvB,CAkBE,kBAAkB,CAAE,KAAKuC,mBAlB3B,CAmBE,cAAc,CAAE,KAAKI,eAnBvB,CAoBE,MAAM,CAAE,KAAKK,MApBf,CAqBE,QAAQ,CAAEoB,sBAASC,SAAT,CAAmBP,QAAnB,CAA6B,KAAKnB,eAAlC,CArBZ,GADF,CAyBD,CAjYH,oBACU2B,eAAMC,SADhB,SAWS7G,WAXT,iBAWuCF,cAAc,CAACmB,mBAAD,CAXrD,QAaS6F,SAbT,6BAcInG,kBAAkB,CAAEjB,mBAAUqH,IAdlC,CAeIpC,mBAAmB,CAAEjF,mBAAUsH,KAAV,CAAgB,CACnCxF,CAAC,CAAE9B,mBAAUuH,MAAV,CAAiBC,UADe,CAEnCzF,CAAC,CAAE/B,mBAAUuH,MAAV,CAAiBC,UAFe,CAAhB,CAfzB,CAmBIzG,yBAAyB,CAAEf,mBAAUqH,IAnBzC,CAoBIzG,qBAAqB,CAAEZ,mBAAUqH,IApBrC,CAqBIxG,WAAW,CAAEb,mBAAUuH,MArB3B,CAsBIzG,iBAAiB,CAAEd,mBAAUuH,MAtBjC,CAuBIvG,mBAAmB,CAAEhB,mBAAUuH,MAvBnC,CAwBIb,QAAQ,CAAE1G,mBAAUyH,SAAV,CAAoB,CAC5BzH,mBAAUC,IADkB,CAE5BD,mBAAU0H,MAFkB,CAApB,CAxBd,CA4BI9B,MAAM,CAAE5F,mBAAUC,IA5BtB,CA6BIS,qBAAqB,CAAEV,mBAAU2H,GA7BrC,CA8BIlH,eAAe,CAAET,mBAAUqH,IA9B/B,CA+BI1B,QAAQ,CAAE3F,mBAAUC,IA/BxB,EAgCOJ,sBAhCP,SAoCS+H,YApCT,CAoCwB,CACpBhH,qBAAqB,CAAEa,UAAU,CAACb,qBADd,CAEpBC,WAAW,CAAEY,UAAU,CAACZ,WAFJ,CAGpBC,iBAAiB,CAAEW,UAAU,CAACX,iBAHV,CAIpBC,yBAAyB,CAAEU,UAAU,CAACV,yBAJlB,CAKpBC,mBAAmB,CAAES,UAAU,CAACT,mBALZ,CAMpBC,kBAAkB,CAAEQ,UAAU,CAACR,kBANX,CAOpBR,eAAe,CAAEgB,UAAU,CAAChB,eAPR,CApCxB,OAmYD,CAKD,GAAMoH,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,YAAD,CAAuB,CACpD,GAAI,MAAOA,CAAAA,YAAP,GAAwB,QAA5B,CAAsC,CACpC,MAAO,UAACC,IAAD,QAAoBzG,CAAAA,gBAAgB,CAACyG,IAAD,CAAOD,YAAP,CAApC,EAAP,CACD,CAFD,IAEO,CACL,MAAOxG,CAAAA,gBAAgB,CAACwG,YAAD,CAAvB,CACD,CACF,CAND,C,aAQeD,sB","sourcesContent":["/* @flow */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport ReactNative, {\n  Keyboard,\n  Platform,\n  UIManager,\n  TextInput,\n  findNodeHandle,\n  Animated\n} from 'react-native'\nimport { isIphoneX } from 'react-native-iphone-x-helper'\nimport type { KeyboardAwareInterface } from './KeyboardAwareInterface'\n\nconst _KAM_DEFAULT_TAB_BAR_HEIGHT: number = isIphoneX() ? 83 : 49\nconst _KAM_KEYBOARD_OPENING_TIME: number = 250\nconst _KAM_EXTRA_HEIGHT: number = 75\n\nconst supportedKeyboardEvents = [\n  'keyboardWillShow',\n  'keyboardDidShow',\n  'keyboardWillHide',\n  'keyboardDidHide',\n  'keyboardWillChangeFrame',\n  'keyboardDidChangeFrame'\n]\nconst keyboardEventToCallbackName = (eventName: string) =>\n  'on' + eventName[0].toUpperCase() + eventName.substring(1)\nconst keyboardEventPropTypes = supportedKeyboardEvents.reduce(\n  (acc: Object, eventName: string) => ({\n    ...acc,\n    [keyboardEventToCallbackName(eventName)]: PropTypes.func\n  }),\n  {}\n)\nconst keyboardAwareHOCTypeEvents = supportedKeyboardEvents.reduce(\n  (acc: Object, eventName: string) => ({\n    ...acc,\n    [keyboardEventToCallbackName(eventName)]: Function\n  }),\n  {}\n)\n\nexport type KeyboardAwareHOCProps = {\n  viewIsInsideTabBar?: boolean,\n  resetScrollToCoords?: {\n    x: number,\n    y: number\n  },\n  enableResetScrollToCoords?: boolean,\n  enableAutomaticScroll?: boolean,\n  extraHeight?: number,\n  extraScrollHeight?: number,\n  keyboardOpeningTime?: number,\n  onScroll?: Function,\n  update?: Function,\n  contentContainerStyle?: any,\n  enableOnAndroid?: boolean,\n  innerRef?: Function,\n  ...keyboardAwareHOCTypeEvents\n}\nexport type KeyboardAwareHOCState = {\n  keyboardSpace: number\n}\n\nexport type ElementLayout = {\n  x: number,\n  y: number,\n  width: number,\n  height: number\n}\n\nexport type ContentOffset = {\n  x: number,\n  y: number\n}\n\nexport type ScrollPosition = {\n  x: number,\n  y: number,\n  animated: boolean\n}\n\nexport type ScrollIntoViewOptions = ?{\n  getScrollPosition?: (\n    parentLayout: ElementLayout,\n    childLayout: ElementLayout,\n    contentOffset: ContentOffset\n  ) => ScrollPosition\n}\n\nexport type KeyboardAwareHOCOptions = ?{\n  enableOnAndroid: boolean,\n  contentContainerStyle: ?Object,\n  enableAutomaticScroll: boolean,\n  extraHeight: number,\n  extraScrollHeight: number,\n  enableResetScrollToCoords: boolean,\n  keyboardOpeningTime: number,\n  viewIsInsideTabBar: boolean,\n  refPropName: string,\n  extractNativeRef: Function\n}\n\nfunction getDisplayName(WrappedComponent: React$Component) {\n  return WrappedComponent && (WrappedComponent.displayName || WrappedComponent.name) || 'Component'\n}\n\nconst ScrollIntoViewDefaultOptions: KeyboardAwareHOCOptions = {\n  enableOnAndroid: false,\n  contentContainerStyle: undefined,\n  enableAutomaticScroll: true,\n  extraHeight: _KAM_EXTRA_HEIGHT,\n  extraScrollHeight: 0,\n  enableResetScrollToCoords: true,\n  keyboardOpeningTime: _KAM_KEYBOARD_OPENING_TIME,\n  viewIsInsideTabBar: false,\n\n  // The ref prop name that will be passed to the wrapped component to obtain a ref\n  // If your ScrollView is already wrapped, maybe the wrapper permit to get a ref\n  // For example, with glamorous-native ScrollView, you should use \"innerRef\"\n  refPropName: 'ref',\n  // Sometimes the ref you get is a ref to a wrapped view (ex: Animated.ScrollView)\n  // We need access to the imperative API of a real native ScrollView so we need extraction logic\n  extractNativeRef: (ref: Object) => {\n    // getNode() permit to support Animated.ScrollView automatically\n    // see https://github.com/facebook/react-native/issues/19650\n    // see https://stackoverflow.com/questions/42051368/scrollto-is-undefined-on-animated-scrollview/48786374\n    if (ref.getNode) {\n      return ref.getNode()\n    } else {\n      return ref\n    }\n  }\n}\n\nfunction KeyboardAwareHOC(\n  ScrollableComponent: React$Component,\n  userOptions: KeyboardAwareHOCOptions\n) {\n  const hocOptions: KeyboardAwareHOCOptions = {\n    ...ScrollIntoViewDefaultOptions,\n    ...userOptions\n  }\n\n  return class\n    extends React.Component<KeyboardAwareHOCProps, KeyboardAwareHOCState>\n    implements KeyboardAwareInterface {\n    _rnkasv_keyboardView: any\n    keyboardWillShowEvent: ?Function\n    keyboardWillHideEvent: ?Function\n    position: ContentOffset\n    defaultResetScrollToCoords: ?{ x: number, y: number }\n    mountedComponent: boolean\n    handleOnScroll: Function\n    state: KeyboardAwareHOCState\n    static displayName = `KeyboardAware${getDisplayName(ScrollableComponent)}`\n\n    static propTypes = {\n      viewIsInsideTabBar: PropTypes.bool,\n      resetScrollToCoords: PropTypes.shape({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired\n      }),\n      enableResetScrollToCoords: PropTypes.bool,\n      enableAutomaticScroll: PropTypes.bool,\n      extraHeight: PropTypes.number,\n      extraScrollHeight: PropTypes.number,\n      keyboardOpeningTime: PropTypes.number,\n      onScroll: PropTypes.oneOfType([\n        PropTypes.func, // Normal listener\n        PropTypes.object // Animated.event listener\n      ]),\n      update: PropTypes.func,\n      contentContainerStyle: PropTypes.any,\n      enableOnAndroid: PropTypes.bool,\n      innerRef: PropTypes.func,\n      ...keyboardEventPropTypes\n    }\n\n    // HOC options are used to init default props, so that these options can be overriden with component props\n    static defaultProps = {\n      enableAutomaticScroll: hocOptions.enableAutomaticScroll,\n      extraHeight: hocOptions.extraHeight,\n      extraScrollHeight: hocOptions.extraScrollHeight,\n      enableResetScrollToCoords: hocOptions.enableResetScrollToCoords,\n      keyboardOpeningTime: hocOptions.keyboardOpeningTime,\n      viewIsInsideTabBar: hocOptions.viewIsInsideTabBar,\n      enableOnAndroid: hocOptions.enableOnAndroid\n    }\n\n    constructor(props: KeyboardAwareHOCProps) {\n      super(props)\n      this.keyboardWillShowEvent = undefined\n      this.keyboardWillHideEvent = undefined\n      this.callbacks = {}\n      this.position = { x: 0, y: 0 }\n      this.defaultResetScrollToCoords = null\n      const keyboardSpace: number = props.viewIsInsideTabBar\n        ? _KAM_DEFAULT_TAB_BAR_HEIGHT\n        : 0\n      this.state = { keyboardSpace }\n    }\n\n    componentDidMount() {\n      this.mountedComponent = true\n      // Keyboard events\n      if (Platform.OS === 'ios') {\n        this.keyboardWillShowEvent = Keyboard.addListener(\n          'keyboardWillShow',\n          this._updateKeyboardSpace\n        )\n        this.keyboardWillHideEvent = Keyboard.addListener(\n          'keyboardWillHide',\n          this._resetKeyboardSpace\n        )\n      } else if (Platform.OS === 'android' && this.props.enableOnAndroid) {\n        this.keyboardWillShowEvent = Keyboard.addListener(\n          'keyboardDidShow',\n          this._updateKeyboardSpace\n        )\n        this.keyboardWillHideEvent = Keyboard.addListener(\n          'keyboardDidHide',\n          this._resetKeyboardSpace\n        )\n      }\n\n      supportedKeyboardEvents.forEach((eventName: string) => {\n        const callbackName = keyboardEventToCallbackName(eventName)\n        if (this.props[callbackName]) {\n          this.callbacks[eventName] = Keyboard.addListener(\n            eventName,\n            this.props[callbackName]\n          )\n        }\n      })\n    }\n\n    componentWillReceiveProps(nextProps: KeyboardAwareHOCProps) {\n      if (nextProps.viewIsInsideTabBar !== this.props.viewIsInsideTabBar) {\n        const keyboardSpace: number = nextProps.viewIsInsideTabBar\n          ? _KAM_DEFAULT_TAB_BAR_HEIGHT\n          : 0\n        if (this.state.keyboardSpace !== keyboardSpace) {\n          this.setState({ keyboardSpace })\n        }\n      }\n    }\n\n    componentWillUnmount() {\n      this.mountedComponent = false\n      this.keyboardWillShowEvent && this.keyboardWillShowEvent.remove()\n      this.keyboardWillHideEvent && this.keyboardWillHideEvent.remove()\n      Object.values(this.callbacks).forEach((callback: Object) =>\n        callback.remove()\n      )\n    }\n\n    getScrollResponder = () => {\n      return (\n        this._rnkasv_keyboardView &&\n        this._rnkasv_keyboardView.getScrollResponder()\n      )\n    }\n\n    scrollToPosition = (x: number, y: number, animated: boolean = true) => {\n      const responder = this.getScrollResponder()\n      responder && responder.scrollResponderScrollTo({ x, y, animated })\n    }\n\n    scrollToEnd = (animated?: boolean = true) => {\n      const responder = this.getScrollResponder()\n      responder && responder.scrollResponderScrollToEnd({ animated })\n    }\n\n    scrollForExtraHeightOnAndroid = (extraHeight: number) => {\n      this.scrollToPosition(0, this.position.y + extraHeight, true)\n    }\n\n    /**\n     * @param keyboardOpeningTime: takes a different keyboardOpeningTime in consideration.\n     * @param extraHeight: takes an extra height in consideration.\n     */\n    scrollToFocusedInput = (\n      reactNode: any,\n      extraHeight?: number,\n      keyboardOpeningTime?: number\n    ) => {\n      if (extraHeight === undefined) {\n        extraHeight = this.props.extraHeight || 0\n      }\n      if (keyboardOpeningTime === undefined) {\n        keyboardOpeningTime = this.props.keyboardOpeningTime || 0\n      }\n      setTimeout(() => {\n        if (!this.mountedComponent) {\n          return\n        }\n        const responder = this.getScrollResponder()\n        responder &&\n          responder.scrollResponderScrollNativeHandleToKeyboard(\n            reactNode,\n            extraHeight,\n            true\n          )\n      }, keyboardOpeningTime)\n    }\n\n    scrollIntoView = async (\n      element: React.Element<*>,\n      options: ScrollIntoViewOptions = {}\n    ) => {\n      if (!this._rnkasv_keyboardView || !element) {\n        return\n      }\n\n      const [parentLayout, childLayout] = await Promise.all([\n        this._measureElement(this._rnkasv_keyboardView),\n        this._measureElement(element)\n      ])\n\n      const getScrollPosition =\n        options.getScrollPosition || this._defaultGetScrollPosition\n      const { x, y, animated } = getScrollPosition(\n        parentLayout,\n        childLayout,\n        this.position\n      )\n      this.scrollToPosition(x, y, animated)\n    }\n\n    _defaultGetScrollPosition = (\n      parentLayout: ElementLayout,\n      childLayout: ElementLayout,\n      contentOffset: ContentOffset\n    ): ScrollPosition => {\n      return {\n        x: 0,\n        y: Math.max(0, childLayout.y - parentLayout.y + contentOffset.y),\n        animated: true\n      }\n    }\n\n    _measureElement = (element: React.Element<*>): Promise<ElementLayout> => {\n      const node = findNodeHandle(element)\n      return new Promise((resolve: ElementLayout => void) => {\n        UIManager.measureInWindow(\n          node,\n          (x: number, y: number, width: number, height: number) => {\n            resolve({ x, y, width, height })\n          }\n        )\n      })\n    }\n\n    // Keyboard actions\n    _updateKeyboardSpace = (frames: Object) => {\n      // Automatically scroll to focused TextInput\n      if (this.props.enableAutomaticScroll) {\n        let keyboardSpace: number =\n          frames.endCoordinates.height + this.props.extraScrollHeight\n        if (this.props.viewIsInsideTabBar) {\n          keyboardSpace -= _KAM_DEFAULT_TAB_BAR_HEIGHT\n        }\n        this.setState({ keyboardSpace })\n        const currentlyFocusedField = TextInput.State.currentlyFocusedField()\n        const responder = this.getScrollResponder()\n        if (!currentlyFocusedField || !responder) {\n          return\n        }\n        UIManager.viewIsDescendantOf(\n          currentlyFocusedField,\n          responder.getInnerViewNode(),\n          (isAncestor: boolean) => {\n            if (isAncestor) {\n              // Check if the TextInput will be hidden by the keyboard\n              UIManager.measureInWindow(\n                currentlyFocusedField,\n                (x: number, y: number, width: number, height: number) => {\n                  const textInputBottomPosition = y + height\n                  const keyboardPosition = frames.endCoordinates.screenY\n                  const totalExtraHeight =\n                    this.props.extraScrollHeight + this.props.extraHeight\n                  if (Platform.OS === 'ios') {\n                    if (\n                      textInputBottomPosition >\n                      keyboardPosition - totalExtraHeight\n                    ) {\n                      this._scrollToFocusedInputWithNodeHandle(\n                        currentlyFocusedField\n                      )\n                    }\n                  } else {\n                    // On android, the system would scroll the text input just\n                    // above the keyboard so we just neet to scroll the extra\n                    // height part\n                    if (textInputBottomPosition > keyboardPosition) {\n                      // Since the system already scrolled the whole view up\n                      // we should reduce that amount\n                      keyboardSpace =\n                        keyboardSpace -\n                        (textInputBottomPosition - keyboardPosition)\n                      this.setState({ keyboardSpace })\n                      this.scrollForExtraHeightOnAndroid(totalExtraHeight)\n                    } else if (\n                      textInputBottomPosition >\n                      keyboardPosition - totalExtraHeight\n                    ) {\n                      this.scrollForExtraHeightOnAndroid(\n                        totalExtraHeight -\n                          (keyboardPosition - textInputBottomPosition)\n                      )\n                    }\n                  }\n                }\n              )\n            }\n          }\n        )\n      }\n      if (!this.props.resetScrollToCoords) {\n        if (!this.defaultResetScrollToCoords) {\n          this.defaultResetScrollToCoords = this.position\n        }\n      }\n    }\n\n    _resetKeyboardSpace = () => {\n      const keyboardSpace: number = this.props.viewIsInsideTabBar\n        ? _KAM_DEFAULT_TAB_BAR_HEIGHT\n        : 0\n      this.setState({ keyboardSpace })\n      // Reset scroll position after keyboard dismissal\n      if (this.props.enableResetScrollToCoords === false) {\n        this.defaultResetScrollToCoords = null\n        return\n      } else if (this.props.resetScrollToCoords) {\n        this.scrollToPosition(this.props.resetScrollToCoords.x, this.props.resetScrollToCoords.y, true)\n      } else {\n        if (this.defaultResetScrollToCoords) {\n          this.scrollToPosition(\n            this.defaultResetScrollToCoords.x,\n            this.defaultResetScrollToCoords.y,\n            true\n          )\n          this.defaultResetScrollToCoords = null\n        } else {\n          this.scrollToPosition(0, 0, true)\n        }\n      }\n    }\n\n    _scrollToFocusedInputWithNodeHandle = (\n      nodeID: number,\n      extraHeight?: number,\n      keyboardOpeningTime?: number\n    ) => {\n      if (extraHeight === undefined) {\n        extraHeight = this.props.extraHeight\n      }\n      const reactNode = ReactNative.findNodeHandle(nodeID)\n      this.scrollToFocusedInput(\n        reactNode,\n        extraHeight + this.props.extraScrollHeight,\n        keyboardOpeningTime !== undefined\n          ? keyboardOpeningTime\n          : this.props.keyboardOpeningTime || 0\n      )\n    }\n\n    _handleOnScroll = (\n      e: SyntheticEvent<*> & { nativeEvent: { contentOffset: number } }\n    ) => {\n      this.position = e.nativeEvent.contentOffset\n    }\n\n    _handleRef = (ref: React.Component<*>) => {\n      this._rnkasv_keyboardView = ref ? hocOptions.extractNativeRef(ref) : ref\n      if (this.props.innerRef) {\n        this.props.innerRef(this._rnkasv_keyboardView)\n      }\n    }\n\n    update = () => {\n      const currentlyFocusedField = TextInput.State.currentlyFocusedField()\n      const responder = this.getScrollResponder()\n\n      if (!currentlyFocusedField || !responder) {\n        return\n      }\n\n      this._scrollToFocusedInputWithNodeHandle(currentlyFocusedField)\n    }\n\n    render() {\n      const { enableOnAndroid, contentContainerStyle, onScroll } = this.props\n      let newContentContainerStyle\n      if (Platform.OS === 'android' && enableOnAndroid) {\n        newContentContainerStyle = [].concat(contentContainerStyle).concat({\n          paddingBottom:\n            ((contentContainerStyle || {}).paddingBottom || 0) +\n            this.state.keyboardSpace\n        })\n      }\n      const refProps = { [hocOptions.refPropName]: this._handleRef }\n      return (\n        <ScrollableComponent\n          {...refProps}\n          keyboardDismissMode='interactive'\n          contentInset={{ bottom: this.state.keyboardSpace }}\n          automaticallyAdjustContentInsets={false}\n          showsVerticalScrollIndicator={true}\n          scrollEventThrottle={1}\n          {...this.props}\n          contentContainerStyle={\n            newContentContainerStyle || contentContainerStyle\n          }\n          keyboardSpace={this.state.keyboardSpace}\n          getScrollResponder={this.getScrollResponder}\n          scrollToPosition={this.scrollToPosition}\n          scrollToEnd={this.scrollToEnd}\n          scrollForExtraHeightOnAndroid={this.scrollForExtraHeightOnAndroid}\n          scrollToFocusedInput={this.scrollToFocusedInput}\n          scrollIntoView={this.scrollIntoView}\n          resetKeyboardSpace={this._resetKeyboardSpace}\n          handleOnScroll={this._handleOnScroll}\n          update={this.update}\n          onScroll={Animated.forkEvent(onScroll, this._handleOnScroll)}\n        />\n      )\n    }\n  }\n}\n\n// Allow to pass options, without breaking change, and curried for composition\n// listenToKeyboardEvents(ScrollView);\n// listenToKeyboardEvents(options)(Comp);\nconst listenToKeyboardEvents = (configOrComp: any) => {\n  if (typeof configOrComp === 'object') {\n    return (Comp: Function) => KeyboardAwareHOC(Comp, configOrComp)\n  } else {\n    return KeyboardAwareHOC(configOrComp)\n  }\n}\n\nexport default listenToKeyboardEvents\n"]},"metadata":{},"sourceType":"script"}