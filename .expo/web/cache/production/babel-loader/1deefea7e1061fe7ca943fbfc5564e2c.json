{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.hasHardwareAsync=hasHardwareAsync;exports.supportedAuthenticationTypesAsync=supportedAuthenticationTypesAsync;exports.isEnrolledAsync=isEnrolledAsync;exports.authenticateAsync=authenticateAsync;exports.cancelAuthenticate=cancelAuthenticate;exports.AuthenticationType=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _invariant=_interopRequireDefault(require(\"invariant\"));var _reactNative=require(\"react-native\");var _expoCore=require(\"expo-core\");var LocalAuthentication=_expoCore.NativeModulesProxy.ExpoLocalAuthentication;var AuthenticationType={FINGERPRINT:1,FACIAL_RECOGNITION:2};exports.AuthenticationType=AuthenticationType;function hasHardwareAsync(){return _regenerator.default.async(function hasHardwareAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",LocalAuthentication.hasHardwareAsync());case 1:case\"end\":return _context.stop();}}},null,this);}function supportedAuthenticationTypesAsync(){return _regenerator.default.async(function supportedAuthenticationTypesAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regenerator.default.awrap(LocalAuthentication.supportedAuthenticationTypesAsync());case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},null,this);}function isEnrolledAsync(){return _regenerator.default.async(function isEnrolledAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",LocalAuthentication.isEnrolledAsync());case 1:case\"end\":return _context3.stop();}}},null,this);}function authenticateAsync(){var promptMessageIOS,result,_args4=arguments;return _regenerator.default.async(function authenticateAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:promptMessageIOS=_args4.length>0&&_args4[0]!==undefined?_args4[0]:'Authenticate';if(!(_reactNative.Platform.OS==='ios')){_context4.next=10;break;}(0,_invariant.default)(typeof promptMessageIOS==='string'&&promptMessageIOS.length,'Fingerprint.authenticateAsync must be called with a non-empty string on iOS');_context4.next=5;return _regenerator.default.awrap(LocalAuthentication.authenticateAsync(promptMessageIOS));case 5:result=_context4.sent;if(result.warning){console.warn(result.warning);}return _context4.abrupt(\"return\",result);case 10:return _context4.abrupt(\"return\",LocalAuthentication.authenticateAsync());case 11:case\"end\":return _context4.stop();}}},null,this);}function cancelAuthenticate(){LocalAuthentication.cancelAuthenticate();}","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/expo-local-authentication/src/LocalAuthentication.js"],"names":["LocalAuthentication","NativeModulesProxy","ExpoLocalAuthentication","AuthenticationType","FINGERPRINT","FACIAL_RECOGNITION","hasHardwareAsync","supportedAuthenticationTypesAsync","isEnrolledAsync","authenticateAsync","promptMessageIOS","Platform","OS","length","result","warning","console","warn","cancelAuthenticate"],"mappings":"qfAEA,4DACA,yCACA,mC,GAEiCA,CAAAA,mB,CAAwBC,4B,CAAjDC,uB,CAID,GAAMC,CAAAA,kBAAkB,CAAG,CAChCC,WAAW,CAAE,CADmB,CAEhCC,kBAAkB,CAAE,CAFY,CAA3B,C,8CAOA,QAAeC,CAAAA,gBAAf,8JACEN,mBAAmB,CAACM,gBAApB,EADF,0DAIA,QAAeC,CAAAA,iCAAf,qMACQP,mBAAmB,CAACO,iCAApB,EADR,mHAIA,QAAeC,CAAAA,eAAf,iKACER,mBAAmB,CAACQ,eAApB,EADF,2DAIA,QAAeC,CAAAA,iBAAf,+KACLC,gBADK,kDACuB,cADvB,MAGDC,sBAASC,EAAT,GAAgB,KAHf,4BAIH,uBACE,MAAOF,CAAAA,gBAAP,GAA4B,QAA5B,EAAwCA,gBAAgB,CAACG,MAD3D,CAEE,6EAFF,EAJG,mDASkBb,mBAAmB,CAACS,iBAApB,CAAsCC,gBAAtC,CATlB,SASGI,MATH,gBAWH,GAAIA,MAAM,CAACC,OAAX,CAAoB,CAClBC,OAAO,CAACC,IAAR,CAAaH,MAAM,CAACC,OAApB,EACD,CAbE,iCAcID,MAdJ,2CAgBId,mBAAmB,CAACS,iBAApB,EAhBJ,4DAoBA,QAASS,CAAAA,kBAAT,EAAoC,CACzClB,mBAAmB,CAACkB,kBAApB,GACD","sourcesContent":["// @flow\n\nimport invariant from 'invariant';\nimport { Platform } from 'react-native';\nimport { NativeModulesProxy } from 'expo-core';\n\nconst { ExpoLocalAuthentication: LocalAuthentication } = NativeModulesProxy;\n\ntype LocalAuthenticationResult = { success: true } | { success: false, error: string };\n\nexport const AuthenticationType = {\n  FINGERPRINT: 1,\n  FACIAL_RECOGNITION: 2,\n};\n\ntype AuthenticationTypeType = $Keys<typeof AuthenticationType>;\n\nexport async function hasHardwareAsync(): Promise<boolean> {\n  return LocalAuthentication.hasHardwareAsync();\n}\n\nexport async function supportedAuthenticationTypesAsync(): Promise<Array<AuthenticationTypeType>> {\n  return await LocalAuthentication.supportedAuthenticationTypesAsync();\n}\n\nexport async function isEnrolledAsync(): Promise<boolean> {\n  return LocalAuthentication.isEnrolledAsync();\n}\n\nexport async function authenticateAsync(\n  promptMessageIOS?: string = 'Authenticate'\n): Promise<LocalAuthenticationResult> {\n  if (Platform.OS === 'ios') {\n    invariant(\n      typeof promptMessageIOS === 'string' && promptMessageIOS.length,\n      'Fingerprint.authenticateAsync must be called with a non-empty string on iOS'\n    );\n\n    const result = await LocalAuthentication.authenticateAsync(promptMessageIOS);\n\n    if (result.warning) {\n      console.warn(result.warning);\n    }\n    return result;\n  } else {\n    return LocalAuthentication.authenticateAsync();\n  }\n}\n\nexport function cancelAuthenticate(): void {\n  LocalAuthentication.cancelAuthenticate();\n}\n"]},"metadata":{},"sourceType":"script"}