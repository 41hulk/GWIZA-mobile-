{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=withNativeAd;exports.AdTriggerViewContext=exports.AdMediaViewContext=exports.AdIconViewContext=void 0;var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _nullthrows=_interopRequireDefault(require(\"nullthrows\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _NativeAdsManager=_interopRequireDefault(require(\"./NativeAdsManager\"));function withNativeAd(Component){return function(_React$Component){(0,_inherits2.default)(NativeAdContainer,_React$Component);function NativeAdContainer(props){var _this;(0,_classCallCheck2.default)(this,NativeAdContainer);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(NativeAdContainer).call(this,props));_this._subscription=null;_this._nativeAdViewRef=_react.default.createRef();_this._adMediaViewNodeHandle=null;_this._adIconViewNodeHandle=null;_this._interactiveTriggerNodeHandles=new Map();_this._handleAdLoaded=function(_ref){var ad=_ref.nativeEvent;_this.setState({ad:ad},function(){if(_this.props.onAdLoaded){var _ad=(0,_nullthrows.default)(_this.state.ad);_this.props.onAdLoaded(_ad);}});};_this._adMediaViewContextValue={nativeRef:function nativeRef(component){if(component){_this._setAdNodeHandles({adMediaViewNodeHandle:(0,_nullthrows.default)((0,_reactNative.findNodeHandle)(component))});}else{_this._setAdNodeHandles({adMediaViewNodeHandle:null});}}};_this._adIconViewContextValue={nativeRef:function nativeRef(component){if(component){_this._setAdNodeHandles({adIconViewNodeHandle:(0,_nullthrows.default)((0,_reactNative.findNodeHandle)(component))});}else{_this._setAdNodeHandles({adIconViewNodeHandle:null});}}};_this._adTriggerViewContextValue={registerComponent:function registerComponent(component){var nodeHandle=(0,_nullthrows.default)((0,_reactNative.findNodeHandle)(component));var interactiveTriggerNodeHandles=new Map(_this._interactiveTriggerNodeHandles);interactiveTriggerNodeHandles.set(component,nodeHandle);_this._setAdNodeHandles({interactiveTriggerNodeHandles:interactiveTriggerNodeHandles});},unregisterComponent:function unregisterComponent(component){var interactiveTriggerNodeHandles=new Map(_this._interactiveTriggerNodeHandles);interactiveTriggerNodeHandles.delete(component);_this._setAdNodeHandles({interactiveTriggerNodeHandles:interactiveTriggerNodeHandles});},onTriggerAd:function onTriggerAd(){if(_this._adMediaViewNodeHandle!==null&&_reactNative.Platform.OS==='android'){var nodeHandle=(0,_reactNative.findNodeHandle)(_this._nativeAdViewRef.current);_NativeAdsManager.default.triggerEvent(nodeHandle);}}};_this.state={ad:null,canRequestAds:props.adsManager.isValid};return _this;}(0,_createClass2.default)(NativeAdContainer,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(!this.state.canRequestAds){this._subscription=this.props.adsManager.onAdsLoaded(function(){_this2.setState({canRequestAds:true});});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this._subscription){this._subscription.remove();this._subscription=null;}}},{key:\"render\",value:function render(){if(!this.state.canRequestAds){return null;}var adsManager=this.props.adsManager;var props=this._getForwardedProps();return _react.default.createElement(NativeAdView,{ref:this._nativeAdViewRef,adsManager:adsManager.placementId,onAdLoaded:this._handleAdLoaded},_react.default.createElement(AdMediaViewContext.Provider,{value:this._adMediaViewContextValue},_react.default.createElement(AdIconViewContext.Provider,{value:this._adIconViewContextValue},_react.default.createElement(AdTriggerViewContext.Provider,{value:this._adTriggerViewContextValue},this.state.ad?_react.default.createElement(Component,(0,_extends2.default)({},props,{nativeAd:this.state.ad})):null))));}},{key:\"_getForwardedProps\",value:function _getForwardedProps(){var _this$props=this.props,adsManager=_this$props.adsManager,onAdLoaded=_this$props.onAdLoaded,props=(0,_objectWithoutProperties2.default)(_this$props,[\"adsManager\",\"onAdLoaded\"]);return props;}},{key:\"_setAdNodeHandles\",value:function _setAdNodeHandles(_ref2){var _ref2$adMediaViewNode=_ref2.adMediaViewNodeHandle,adMediaViewNodeHandle=_ref2$adMediaViewNode===void 0?this._adMediaViewNodeHandle:_ref2$adMediaViewNode,_ref2$adIconViewNodeH=_ref2.adIconViewNodeHandle,adIconViewNodeHandle=_ref2$adIconViewNodeH===void 0?this._adIconViewNodeHandle:_ref2$adIconViewNodeH,_ref2$interactiveTrig=_ref2.interactiveTriggerNodeHandles,interactiveTriggerNodeHandles=_ref2$interactiveTrig===void 0?this._interactiveTriggerNodeHandles:_ref2$interactiveTrig;var adMediaViewChanged=adMediaViewNodeHandle!==this._adMediaViewNodeHandle;var adIconViewChanged=adIconViewNodeHandle!==this._adIconViewNodeHandle;var interactiveTriggersChanged=!_areEqualSets(new Set(interactiveTriggerNodeHandles.values()),new Set(this._interactiveTriggerNodeHandles.values()));if(adMediaViewChanged||adIconViewChanged||interactiveTriggersChanged){this._adMediaViewNodeHandle=adMediaViewNodeHandle;this._adIconViewNodeHandle=adIconViewNodeHandle;this._interactiveTriggerNodeHandles=interactiveTriggerNodeHandles;if(this._adMediaViewNodeHandle!==null&&this._adIconViewNodeHandle!==null){_NativeAdsManager.default.registerViewsForInteractionAsync((0,_nullthrows.default)((0,_reactNative.findNodeHandle)(this._nativeAdViewRef.current)),this._adMediaViewNodeHandle,this._adIconViewNodeHandle,(0,_toConsumableArray2.default)(this._interactiveTriggerNodeHandles.values()));}}}}]);return NativeAdContainer;}(_react.default.Component);}var NativeAdView=(0,_reactNative.requireNativeComponent)('CTKNativeAd',{propTypes:(0,_objectSpread2.default)({},_reactNative.ViewPropTypes,{adsManager:_propTypes.default.string.isRequired,onAdLoaded:_propTypes.default.func})});var AdIconViewContext=_react.default.createContext(null);exports.AdIconViewContext=AdIconViewContext;var AdMediaViewContext=_react.default.createContext(null);exports.AdMediaViewContext=AdMediaViewContext;var AdTriggerViewContext=_react.default.createContext(null);exports.AdTriggerViewContext=AdTriggerViewContext;function _areEqualSets(set1,set2){if(set1.size!==set2.size){return false;}for(var _iterator=set1.values(),_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref3;if(_isArray){if(_i>=_iterator.length)break;_ref3=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref3=_i.value;}var _item=_ref3;if(!set2.has(_item)){return false;}}return true;}","map":{"version":3,"sources":["../../src/facebook-ads/withNativeAd.tsx"],"names":[],"mappings":"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","sourcesContent":["import { EventSubscription } from 'fbemitter';\nimport nullthrows from 'nullthrows';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Platform,\n  View,\n  ViewPropTypes,\n  findNodeHandle,\n  requireNativeComponent,\n} from 'react-native';\n\nimport { NativeAdIconView } from './AdIconView';\nimport { NativeAdMediaView } from './AdMediaView';\nimport AdsManager from './NativeAdsManager';\n\ntype AdContainerProps<P> = {\n  adsManager: AdsManager;\n  // TODO: rename this to onAdLoad\n  onAdLoaded?: ((ad: NativeAd) => void) | null;\n} & P;\n\ntype AdContainerState = {\n  ad: NativeAd | null;\n  canRequestAds: boolean;\n};\n\ntype AdProps = { nativeAd: NativeAd };\n\ntype AdNodeHandles = {\n  adMediaViewNodeHandle?: number | null;\n  adIconViewNodeHandle?: number | null;\n  interactiveTriggerNodeHandles?: Map<React.Component, number>;\n};\n\n/**\n * A higher-order function that wraps the given `Component` type and returns a new container\n * component type that passes in an extra `nativeAd` prop to the wrapped component.\n *\n * The container component renders null if the native ads manager is not yet ready to display ads or\n * if no ad could be loaded.\n */\nexport default function withNativeAd<P>(\n  Component: React.ComponentType<P & AdProps>\n): React.ComponentType<AdContainerProps<P>> {\n  return class NativeAdContainer extends React.Component<AdContainerProps<P>, AdContainerState> {\n    _subscription: EventSubscription | null = null;\n    _nativeAdViewRef = React.createRef<NativeAdView>();\n    _adMediaViewNodeHandle: number | null = null;\n    _adIconViewNodeHandle: number | null = null;\n    _interactiveTriggerNodeHandles: Map<React.Component, number> = new Map();\n\n    state: AdContainerState;\n\n    constructor(props: AdContainerProps<P>) {\n      super(props);\n      this.state = {\n        ad: null,\n        canRequestAds: props.adsManager.isValid,\n      };\n    }\n\n    componentDidMount() {\n      if (!this.state.canRequestAds) {\n        // On mounting, listen to the ads manager to learn when it is ready to display ads\n        this._subscription = this.props.adsManager.onAdsLoaded(() => {\n          this.setState({ canRequestAds: true });\n        });\n      }\n    }\n\n    componentWillUnmount() {\n      if (this._subscription) {\n        this._subscription.remove();\n        this._subscription = null;\n      }\n    }\n\n    render() {\n      if (!this.state.canRequestAds) {\n        return null;\n      }\n\n      let { adsManager } = this.props;\n      let props = this._getForwardedProps();\n      return (\n        <NativeAdView\n          ref={this._nativeAdViewRef}\n          adsManager={adsManager.placementId}\n          onAdLoaded={this._handleAdLoaded}>\n          <AdMediaViewContext.Provider value={this._adMediaViewContextValue}>\n            <AdIconViewContext.Provider value={this._adIconViewContextValue}>\n              <AdTriggerViewContext.Provider value={this._adTriggerViewContextValue}>\n                {this.state.ad ? <Component {...props} nativeAd={this.state.ad} /> : null}\n              </AdTriggerViewContext.Provider>\n            </AdIconViewContext.Provider>\n          </AdMediaViewContext.Provider>\n        </NativeAdView>\n      );\n    }\n\n    _getForwardedProps(): P {\n      let { adsManager, onAdLoaded, ...props } = this.props as any;\n      return props as P;\n    }\n\n    _handleAdLoaded = ({ nativeEvent: ad }: { nativeEvent: NativeAd }) => {\n      this.setState({ ad }, () => {\n        if (this.props.onAdLoaded) {\n          let ad = nullthrows(this.state.ad);\n          this.props.onAdLoaded(ad);\n        }\n      });\n    };\n\n    _adMediaViewContextValue = {\n      nativeRef: (component: NativeAdMediaView | null) => {\n        if (component) {\n          this._setAdNodeHandles({ adMediaViewNodeHandle: nullthrows(findNodeHandle(component)) });\n        } else {\n          this._setAdNodeHandles({ adMediaViewNodeHandle: null });\n        }\n      },\n    };\n\n    _adIconViewContextValue = {\n      nativeRef: (component: NativeAdIconView | null) => {\n        if (component) {\n          this._setAdNodeHandles({ adIconViewNodeHandle: nullthrows(findNodeHandle(component)) });\n        } else {\n          this._setAdNodeHandles({ adIconViewNodeHandle: null });\n        }\n      },\n    };\n\n    _adTriggerViewContextValue = {\n      registerComponent: (component: React.Component) => {\n        let nodeHandle = nullthrows(findNodeHandle(component));\n        let interactiveTriggerNodeHandles = new Map(this._interactiveTriggerNodeHandles);\n        interactiveTriggerNodeHandles.set(component, nodeHandle);\n        this._setAdNodeHandles({ interactiveTriggerNodeHandles });\n      },\n      unregisterComponent: (component: React.Component) => {\n        let interactiveTriggerNodeHandles = new Map(this._interactiveTriggerNodeHandles);\n        interactiveTriggerNodeHandles.delete(component);\n        this._setAdNodeHandles({ interactiveTriggerNodeHandles });\n      },\n      onTriggerAd: () => {\n        if (this._adMediaViewNodeHandle !== null && Platform.OS === 'android') {\n          let nodeHandle = findNodeHandle(this._nativeAdViewRef.current)!;\n          AdsManager.triggerEvent(nodeHandle);\n        }\n      },\n    };\n\n    /**\n     * Updates the registered ad views given their node handles. The node handles are not stored in\n     * this component's state nor does this method call \"setState\" to avoid unnecessarily\n     * re-rendering.\n     */\n    _setAdNodeHandles({\n      adMediaViewNodeHandle = this._adMediaViewNodeHandle,\n      adIconViewNodeHandle = this._adIconViewNodeHandle,\n      interactiveTriggerNodeHandles = this._interactiveTriggerNodeHandles,\n    }: AdNodeHandles): void {\n      let adMediaViewChanged = adMediaViewNodeHandle !== this._adMediaViewNodeHandle;\n      let adIconViewChanged = adIconViewNodeHandle !== this._adIconViewNodeHandle;\n\n      let interactiveTriggersChanged = !_areEqualSets(\n        new Set(interactiveTriggerNodeHandles.values()),\n        new Set(this._interactiveTriggerNodeHandles.values())\n      );\n\n      if (adMediaViewChanged || adIconViewChanged || interactiveTriggersChanged) {\n        this._adMediaViewNodeHandle = adMediaViewNodeHandle;\n        this._adIconViewNodeHandle = adIconViewNodeHandle;\n        this._interactiveTriggerNodeHandles = interactiveTriggerNodeHandles;\n\n        // TODO: handle unregistering views when components are unmounted\n        if (this._adMediaViewNodeHandle !== null && this._adIconViewNodeHandle !== null) {\n          AdsManager.registerViewsForInteractionAsync(\n            nullthrows(findNodeHandle(this._nativeAdViewRef.current)),\n            this._adMediaViewNodeHandle,\n            this._adIconViewNodeHandle,\n            [...this._interactiveTriggerNodeHandles.values()]\n          );\n        }\n      }\n    }\n  };\n}\n\ntype NativeAdViewProps = {\n  adsManager: string;\n  onAdLoaded?: (event: { nativeEvent: NativeAd }) => void;\n} & React.ElementProps<View>;\n\ntype NativeAdView = React.Component<NativeAdViewProps>;\n\nconst NativeAdView = requireNativeComponent('CTKNativeAd', {\n  propTypes: {\n    ...ViewPropTypes,\n    adsManager: PropTypes.string.isRequired,\n    onAdLoaded: PropTypes.func,\n  },\n});\n\n// React contexts for ad views that need to register with the ad container\nexport type AdIconViewContextValue = {\n  nativeRef: (component: NativeAdMediaView | null) => void;\n};\n\nexport type AdMediaViewContextValue = {\n  nativeRef: (component: NativeAdIconView | null) => void;\n};\n\nexport type AdTriggerViewContextValue = {\n  registerComponent: (component: React.Component) => void;\n  unregisterComponent: (component: React.Component) => void;\n  onTriggerAd: () => void;\n};\n\nexport const AdIconViewContext = React.createContext<AdIconViewContextValue | null>(null);\nexport const AdMediaViewContext = React.createContext<AdMediaViewContextValue | null>(null);\nexport const AdTriggerViewContext = React.createContext<AdTriggerViewContextValue | null>(null);\n\nexport type NativeAd = {\n  /**\n   * The headline the advertiser entered when they created their ad. This is usually the ad's main\n   * title.\n   */\n  headline?: string;\n\n  /**\n   * The link description which is additional information that the advertiser may have entered\n   */\n  linkDescription?: string;\n\n  /**\n   * The name of the Facebook Page or mobile app that represents the business running the ad\n   */\n  advertiserName?: string;\n\n  /**\n   * The ad's social context, such as, \"Over half a million users\"\n   */\n  socialContext?: string;\n\n  /**\n   * The call-to-action phrase of the ad, such as, \"Install Now\"\n   */\n  callToActionText?: string;\n\n  /**\n   * The body text, truncated to 90 characters, that contains the text the advertiser entered when\n   * they created their ad to tell people what the ad promotes\n   */\n  bodyText?: string;\n\n  /**\n   * The word \"ad\", translated into the viewer's language\n   */\n  adTranslation?: string;\n\n  /**\n   * The word \"promoted\", translated into the viewer's language\n   */\n  promotedTranslation?: string;\n\n  /**\n   * The word \"sponsored\", translated into the viewer's language\n   */\n  sponsoredTranslation?: string;\n};\n\nfunction _areEqualSets<T>(set1: Set<T>, set2: Set<T>): boolean {\n  if (set1.size !== set2.size) {\n    return false;\n  }\n\n  for (let item of set1.values()) {\n    if (!set2.has(item)) {\n      return false;\n    }\n  }\n  return true;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}