{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.createAssetAsync=createAssetAsync;exports.addAssetsToAlbumAsync=addAssetsToAlbumAsync;exports.removeAssetsFromAlbumAsync=removeAssetsFromAlbumAsync;exports.deleteAssetsAsync=deleteAssetsAsync;exports.getAssetInfoAsync=getAssetInfoAsync;exports.getAlbumsAsync=getAlbumsAsync;exports.getAlbumAsync=getAlbumAsync;exports.createAlbumAsync=createAlbumAsync;exports.deleteAlbumsAsync=deleteAlbumsAsync;exports.getAssetsAsync=getAssetsAsync;exports.addListener=addListener;exports.removeSubscription=removeSubscription;exports.removeAllListeners=removeAllListeners;exports.getMomentsAsync=getMomentsAsync;exports.SortBy=exports.MediaType=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _reactNative=require(\"react-native\");var _expoCore=require(\"expo-core\");var MediaLibrary=_expoCore.NativeModulesProxy.ExponentMediaLibrary;var eventEmitter=new _expoCore.EventEmitter(MediaLibrary);function arrayize(item){if(Array.isArray(item)){return item;}return item?[item]:[];}function getId(ref){if(typeof ref==='string'){return ref;}return ref?ref.id:undefined;}function checkAssetIds(assetIds){if(assetIds.some(function(id){return!id||typeof id!=='string';})){throw new Error('Asset ID must be a string!');}}function checkAlbumIds(albumIds){if(albumIds.some(function(id){return!id||typeof id!=='string';})){throw new Error('Album ID must be a string!');}}function checkMediaType(mediaType){if(Object.values(MediaType).indexOf(mediaType)===-1){throw new Error(\"Invalid mediaType: \"+mediaType);}}function checkSortBy(sortBy){if(Array.isArray(sortBy)){checkSortByKey(sortBy[0]);if(typeof sortBy[1]!=='boolean'){throw new Error('Invalid sortBy array argument. Second item must be a boolean!');}}else{checkSortByKey(sortBy);}}function checkSortByKey(sortBy){if(Object.values(SortBy).indexOf(sortBy)===-1){throw new Error(\"Invalid sortBy key: \"+sortBy);}}var MediaType=MediaLibrary.MediaType;exports.MediaType=MediaType;var SortBy=MediaLibrary.SortBy;exports.SortBy=SortBy;function createAssetAsync(localUri){var asset;return _regenerator.default.async(function createAssetAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!localUri||typeof localUri!=='string')){_context.next=2;break;}throw new Error('Invalid argument \"localUri\". It must be a string!');case 2:_context.next=4;return _regenerator.default.awrap(MediaLibrary.createAssetAsync(localUri));case 4:asset=_context.sent;if(!Array.isArray(asset)){_context.next=7;break;}return _context.abrupt(\"return\",asset[0]);case 7:return _context.abrupt(\"return\",asset);case 8:case\"end\":return _context.stop();}}},null,this);}function addAssetsToAlbumAsync(assets,album){var copy,assetIds,albumId,_args2=arguments;return _regenerator.default.async(function addAssetsToAlbumAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:copy=_args2.length>2&&_args2[2]!==undefined?_args2[2]:true;assetIds=arrayize(assets).map(getId);albumId=getId(album);checkAssetIds(assetIds);if(!(!albumId||typeof albumId!=='string')){_context2.next=6;break;}throw new Error('Invalid album ID. It must be a string!');case 6:if(!(_reactNative.Platform.OS==='ios')){_context2.next=8;break;}return _context2.abrupt(\"return\",MediaLibrary.addAssetsToAlbumAsync(assetIds,albumId));case 8:return _context2.abrupt(\"return\",MediaLibrary.addAssetsToAlbumAsync(assetIds,albumId,!!copy));case 9:case\"end\":return _context2.stop();}}},null,this);}function removeAssetsFromAlbumAsync(assets,album){var assetIds,albumId;return _regenerator.default.async(function removeAssetsFromAlbumAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:assetIds=arrayize(assets).map(getId);albumId=getId(album);checkAssetIds(assetIds);return _context3.abrupt(\"return\",MediaLibrary.removeAssetsFromAlbumAsync(assetIds,albumId));case 4:case\"end\":return _context3.stop();}}},null,this);}function deleteAssetsAsync(assets){var assetIds;return _regenerator.default.async(function deleteAssetsAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:assetIds=arrayize(assets).map(getId);checkAssetIds(assetIds);return _context4.abrupt(\"return\",MediaLibrary.deleteAssetsAsync(assetIds));case 3:case\"end\":return _context4.stop();}}},null,this);}function getAssetInfoAsync(asset){var assetId,assetInfo;return _regenerator.default.async(function getAssetInfoAsync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:assetId=getId(asset);checkAssetIds([assetId]);_context5.next=4;return _regenerator.default.awrap(MediaLibrary.getAssetInfoAsync(assetId));case 4:assetInfo=_context5.sent;if(!Array.isArray(assetInfo)){_context5.next=7;break;}return _context5.abrupt(\"return\",assetInfo[0]);case 7:return _context5.abrupt(\"return\",assetInfo);case 8:case\"end\":return _context5.stop();}}},null,this);}function getAlbumsAsync(){return _regenerator.default.async(function getAlbumsAsync$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:return _context6.abrupt(\"return\",MediaLibrary.getAlbumsAsync());case 1:case\"end\":return _context6.stop();}}},null,this);}function getAlbumAsync(title){return _regenerator.default.async(function getAlbumAsync$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(!(typeof title!=='string')){_context7.next=2;break;}throw new Error('Album title must be a string!');case 2:return _context7.abrupt(\"return\",MediaLibrary.getAlbumAsync(title));case 3:case\"end\":return _context7.stop();}}},null,this);}function createAlbumAsync(albumName,asset){var copyAsset,assetId,_args8=arguments;return _regenerator.default.async(function createAlbumAsync$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:copyAsset=_args8.length>2&&_args8[2]!==undefined?_args8[2]:true;assetId=getId(asset);if(!(_reactNative.Platform.OS==='android'&&(typeof assetId!=='string'||assetId.length===0))){_context8.next=4;break;}throw new Error('MediaLibrary.createAlbumAsync must be called with an asset on Android.');case 4:if(!(!albumName||typeof albumName!=='string')){_context8.next=6;break;}throw new Error('Invalid argument \"albumName\". It must be a string!');case 6:if(!(assetId!=null&&typeof assetId!=='string')){_context8.next=8;break;}throw new Error('Asset ID must be a string!');case 8:if(!(_reactNative.Platform.OS==='ios')){_context8.next=10;break;}return _context8.abrupt(\"return\",MediaLibrary.createAlbumAsync(albumName,assetId));case 10:return _context8.abrupt(\"return\",MediaLibrary.createAlbumAsync(albumName,assetId,!!copyAsset));case 11:case\"end\":return _context8.stop();}}},null,this);}function deleteAlbumsAsync(albums){var assetRemove,albumIds,_args9=arguments;return _regenerator.default.async(function deleteAlbumsAsync$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:assetRemove=_args9.length>1&&_args9[1]!==undefined?_args9[1]:false;albumIds=arrayize(albums).map(getId);checkAlbumIds(albumIds);if(!(_reactNative.Platform.OS==='android')){_context9.next=5;break;}return _context9.abrupt(\"return\",MediaLibrary.deleteAlbumsAsync(albumIds));case 5:return _context9.abrupt(\"return\",MediaLibrary.deleteAlbumsAsync(albumIds,!!assetRemove));case 6:case\"end\":return _context9.stop();}}},null,this);}function getAssetsAsync(){var assetsOptions,first,after,album,sortBy,mediaType,options,_args10=arguments;return _regenerator.default.async(function getAssetsAsync$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:assetsOptions=_args10.length>0&&_args10[0]!==undefined?_args10[0]:{};first=assetsOptions.first,after=assetsOptions.after,album=assetsOptions.album,sortBy=assetsOptions.sortBy,mediaType=assetsOptions.mediaType;options={first:first==null?20:first,after:getId(after),album:getId(album),sortBy:arrayize(sortBy),mediaType:arrayize(mediaType||[MediaType.photo])};if(!(first!=null&&typeof options.first!=='number')){_context10.next=5;break;}throw new Error('Option \"first\" must be a number!');case 5:if(!(after!=null&&typeof options.after!=='string')){_context10.next=7;break;}throw new Error('Option \"after\" must be a string!');case 7:if(!(album!=null&&typeof options.album!=='string')){_context10.next=9;break;}throw new Error('Option \"album\" must be a string!');case 9:options.sortBy.forEach(checkSortBy);options.mediaType.forEach(checkMediaType);return _context10.abrupt(\"return\",MediaLibrary.getAssetsAsync(options));case 12:case\"end\":return _context10.stop();}}},null,this);}function addListener(listener){var _this=this;var subscription=eventEmitter.addListener(MediaLibrary.CHANGE_LISTENER_NAME,listener);subscription.remove=function(){return _this.removeSubscription(subscription);};return subscription;}function removeSubscription(subscription){eventEmitter.removeSubscription(subscription);}function removeAllListeners(){eventEmitter.removeAllListeners('mediaLibraryDidChange');}function getMomentsAsync(){return _regenerator.default.async(function getMomentsAsync$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:if(!(_reactNative.Platform.OS==='android')){_context11.next=2;break;}throw new Error('MediaLibrary.getMomentsAsync is not supported on Android!');case 2:return _context11.abrupt(\"return\",MediaLibrary.getMomentsAsync());case 3:case\"end\":return _context11.stop();}}},null,this);}","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/expo-media-library/src/MediaLibrary.js"],"names":["MediaLibrary","NativeModulesProxy","ExponentMediaLibrary","eventEmitter","EventEmitter","arrayize","item","Array","isArray","getId","ref","id","undefined","checkAssetIds","assetIds","some","Error","checkAlbumIds","albumIds","checkMediaType","mediaType","Object","values","MediaType","indexOf","checkSortBy","sortBy","checkSortByKey","SortBy","createAssetAsync","localUri","asset","addAssetsToAlbumAsync","assets","album","copy","map","albumId","Platform","OS","removeAssetsFromAlbumAsync","deleteAssetsAsync","getAssetInfoAsync","assetId","assetInfo","getAlbumsAsync","getAlbumAsync","title","createAlbumAsync","albumName","copyAsset","length","deleteAlbumsAsync","albums","assetRemove","getAssetsAsync","assetsOptions","first","after","options","photo","forEach","addListener","listener","subscription","CHANGE_LISTENER_NAME","remove","removeSubscription","removeAllListeners","getMomentsAsync"],"mappings":"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","sourcesContent":["// @flow\n\nimport { Platform } from 'react-native';\nimport { NativeModulesProxy, EventEmitter } from 'expo-core';\n\nconst MediaLibrary = NativeModulesProxy.ExponentMediaLibrary;\nconst eventEmitter = new EventEmitter(MediaLibrary);\n\ntype MediaTypeValue = 'audio' | 'photo' | 'video' | 'unknown';\ntype SortByKey =\n  | 'default'\n  | 'id'\n  | 'mediaType'\n  | 'width'\n  | 'height'\n  | 'creationTime'\n  | 'modificationTime'\n  | 'duration';\ntype SortByValue = [SortByKey, boolean] | SortByKey;\n\ntype MediaTypeObject = {\n  audio: 'audio',\n  photo: 'photo',\n  video: 'video',\n  unknown: 'unknown',\n};\n\ntype SortByObject = {\n  default: 'default',\n  id: 'id',\n  mediaType: 'mediaType',\n  width: 'width',\n  height: 'height',\n  creationTime: 'creationTime',\n  modificationTime: 'modificationTime',\n  duration: 'duration',\n};\n\ntype Asset = {\n  id: string,\n  filename: string,\n  uri: string,\n  mediaType: MediaTypeValue,\n  mediaSubtypes?: Array<string>, // iOS only\n  width: number,\n  height: number,\n  creationTime: number,\n  modificationTime: number,\n  duration: number,\n  albumId?: string, // Android only\n};\n\ntype AssetInfo = Asset & {\n  localUri?: string,\n  location?: Location,\n  exif?: Object,\n  isFavorite?: boolean, //iOS only\n};\n\ntype Location = {\n  latitude: number,\n  longitude: number,\n};\n\ntype Album = {\n  id: string,\n  title: string,\n  assetCount: number,\n  type?: string, // iOS only\n\n  // iOS moments only\n  startTime: number,\n  endTime: number,\n  approximateLocation?: Location,\n  locationNames?: Array<string>,\n};\n\ntype AssetsOptions = {\n  first?: number,\n  after?: AssetRef,\n  album?: AlbumRef,\n  sortBy?: Array<SortByValue> | SortByValue,\n  mediaType?: Array<MediaTypeValue> | MediaTypeValue,\n};\n\ntype PagedInfo<T> = {\n  assets: Array<T>,\n  endCursor: string,\n  hasNextPage: boolean,\n  totalCount: number,\n};\n\ntype AssetRef = Asset | string;\ntype AlbumRef = Album | string;\n\ntype Subscription = {\n  remove: () => void,\n};\n\nfunction arrayize(item: any): Array<any> {\n  if (Array.isArray(item)) {\n    return item;\n  }\n  return item ? [item] : [];\n}\n\nfunction getId(ref): ?string {\n  if (typeof ref === 'string') {\n    return ref;\n  }\n  return ref ? ref.id : undefined;\n}\n\nfunction checkAssetIds(assetIds) {\n  if (assetIds.some(id => !id || typeof id !== 'string')) {\n    throw new Error('Asset ID must be a string!');\n  }\n}\n\nfunction checkAlbumIds(albumIds) {\n  if (albumIds.some(id => !id || typeof id !== 'string')) {\n    throw new Error('Album ID must be a string!');\n  }\n}\n\nfunction checkMediaType(mediaType) {\n  if (Object.values(MediaType).indexOf(mediaType) === -1) {\n    throw new Error(`Invalid mediaType: ${mediaType}`);\n  }\n}\n\nfunction checkSortBy(sortBy) {\n  if (Array.isArray(sortBy)) {\n    checkSortByKey(sortBy[0]);\n\n    if (typeof sortBy[1] !== 'boolean') {\n      throw new Error('Invalid sortBy array argument. Second item must be a boolean!');\n    }\n  } else {\n    checkSortByKey(sortBy);\n  }\n}\n\nfunction checkSortByKey(sortBy) {\n  if (Object.values(SortBy).indexOf(sortBy) === -1) {\n    throw new Error(`Invalid sortBy key: ${sortBy}`);\n  }\n}\n\n// export constants\nexport const MediaType: MediaTypeObject = MediaLibrary.MediaType;\nexport const SortBy: SortByObject = MediaLibrary.SortBy;\n\nexport async function createAssetAsync(localUri: string): Promise<Asset> {\n  if (!localUri || typeof localUri !== 'string') {\n    throw new Error('Invalid argument \"localUri\". It must be a string!');\n  }\n  const asset = await MediaLibrary.createAssetAsync(localUri);\n\n  if (Array.isArray(asset)) {\n    // Android returns an array with asset, we need to pick the first item\n    return asset[0];\n  }\n  return asset;\n}\n\nexport async function addAssetsToAlbumAsync(\n  assets: Array<AssetRef> | AssetRef,\n  album: AlbumRef,\n  copy: boolean = true\n) {\n  const assetIds = arrayize(assets).map(getId);\n  const albumId = getId(album);\n\n  checkAssetIds(assetIds);\n\n  if (!albumId || typeof albumId !== 'string') {\n    throw new Error('Invalid album ID. It must be a string!');\n  }\n\n  if (Platform.OS === 'ios') {\n    return MediaLibrary.addAssetsToAlbumAsync(assetIds, albumId);\n  }\n  return MediaLibrary.addAssetsToAlbumAsync(assetIds, albumId, !!copy);\n}\n\nexport async function removeAssetsFromAlbumAsync(\n  assets: Array<AssetRef> | AssetRef,\n  album: AlbumRef\n) {\n  const assetIds = arrayize(assets).map(getId);\n  const albumId = getId(album);\n\n  checkAssetIds(assetIds);\n  return MediaLibrary.removeAssetsFromAlbumAsync(assetIds, albumId);\n}\n\nexport async function deleteAssetsAsync(assets: Array<AssetRef> | AssetRef) {\n  const assetIds = arrayize(assets).map(getId);\n\n  checkAssetIds(assetIds);\n  return MediaLibrary.deleteAssetsAsync(assetIds);\n}\n\nexport async function getAssetInfoAsync(asset: AssetRef): Promise<AssetInfo> {\n  const assetId = getId(asset);\n\n  checkAssetIds([assetId]);\n\n  const assetInfo = await MediaLibrary.getAssetInfoAsync(assetId);\n\n  if (Array.isArray(assetInfo)) {\n    // Android returns an array with asset info, we need to pick the first item\n    return assetInfo[0];\n  }\n  return assetInfo;\n}\n\nexport async function getAlbumsAsync(): Promise<Array<Album>> {\n  return MediaLibrary.getAlbumsAsync();\n}\n\nexport async function getAlbumAsync(title: string): Promise<Album> {\n  if (typeof title !== 'string') {\n    throw new Error('Album title must be a string!');\n  }\n  return MediaLibrary.getAlbumAsync(title);\n}\n\nexport async function createAlbumAsync(\n  albumName: string,\n  asset?: AssetRef,\n  copyAsset?: boolean = true\n): Promise<Album> {\n  const assetId = getId(asset);\n\n  if (Platform.OS === 'android' && (typeof assetId !== 'string' || assetId.length === 0)) {\n    // it's not possible to create empty album on Android, so initial asset must be provided\n    throw new Error('MediaLibrary.createAlbumAsync must be called with an asset on Android.');\n  }\n  if (!albumName || typeof albumName !== 'string') {\n    throw new Error('Invalid argument \"albumName\". It must be a string!');\n  }\n  if (assetId != null && typeof assetId !== 'string') {\n    throw new Error('Asset ID must be a string!');\n  }\n\n  if (Platform.OS === 'ios') return MediaLibrary.createAlbumAsync(albumName, assetId);\n  return MediaLibrary.createAlbumAsync(albumName, assetId, !!copyAsset);\n}\n\nexport async function deleteAlbumsAsync(albums: Array<AlbumRef> | AlbumRef, assetRemove: boolean = false) {\n  const albumIds = arrayize(albums).map(getId);\n\n  checkAlbumIds(albumIds);\n  if (Platform.OS === 'android') {\n    return MediaLibrary.deleteAlbumsAsync(albumIds);\n  }\n  return MediaLibrary.deleteAlbumsAsync(albumIds, !!assetRemove);\n}\n\nexport async function getAssetsAsync(assetsOptions: AssetsOptions = {}): Promise<PagedInfo<Asset>> {\n  const { first, after, album, sortBy, mediaType } = assetsOptions;\n\n  const options = {\n    first: first == null ? 20 : first,\n    after: getId(after),\n    album: getId(album),\n    sortBy: arrayize(sortBy),\n    mediaType: arrayize(mediaType || [MediaType.photo]),\n  };\n\n  if (first != null && typeof options.first !== 'number') {\n    throw new Error('Option \"first\" must be a number!');\n  }\n  if (after != null && typeof options.after !== 'string') {\n    throw new Error('Option \"after\" must be a string!');\n  }\n  if (album != null && typeof options.album !== 'string') {\n    throw new Error('Option \"album\" must be a string!');\n  }\n\n  options.sortBy.forEach(checkSortBy);\n  options.mediaType.forEach(checkMediaType);\n\n  return MediaLibrary.getAssetsAsync(options);\n}\n\nexport function addListener(listener: () => void): Subscription {\n  const subscription = eventEmitter.addListener(MediaLibrary.CHANGE_LISTENER_NAME, listener);\n  subscription.remove = () => this.removeSubscription(subscription);\n  return subscription;\n}\n\nexport function removeSubscription(subscription: Subscription): void {\n  eventEmitter.removeSubscription(subscription);\n}\n\nexport function removeAllListeners(): void {\n  eventEmitter.removeAllListeners('mediaLibraryDidChange');\n}\n\n// iOS only\nexport async function getMomentsAsync() {\n  if (Platform.OS === 'android') {\n    throw new Error('MediaLibrary.getMomentsAsync is not supported on Android!');\n  }\n  return MediaLibrary.getMomentsAsync();\n}\n"]},"metadata":{},"sourceType":"script"}