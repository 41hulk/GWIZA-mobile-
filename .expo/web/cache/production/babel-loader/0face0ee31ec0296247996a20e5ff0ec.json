{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _reactNativeScreens=require(\"react-native-screens\");var _createPointerEventsContainer=_interopRequireDefault(require(\"./createPointerEventsContainer\"));var EPS=1e-5;function getAccessibilityProps(isActive){if(_reactNative.Platform.OS==='ios'){return{accessibilityElementsHidden:!isActive};}else if(_reactNative.Platform.OS==='android'){return{importantForAccessibility:isActive?'yes':'no-hide-descendants'};}else{return null;}}var Card=function(_React$Component){(0,_inherits2.default)(Card,_React$Component);function Card(){(0,_classCallCheck2.default)(this,Card);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(Card).apply(this,arguments));}(0,_createClass2.default)(Card,[{key:\"render\",value:function render(){var _this$props=this.props,children=_this$props.children,pointerEvents=_this$props.pointerEvents,style=_this$props.style,position=_this$props.position,transparent=_this$props.transparent,_this$props$scene=_this$props.scene,index=_this$props$scene.index,isActive=_this$props$scene.isActive;var active=transparent||isActive?1:position.interpolate({inputRange:[index,index+1-EPS,index+1],outputRange:[1,1,0],extrapolate:'clamp'});var animatedStyle=this.props.animatedStyle||{};var shadowOpacity=animatedStyle.shadowOpacity,overlayOpacity=animatedStyle.overlayOpacity,containerAnimatedStyle=(0,_objectWithoutProperties2.default)(animatedStyle,[\"shadowOpacity\",\"overlayOpacity\"]);var flattenedStyle=_reactNative.StyleSheet.flatten(style)||{};var backgroundColor=flattenedStyle.backgroundColor,screenStyle=(0,_objectWithoutProperties2.default)(flattenedStyle,[\"backgroundColor\"]);return _react.default.createElement(_reactNativeScreens.Screen,{pointerEvents:pointerEvents,onComponentRef:this.props.onComponentRef,style:[_reactNative.StyleSheet.absoluteFill,containerAnimatedStyle,screenStyle],active:active},!transparent&&shadowOpacity?_react.default.createElement(_reactNative.Animated.View,{style:[styles.shadow,{shadowOpacity:shadowOpacity}],pointerEvents:\"none\"}):null,_react.default.createElement(_reactNative.Animated.View,(0,_extends2.default)({},getAccessibilityProps(isActive),{style:[transparent?styles.transparent:styles.card,backgroundColor&&backgroundColor!=='transparent'?{backgroundColor:backgroundColor}:null]}),children),overlayOpacity?_react.default.createElement(_reactNative.Animated.View,{pointerEvents:\"none\",style:[styles.overlay,{opacity:overlayOpacity}]}):null);}}]);return Card;}(_react.default.Component);var styles=_reactNative.StyleSheet.create({card:{flex:1,backgroundColor:'#fff'},overlay:(0,_objectSpread2.default)({},_reactNative.StyleSheet.absoluteFillObject,{backgroundColor:'#000'}),shadow:{top:0,left:0,bottom:0,width:3,position:'absolute',backgroundColor:'#fff',shadowOffset:{width:-1,height:1},shadowRadius:5,shadowColor:'#000'},transparent:{flex:1,backgroundColor:'transparent'}});var _default=(0,_createPointerEventsContainer.default)(Card);exports.default=_default;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-navigation-stack/dist/views/StackView/StackViewCard.js"],"names":["EPS","getAccessibilityProps","isActive","Platform","OS","accessibilityElementsHidden","importantForAccessibility","Card","props","children","pointerEvents","style","position","transparent","scene","index","active","interpolate","inputRange","outputRange","extrapolate","animatedStyle","shadowOpacity","overlayOpacity","containerAnimatedStyle","flattenedStyle","StyleSheet","flatten","backgroundColor","screenStyle","onComponentRef","absoluteFill","styles","shadow","card","overlay","opacity","React","Component","create","flex","absoluteFillObject","top","left","bottom","width","shadowOffset","height","shadowRadius","shadowColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Animated, StyleSheet, Platform } from 'react-native';\nimport { Screen } from 'react-native-screens';\nimport createPointerEventsContainer from './createPointerEventsContainer';\n\nconst EPS = 1e-5;\nfunction getAccessibilityProps(isActive) {\n  if (Platform.OS === 'ios') {\n    return {\n      accessibilityElementsHidden: !isActive\n    };\n  } else if (Platform.OS === 'android') {\n    return {\n      importantForAccessibility: isActive ? 'yes' : 'no-hide-descendants'\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * Component that renders the scene as card for the <StackView />.\n */\nclass Card extends React.Component {\n  render() {\n    const {\n      children,\n      pointerEvents,\n      style,\n      position,\n      transparent,\n      scene: { index, isActive }\n    } = this.props;\n\n    const active = transparent || isActive ? 1 : position.interpolate({\n      inputRange: [index, index + 1 - EPS, index + 1],\n      outputRange: [1, 1, 0],\n      extrapolate: 'clamp'\n    });\n\n    // animatedStyle can be `false` if there is no screen interpolator\n    const animatedStyle = this.props.animatedStyle || {};\n\n    const {\n      shadowOpacity,\n      overlayOpacity,\n      ...containerAnimatedStyle\n    } = animatedStyle;\n\n    let flattenedStyle = StyleSheet.flatten(style) || {};\n    let { backgroundColor, ...screenStyle } = flattenedStyle;\n\n    return <Screen pointerEvents={pointerEvents} onComponentRef={this.props.onComponentRef} style={[StyleSheet.absoluteFill, containerAnimatedStyle, screenStyle]} active={active}>\n        {!transparent && shadowOpacity ? <Animated.View style={[styles.shadow, { shadowOpacity }]} pointerEvents=\"none\" /> : null}\n        <Animated.View {...getAccessibilityProps(isActive)} style={[transparent ? styles.transparent : styles.card, backgroundColor && backgroundColor !== 'transparent' ? { backgroundColor } : null]}>\n          {children}\n        </Animated.View>\n        {overlayOpacity ? <Animated.View pointerEvents=\"none\" style={[styles.overlay, { opacity: overlayOpacity }]} /> : null}\n      </Screen>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    width: 3,\n    position: 'absolute',\n    backgroundColor: '#fff',\n    shadowOffset: { width: -1, height: 1 },\n    shadowRadius: 5,\n    shadowColor: '#000'\n  },\n  transparent: {\n    flex: 1,\n    backgroundColor: 'transparent'\n  }\n});\n\nexport default createPointerEventsContainer(Card);"]},"metadata":{},"sourceType":"script"}