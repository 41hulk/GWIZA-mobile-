{"ast":null,"code":"'use strict';var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _possibleConstructorReturn=require(\"@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"@babel/runtime/helpers/getPrototypeOf\");var _inherits=require(\"@babel/runtime/helpers/inherits\");var EventSubscription=require(\"./EventSubscription\");var EmitterSubscription=function(_EventSubscription){_inherits(EmitterSubscription,_EventSubscription);function EmitterSubscription(emitter,subscriber,listener,context){var _this;_classCallCheck(this,EmitterSubscription);_this=_possibleConstructorReturn(this,_getPrototypeOf(EmitterSubscription).call(this,subscriber));_this.emitter=emitter;_this.listener=listener;_this.context=context;return _this;}_createClass(EmitterSubscription,[{key:\"remove\",value:function remove(){this.emitter.removeSubscription(this);}}]);return EmitterSubscription;}(EventSubscription);module.exports=EmitterSubscription;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native/Libraries/vendor/emitter/EmitterSubscription.js"],"names":["EventSubscription","require","EmitterSubscription","emitter","subscriber","listener","context","removeSubscription","module","exports"],"mappings":"AAUA,a,6VAEA,GAAMA,CAAAA,iBAAiB,CAAGC,OAAO,uBAAjC,C,GAQMC,CAAAA,mB,gFAeJ,6BACEC,OADF,CAEEC,UAFF,CAGEC,QAHF,CAIEC,OAJF,CAKE,qDACA,qFAAMF,UAAN,GACA,MAAKD,OAAL,CAAeA,OAAf,CACA,MAAKE,QAAL,CAAgBA,QAAhB,CACA,MAAKC,OAAL,CAAeA,OAAf,CAJA,aAKD,C,uEAQQ,CACP,KAAKH,OAAL,CAAaI,kBAAb,CAAgC,IAAhC,EACD,C,iCAnC+BP,iB,EAsClCQ,MAAM,CAACC,OAAP,CAAiBP,mBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst EventSubscription = require('./EventSubscription');\n\nimport type EventEmitter from './EventEmitter';\nimport type EventSubscriptionVendor from './EventSubscriptionVendor';\n\n/**\n * EmitterSubscription represents a subscription with listener and context data.\n */\nclass EmitterSubscription extends EventSubscription {\n  emitter: EventEmitter;\n  listener: Function;\n  context: ?Object;\n\n  /**\n   * @param {EventEmitter} emitter - The event emitter that registered this\n   *   subscription\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\n   *   this subscription\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n  constructor(\n    emitter: EventEmitter,\n    subscriber: EventSubscriptionVendor,\n    listener: Function,\n    context: ?Object,\n  ) {\n    super(subscriber);\n    this.emitter = emitter;\n    this.listener = listener;\n    this.context = context;\n  }\n\n  /**\n   * Removes this subscription from the emitter that registered it.\n   * Note: we're overriding the `remove()` method of EventSubscription here\n   * but deliberately not calling `super.remove()` as the responsibility\n   * for removing the subscription lies with the EventEmitter.\n   */\n  remove() {\n    this.emitter.removeSubscription(this);\n  }\n}\n\nmodule.exports = EmitterSubscription;\n"]},"metadata":{},"sourceType":"script"}