{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.getCalendarsAsync=getCalendarsAsync;exports.createCalendarAsync=createCalendarAsync;exports.updateCalendarAsync=updateCalendarAsync;exports.deleteCalendarAsync=deleteCalendarAsync;exports.getEventsAsync=getEventsAsync;exports.getEventAsync=getEventAsync;exports.createEventAsync=createEventAsync;exports.updateEventAsync=updateEventAsync;exports.deleteEventAsync=deleteEventAsync;exports.getAttendeesForEventAsync=getAttendeesForEventAsync;exports.createAttendeeAsync=createAttendeeAsync;exports.updateAttendeeAsync=updateAttendeeAsync;exports.deleteAttendeeAsync=deleteAttendeeAsync;exports.getRemindersAsync=getRemindersAsync;exports.getReminderAsync=getReminderAsync;exports.createReminderAsync=createReminderAsync;exports.updateReminderAsync=updateReminderAsync;exports.deleteReminderAsync=deleteReminderAsync;exports.getSourcesAsync=getSourcesAsync;exports.getSourceAsync=getSourceAsync;exports.openEventInCalendar=openEventInCalendar;exports.DEFAULT=exports.ReminderStatus=exports.CalendarAccessLevel=exports.EventAccessLevel=exports.AlarmMethod=exports.AttendeeType=exports.AttendeeStatus=exports.AttendeeRole=exports.SourceType=exports.EventStatus=exports.CalendarType=exports.Availability=exports.Frequency=exports.EntityTypes=void 0;var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _reactNative=require(\"react-native\");function getCalendarsAsync(entityType){return _regenerator.default.async(function getCalendarsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(entityType){_context.next=2;break;}return _context.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.getCalendarsAsync(null));case 2:return _context.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.getCalendarsAsync(entityType));case 3:case\"end\":return _context.stop();}}},null,this);}function createCalendarAsync(){var details,color,newDetails,_args2=arguments;return _regenerator.default.async(function createCalendarAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:details=_args2.length>0&&_args2[0]!==undefined?_args2[0]:{};color=details.color?(0,_reactNative.processColor)(details.color):undefined;newDetails=(0,_objectSpread2.default)({},details,{id:undefined,color:color});return _context2.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.saveCalendarAsync(newDetails));case 4:case\"end\":return _context2.stop();}}},null,this);}function updateCalendarAsync(id){var details,color,newDetails,_args3=arguments;return _regenerator.default.async(function updateCalendarAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:details=_args3.length>1&&_args3[1]!==undefined?_args3[1]:{};if(id){_context3.next=3;break;}throw new Error('updateCalendarAsync must be called with an id (string) of the target calendar');case 3:color=details.color?(0,_reactNative.processColor)(details.color):undefined;if(_reactNative.Platform.OS==='android'){if(details.hasOwnProperty('source')||details.hasOwnProperty('color')||details.hasOwnProperty('allowsModifications')||details.hasOwnProperty('allowedAvailabilities')||details.hasOwnProperty('isPrimary')||details.hasOwnProperty('ownerAccount')||details.hasOwnProperty('timeZone')||details.hasOwnProperty('allowedReminders')||details.hasOwnProperty('allowedAttendeeTypes')||details.hasOwnProperty('accessLevel')){console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');}}else{if(details.hasOwnProperty('source')||details.hasOwnProperty('type')||details.hasOwnProperty('entityType')||details.hasOwnProperty('allowsModifications')||details.hasOwnProperty('allowedAvailabilities')){console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');}}newDetails=(0,_objectSpread2.default)({},details,{id:id,color:color});return _context3.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.saveCalendarAsync(newDetails));case 7:case\"end\":return _context3.stop();}}},null,this);}function deleteCalendarAsync(id){return _regenerator.default.async(function deleteCalendarAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(id){_context4.next=2;break;}throw new Error('deleteCalendarAsync must be called with an id (string) of the target calendar');case 2:return _context4.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.deleteCalendarAsync(id));case 3:case\"end\":return _context4.stop();}}},null,this);}function getEventsAsync(calendarIds,startDate,endDate){return _regenerator.default.async(function getEventsAsync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(startDate){_context5.next=2;break;}throw new Error('getEventsAsync must be called with a startDate (date) to search for events');case 2:if(endDate){_context5.next=4;break;}throw new Error('getEventsAsync must be called with an endDate (date) to search for events');case 4:if(!(!calendarIds||!calendarIds.length)){_context5.next=6;break;}throw new Error('getEventsAsync must be called with a non-empty array of calendarIds to search');case 6:return _context5.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.getEventsAsync(startDate,endDate,calendarIds));case 7:case\"end\":return _context5.stop();}}},null,this);}function getEventAsync(id){var _ref,_ref$futureEvents,futureEvents,instanceStartDate,_args6=arguments;return _regenerator.default.async(function getEventAsync$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_ref=_args6.length>1&&_args6[1]!==undefined?_args6[1]:{},_ref$futureEvents=_ref.futureEvents,futureEvents=_ref$futureEvents===void 0?false:_ref$futureEvents,instanceStartDate=_ref.instanceStartDate;if(id){_context6.next=3;break;}throw new Error('getEventAsync must be called with an id (string) of the target event');case 3:if(!(_reactNative.Platform.OS==='ios')){_context6.next=7;break;}return _context6.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.getEventByIdAsync(id,instanceStartDate));case 7:return _context6.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.getEventByIdAsync(id));case 8:case\"end\":return _context6.stop();}}},null,this);}function createEventAsync(calendarId){var details,newDetails,_args7=arguments;return _regenerator.default.async(function createEventAsync$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:details=_args7.length>1&&_args7[1]!==undefined?_args7[1]:{};if(calendarId){_context7.next=3;break;}throw new Error('createEventAsync must be called with an id (string) of the target calendar');case 3:if(!(_reactNative.Platform.OS==='android')){_context7.next=10;break;}if(details.startDate){_context7.next=6;break;}throw new Error('createEventAsync requires a startDate (Date)');case 6:if(details.endDate){_context7.next=8;break;}throw new Error('createEventAsync requires an endDate (Date)');case 8:if(details.timeZone){_context7.next=10;break;}throw new Error('createEventAsync requires a timeZone (string)');case 10:newDetails=(0,_objectSpread2.default)({},details,{id:undefined,calendarId:calendarId===DEFAULT?undefined:calendarId});return _context7.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.saveEventAsync(newDetails,{}));case 12:case\"end\":return _context7.stop();}}},null,this);}function updateEventAsync(id){var details,_ref2,_ref2$futureEvents,futureEvents,instanceStartDate,newDetails,_args8=arguments;return _regenerator.default.async(function updateEventAsync$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:details=_args8.length>1&&_args8[1]!==undefined?_args8[1]:{};_ref2=_args8.length>2&&_args8[2]!==undefined?_args8[2]:{},_ref2$futureEvents=_ref2.futureEvents,futureEvents=_ref2$futureEvents===void 0?false:_ref2$futureEvents,instanceStartDate=_ref2.instanceStartDate;if(id){_context8.next=4;break;}throw new Error('updateEventAsync must be called with an id (string) of the target event');case 4:if(_reactNative.Platform.OS==='ios'){if(details.hasOwnProperty('creationDate')||details.hasOwnProperty('lastModifiedDate')||details.hasOwnProperty('originalStartDate')||details.hasOwnProperty('isDetached')||details.hasOwnProperty('status')||details.hasOwnProperty('organizer')){console.warn('updateEventAsync was called with one or more read-only properties, which will not be updated');}}newDetails=(0,_objectSpread2.default)({},details,{id:id,instanceStartDate:instanceStartDate});return _context8.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.saveEventAsync(newDetails,{futureEvents:futureEvents}));case 7:case\"end\":return _context8.stop();}}},null,this);}function deleteEventAsync(id){var _ref3,_ref3$futureEvents,futureEvents,instanceStartDate,_args9=arguments;return _regenerator.default.async(function deleteEventAsync$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_ref3=_args9.length>1&&_args9[1]!==undefined?_args9[1]:{},_ref3$futureEvents=_ref3.futureEvents,futureEvents=_ref3$futureEvents===void 0?false:_ref3$futureEvents,instanceStartDate=_ref3.instanceStartDate;if(id){_context9.next=3;break;}throw new Error('deleteEventAsync must be called with an id (string) of the target event');case 3:return _context9.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.deleteEventAsync({id:id,instanceStartDate:instanceStartDate},{futureEvents:futureEvents}));case 4:case\"end\":return _context9.stop();}}},null,this);}function getAttendeesForEventAsync(id){var _ref4,_ref4$futureEvents,futureEvents,instanceStartDate,params,_args10=arguments;return _regenerator.default.async(function getAttendeesForEventAsync$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_ref4=_args10.length>1&&_args10[1]!==undefined?_args10[1]:{},_ref4$futureEvents=_ref4.futureEvents,futureEvents=_ref4$futureEvents===void 0?false:_ref4$futureEvents,instanceStartDate=_ref4.instanceStartDate;if(id){_context10.next=3;break;}throw new Error('getAttendeesForEventAsync must be called with an id (string) of the target event');case 3:params=_reactNative.Platform.OS==='ios'?{id:id,instanceStartDate:instanceStartDate}:id;return _context10.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.getAttendeesForEventAsync(params));case 5:case\"end\":return _context10.stop();}}},null,this);}function createAttendeeAsync(eventId){var details,newDetails,_args11=arguments;return _regenerator.default.async(function createAttendeeAsync$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:details=_args11.length>1&&_args11[1]!==undefined?_args11[1]:{};if(!(_reactNative.Platform.OS==='ios')){_context11.next=3;break;}throw new Error('createAttendeeAsync is not available on iOS');case 3:if(eventId){_context11.next=5;break;}throw new Error('createAttendeeAsync must be called with an id (string) of the target event');case 5:if(details.email){_context11.next=7;break;}throw new Error('createAttendeeAsync requires an email (string)');case 7:if(details.role){_context11.next=9;break;}throw new Error('createAttendeeAsync requires a role (string)');case 9:if(details.type){_context11.next=11;break;}throw new Error('createAttendeeAsync requires a type (string)');case 11:if(details.status){_context11.next=13;break;}throw new Error('createAttendeeAsync requires a status (string)');case 13:newDetails=(0,_objectSpread2.default)({},details,{id:undefined});return _context11.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails,eventId));case 15:case\"end\":return _context11.stop();}}},null,this);}function updateAttendeeAsync(id){var details,newDetails,_args12=arguments;return _regenerator.default.async(function updateAttendeeAsync$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:details=_args12.length>1&&_args12[1]!==undefined?_args12[1]:{};if(!(_reactNative.Platform.OS==='ios')){_context12.next=3;break;}throw new Error('updateAttendeeAsync is not available on iOS');case 3:if(id){_context12.next=5;break;}throw new Error('updateAttendeeAsync must be called with an id (string) of the target event');case 5:newDetails=(0,_objectSpread2.default)({},details,{id:id});return _context12.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails,null));case 7:case\"end\":return _context12.stop();}}},null,this);}function deleteAttendeeAsync(id){return _regenerator.default.async(function deleteAttendeeAsync$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:if(!(_reactNative.Platform.OS==='ios')){_context13.next=2;break;}throw new Error('deleteAttendeeAsync is not available on iOS');case 2:if(id){_context13.next=4;break;}throw new Error('deleteAttendeeAsync must be called with an id (string) of the target event');case 4:return _context13.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.deleteAttendeeAsync(id));case 5:case\"end\":return _context13.stop();}}},null,this);}function getRemindersAsync(calendarIds,status,startDate,endDate){return _regenerator.default.async(function getRemindersAsync$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:if(!(_reactNative.Platform.OS==='android')){_context14.next=2;break;}throw new Error('getRemindersAsync is not available on Android');case 2:if(!(status&&!startDate)){_context14.next=4;break;}throw new Error('getRemindersAsync must be called with a startDate (date) to search for reminders');case 4:if(!(status&&!endDate)){_context14.next=6;break;}throw new Error('getRemindersAsync must be called with an endDate (date) to search for reminders');case 6:if(!(!calendarIds||!calendarIds.length)){_context14.next=8;break;}throw new Error('getRemindersAsync must be called with a non-empty array of calendarIds to search');case 8:return _context14.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.getRemindersAsync(startDate||null,endDate||null,calendarIds,status||null));case 9:case\"end\":return _context14.stop();}}},null,this);}function getReminderAsync(id){return _regenerator.default.async(function getReminderAsync$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:if(!(_reactNative.Platform.OS==='android')){_context15.next=2;break;}throw new Error('getReminderAsync is not available on Android');case 2:if(id){_context15.next=4;break;}throw new Error('getReminderAsync must be called with an id (string) of the target reminder');case 4:return _context15.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.getReminderByIdAsync(id));case 5:case\"end\":return _context15.stop();}}},null,this);}function createReminderAsync(calendarId){var details,newDetails,_args16=arguments;return _regenerator.default.async(function createReminderAsync$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:details=_args16.length>1&&_args16[1]!==undefined?_args16[1]:{};if(!(_reactNative.Platform.OS==='android')){_context16.next=3;break;}throw new Error('createReminderAsync is not available on Android');case 3:if(calendarId){_context16.next=5;break;}throw new Error('createReminderAsync must be called with an id (string) of the target calendar');case 5:newDetails=(0,_objectSpread2.default)({},details,{id:undefined,calendarId:calendarId===DEFAULT?undefined:calendarId});return _context16.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.saveReminderAsync(newDetails));case 7:case\"end\":return _context16.stop();}}},null,this);}function updateReminderAsync(id){var details,newDetails,_args17=arguments;return _regenerator.default.async(function updateReminderAsync$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:details=_args17.length>1&&_args17[1]!==undefined?_args17[1]:{};if(!(_reactNative.Platform.OS==='android')){_context17.next=3;break;}throw new Error('updateReminderAsync is not available on Android');case 3:if(id){_context17.next=5;break;}throw new Error('updateReminderAsync must be called with an id (string) of the target reminder');case 5:if(details.hasOwnProperty('creationDate')||details.hasOwnProperty('lastModifiedDate')){console.warn('updateReminderAsync was called with one or more read-only properties, which will not be updated');}newDetails=(0,_objectSpread2.default)({},details,{id:id});return _context17.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.saveReminderAsync(newDetails));case 8:case\"end\":return _context17.stop();}}},null,this);}function deleteReminderAsync(id){return _regenerator.default.async(function deleteReminderAsync$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:if(!(_reactNative.Platform.OS==='android')){_context18.next=2;break;}throw new Error('deleteReminderAsync is not available on Android');case 2:if(id){_context18.next=4;break;}throw new Error('deleteReminderAsync must be called with an id (string) of the target reminder');case 4:return _context18.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.deleteReminderAsync(id));case 5:case\"end\":return _context18.stop();}}},null,this);}function getSourcesAsync(){return _regenerator.default.async(function getSourcesAsync$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:if(!(_reactNative.Platform.OS==='android')){_context19.next=2;break;}throw new Error('getSourcesAsync is not available on Android');case 2:return _context19.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.getSourcesAsync());case 3:case\"end\":return _context19.stop();}}},null,this);}function getSourceAsync(id){return _regenerator.default.async(function getSourceAsync$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:if(!(_reactNative.Platform.OS==='android')){_context20.next=2;break;}throw new Error('getSourceAsync is not available on Android');case 2:if(id){_context20.next=4;break;}throw new Error('getSourceAsync must be called with an id (string) of the target source');case 4:return _context20.abrupt(\"return\",_reactNative.NativeModules.ExponentCalendar.getSourceByIdAsync(id));case 5:case\"end\":return _context20.stop();}}},null,this);}function openEventInCalendar(id){if(_reactNative.Platform.OS==='ios'){console.warn('openEventInCalendar is not available on iOS');return;}if(!id){throw new Error('openEventInCalendar must be called with an id (string) of the target event');}return _reactNative.NativeModules.ExponentCalendar.openEventInCalendar(parseInt(id,10));}var EntityTypes={EVENT:'event',REMINDER:'reminder'};exports.EntityTypes=EntityTypes;var Frequency={DAILY:'daily',WEEKLY:'weekly',MONTHLY:'monthly',YEARLY:'yearly'};exports.Frequency=Frequency;var Availability={NOT_SUPPORTED:'notSupported',BUSY:'busy',FREE:'free',TENTATIVE:'tentative',UNAVAILABLE:'unavailable'};exports.Availability=Availability;var CalendarType={LOCAL:'local',CALDAV:'caldav',EXCHANGE:'exchange',SUBSCRIBED:'subscribed',BIRTHDAYS:'birthdays'};exports.CalendarType=CalendarType;var EventStatus={NONE:'none',CONFIRMED:'confirmed',TENTATIVE:'tentative',CANCELED:'canceled'};exports.EventStatus=EventStatus;var SourceType={LOCAL:'local',EXCHANGE:'exchange',CALDAV:'caldav',MOBILEME:'mobileme',SUBSCRIBED:'subscribed',BIRTHDAYS:'birthdays'};exports.SourceType=SourceType;var AttendeeRole={UNKNOWN:'unknown',REQUIRED:'required',OPTIONAL:'optional',CHAIR:'chair',NON_PARTICIPANT:'nonParticipant',ATTENDEE:'attendee',ORGANIZER:'organizer',PERFORMER:'performer',SPEAKER:'speaker',NONE:'none'};exports.AttendeeRole=AttendeeRole;var AttendeeStatus={UNKNOWN:'unknown',PENDING:'pending',ACCEPTED:'accepted',DECLINED:'declined',TENTATIVE:'tentative',DELEGATED:'delegated',COMPLETED:'completed',IN_PROCESS:'inProcess',INVITED:'invited',NONE:'none'};exports.AttendeeStatus=AttendeeStatus;var AttendeeType={UNKNOWN:'unknown',PERSON:'person',ROOM:'room',GROUP:'group',RESOURCE:'resource',OPTIONAL:'optional',REQUIRED:'required',NONE:'none'};exports.AttendeeType=AttendeeType;var AlarmMethod={ALARM:'alarm',ALERT:'alert',EMAIL:'email',SMS:'sms',DEFAULT:'default'};exports.AlarmMethod=AlarmMethod;var EventAccessLevel={CONFIDENTIAL:'confidential',PRIVATE:'private',PUBLIC:'public',DEFAULT:'default'};exports.EventAccessLevel=EventAccessLevel;var CalendarAccessLevel={CONTRIBUTOR:'contributor',EDITOR:'editor',FREEBUSY:'freebusy',OVERRIDE:'override',OWNER:'owner',READ:'read',RESPOND:'respond',ROOT:'root',NONE:'none'};exports.CalendarAccessLevel=CalendarAccessLevel;var ReminderStatus={COMPLETED:'completed',INCOMPLETE:'incomplete'};exports.ReminderStatus=ReminderStatus;var DEFAULT='default';exports.DEFAULT=DEFAULT;","map":{"version":3,"sources":["../src/Calendar.ts"],"names":[],"mappings":"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","sourcesContent":["import { NativeModules, Platform, processColor } from 'react-native';\n\ntype RecurringEventOptions = {\n  futureEvents?: boolean,\n  instanceStartDate?: string,\n}; // iOS\n\ntype Calendar = {\n  id?: string,\n  title?: string,\n  sourceId?: string, // iOS\n  source?: Source,\n  type?: string, // iOS\n  color?: string,\n  entityType?: string, // iOS\n  allowsModifications?: boolean,\n  allowedAvailabilities?: string[],\n  isPrimary?: boolean, // Android\n  name?: string, // Android\n  ownerAccount?: string, // Android\n  timeZone?: string, // Android\n  allowedReminders?: string[], // Android\n  allowedAttendeeTypes?: string[], // Android\n  isVisible?: boolean, // Android\n  isSynced?: boolean, // Android\n  accessLevel?: string, // Android\n};\n\ntype Source = {\n  id?: string, // iOS only ??\n  type?: string,\n  name?: string,\n  isLocalAccount?: boolean, // Android\n};\n\ntype Event = {\n  id?: string,\n  calendarId?: string,\n  title?: string,\n  location?: string,\n  creationDate?: string, // iOS\n  lastModifiedDate?: string, // iOS\n  timeZone?: string,\n  endTimeZone?: string, // Android\n  url?: string, // iOS\n  notes?: string,\n  alarms?: Alarm[],\n  recurrenceRule?: RecurrenceRule,\n  startDate?: string,\n  endDate?: string,\n  originalStartDate?: string, // iOS\n  isDetached?: boolean, // iOS\n  allDay?: boolean,\n  availability?: string, // Availability\n  status?: string, // Status\n  organizer?: string, // Organizer - iOS\n  organizerEmail?: string, // Android\n  accessLevel?: string, // Android,\n  guestsCanModify?: boolean, // Android,\n  guestsCanInviteOthers?: boolean, // Android\n  guestsCanSeeGuests?: boolean, // Android\n  originalId?: string, // Android\n  instanceId?: string, // Android\n};\n\ntype Reminder = {\n  id?: string,\n  calendarId?: string,\n  title?: string,\n  location?: string,\n  creationDate?: string,\n  lastModifiedDate?: string,\n  timeZone?: string,\n  url?: string,\n  notes?: string,\n  alarms?: Alarm[],\n  recurrenceRule?: RecurrenceRule,\n  startDate?: string,\n  dueDate?: string,\n  completed?: boolean,\n  completionDate?: string,\n};\n\ntype Attendee = {\n  id?: string, // Android\n  isCurrentUser?: boolean, // iOS\n  name?: string,\n  role?: string,\n  status?: string,\n  type?: string,\n  url?: string, // iOS\n  email?: string, // Android\n};\n\ntype Alarm = {\n  absoluteDate?: string, // iOS\n  relativeOffset?: string,\n  structuredLocation?: {\n    // iOS\n    title?: string,\n    proximity?: string, // Proximity\n    radius?: number,\n    coords?: {\n      latitude?: number,\n      longitude?: number,\n    },\n  },\n  method?: string, // Method, Android\n};\n\ntype RecurrenceRule = {\n  frequency: string, // Frequency\n  interval?: number,\n  endDate?: string,\n  occurrence?: number,\n};\n\nexport async function getCalendarsAsync(entityType?: string): Promise<void> {\n  if (!entityType) {\n    return NativeModules.ExponentCalendar.getCalendarsAsync(null);\n  }\n  return NativeModules.ExponentCalendar.getCalendarsAsync(entityType);\n}\n\nexport async function createCalendarAsync(details: Calendar = {}): Promise<string> {\n  let color = details.color ? processColor(details.color) : undefined;\n  const newDetails = { ...details, id: undefined, color };\n  return NativeModules.ExponentCalendar.saveCalendarAsync(newDetails);\n}\n\nexport async function updateCalendarAsync(id: string, details: Calendar = {}): Promise<string> {\n  if (!id) {\n    throw new Error(\n      'updateCalendarAsync must be called with an id (string) of the target calendar'\n    );\n  }\n  let color = details.color ? processColor(details.color) : undefined;\n\n  if (Platform.OS === 'android') {\n    if (\n      details.hasOwnProperty('source') ||\n      details.hasOwnProperty('color') ||\n      details.hasOwnProperty('allowsModifications') ||\n      details.hasOwnProperty('allowedAvailabilities') ||\n      details.hasOwnProperty('isPrimary') ||\n      details.hasOwnProperty('ownerAccount') ||\n      details.hasOwnProperty('timeZone') ||\n      details.hasOwnProperty('allowedReminders') ||\n      details.hasOwnProperty('allowedAttendeeTypes') ||\n      details.hasOwnProperty('accessLevel')\n    ) {\n      console.warn(\n        'updateCalendarAsync was called with one or more read-only properties, which will not be updated'\n      );\n    }\n  } else {\n    if (\n      details.hasOwnProperty('source') ||\n      details.hasOwnProperty('type') ||\n      details.hasOwnProperty('entityType') ||\n      details.hasOwnProperty('allowsModifications') ||\n      details.hasOwnProperty('allowedAvailabilities')\n    ) {\n      console.warn(\n        'updateCalendarAsync was called with one or more read-only properties, which will not be updated'\n      );\n    }\n  }\n\n  const newDetails = { ...details, id, color };\n  return NativeModules.ExponentCalendar.saveCalendarAsync(newDetails);\n}\n\nexport async function deleteCalendarAsync(id: string): Promise<void> {\n  if (!id) {\n    throw new Error(\n      'deleteCalendarAsync must be called with an id (string) of the target calendar'\n    );\n  }\n  return NativeModules.ExponentCalendar.deleteCalendarAsync(id);\n}\n\nexport async function getEventsAsync(\n  calendarIds: string[],\n  startDate: Date,\n  endDate: Date\n): Promise<Event[]> {\n  if (!startDate) {\n    throw new Error('getEventsAsync must be called with a startDate (date) to search for events');\n  }\n  if (!endDate) {\n    throw new Error('getEventsAsync must be called with an endDate (date) to search for events');\n  }\n  if (!calendarIds || !calendarIds.length) {\n    throw new Error(\n      'getEventsAsync must be called with a non-empty array of calendarIds to search'\n    );\n  }\n  return NativeModules.ExponentCalendar.getEventsAsync(startDate, endDate, calendarIds);\n}\n\nexport async function getEventAsync(\n  id: string,\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<Event> {\n  if (!id) {\n    throw new Error('getEventAsync must be called with an id (string) of the target event');\n  }\n  if (Platform.OS === 'ios') {\n    return NativeModules.ExponentCalendar.getEventByIdAsync(id, instanceStartDate);\n  } else {\n    return NativeModules.ExponentCalendar.getEventByIdAsync(id);\n  }\n}\n\nexport async function createEventAsync(calendarId: string, details: Event = {}): Promise<string> {\n  if (!calendarId) {\n    throw new Error('createEventAsync must be called with an id (string) of the target calendar');\n  }\n\n  if (Platform.OS === 'android') {\n    if (!details.startDate) {\n      throw new Error('createEventAsync requires a startDate (Date)');\n    }\n    if (!details.endDate) {\n      throw new Error('createEventAsync requires an endDate (Date)');\n    }\n    if (!details.timeZone) {\n      throw new Error('createEventAsync requires a timeZone (string)');\n    }\n  }\n\n  const newDetails = {\n    ...details,\n    id: undefined,\n    calendarId: calendarId === DEFAULT ? undefined : calendarId,\n  };\n  return NativeModules.ExponentCalendar.saveEventAsync(newDetails, {});\n}\n\nexport async function updateEventAsync(\n  id: string,\n  details: Event = {},\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<string> {\n  if (!id) {\n    throw new Error('updateEventAsync must be called with an id (string) of the target event');\n  }\n\n  if (Platform.OS === 'ios') {\n    if (\n      details.hasOwnProperty('creationDate') ||\n      details.hasOwnProperty('lastModifiedDate') ||\n      details.hasOwnProperty('originalStartDate') ||\n      details.hasOwnProperty('isDetached') ||\n      details.hasOwnProperty('status') ||\n      details.hasOwnProperty('organizer')\n    ) {\n      console.warn(\n        'updateEventAsync was called with one or more read-only properties, which will not be updated'\n      );\n    }\n  }\n\n  const newDetails = { ...details, id, instanceStartDate };\n  return NativeModules.ExponentCalendar.saveEventAsync(newDetails, { futureEvents });\n}\n\nexport async function deleteEventAsync(\n  id: string,\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<void> {\n  if (!id) {\n    throw new Error('deleteEventAsync must be called with an id (string) of the target event');\n  }\n  return NativeModules.ExponentCalendar.deleteEventAsync(\n    { id, instanceStartDate },\n    { futureEvents }\n  );\n}\n\nexport async function getAttendeesForEventAsync(\n  id: string,\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<Attendee[]> {\n  if (!id) {\n    throw new Error(\n      'getAttendeesForEventAsync must be called with an id (string) of the target event'\n    );\n  }\n  // Android only takes an ID, iOS takes an object\n  const params = Platform.OS === 'ios' ? { id, instanceStartDate } : id;\n  return NativeModules.ExponentCalendar.getAttendeesForEventAsync(params);\n}\n\nexport async function createAttendeeAsync(\n  eventId: string,\n  details: Attendee = {}\n): Promise<string> {\n  if (Platform.OS === 'ios') {\n    throw new Error('createAttendeeAsync is not available on iOS');\n  }\n  if (!eventId) {\n    throw new Error('createAttendeeAsync must be called with an id (string) of the target event');\n  }\n  if (!details.email) {\n    throw new Error('createAttendeeAsync requires an email (string)');\n  }\n  if (!details.role) {\n    throw new Error('createAttendeeAsync requires a role (string)');\n  }\n  if (!details.type) {\n    throw new Error('createAttendeeAsync requires a type (string)');\n  }\n  if (!details.status) {\n    throw new Error('createAttendeeAsync requires a status (string)');\n  }\n  const newDetails = { ...details, id: undefined };\n  return NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails, eventId);\n} // Android\n\nexport async function updateAttendeeAsync(id: string, details: Attendee = {}): Promise<string> {\n  if (Platform.OS === 'ios') {\n    throw new Error('updateAttendeeAsync is not available on iOS');\n  }\n  if (!id) {\n    throw new Error('updateAttendeeAsync must be called with an id (string) of the target event');\n  }\n  const newDetails = { ...details, id };\n  return NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails, null);\n} // Android\n\nexport async function deleteAttendeeAsync(id: string): Promise<void> {\n  if (Platform.OS === 'ios') {\n    throw new Error('deleteAttendeeAsync is not available on iOS');\n  }\n  if (!id) {\n    throw new Error('deleteAttendeeAsync must be called with an id (string) of the target event');\n  }\n  return NativeModules.ExponentCalendar.deleteAttendeeAsync(id);\n} // Android\n\nexport async function getRemindersAsync(\n  calendarIds: string[],\n  status: string | null,\n  startDate: Date,\n  endDate: Date\n): Promise<Reminder[]> {\n  if (Platform.OS === 'android') {\n    throw new Error('getRemindersAsync is not available on Android');\n  }\n  if (status && !startDate) {\n    throw new Error(\n      'getRemindersAsync must be called with a startDate (date) to search for reminders'\n    );\n  }\n  if (status && !endDate) {\n    throw new Error(\n      'getRemindersAsync must be called with an endDate (date) to search for reminders'\n    );\n  }\n  if (!calendarIds || !calendarIds.length) {\n    throw new Error(\n      'getRemindersAsync must be called with a non-empty array of calendarIds to search'\n    );\n  }\n  return NativeModules.ExponentCalendar.getRemindersAsync(\n    startDate || null,\n    endDate || null,\n    calendarIds,\n    status || null\n  );\n} // iOS\n\nexport async function getReminderAsync(id: string): Promise<Reminder> {\n  if (Platform.OS === 'android') {\n    throw new Error('getReminderAsync is not available on Android');\n  }\n  if (!id) {\n    throw new Error('getReminderAsync must be called with an id (string) of the target reminder');\n  }\n  return NativeModules.ExponentCalendar.getReminderByIdAsync(id);\n} // iOS\n\nexport async function createReminderAsync(\n  calendarId: string,\n  details: Reminder = {}\n): Promise<string> {\n  if (Platform.OS === 'android') {\n    throw new Error('createReminderAsync is not available on Android');\n  }\n  if (!calendarId) {\n    throw new Error(\n      'createReminderAsync must be called with an id (string) of the target calendar'\n    );\n  }\n  const newDetails = {\n    ...details,\n    id: undefined,\n    calendarId: calendarId === DEFAULT ? undefined : calendarId,\n  };\n  return NativeModules.ExponentCalendar.saveReminderAsync(newDetails);\n} // iOS\n\nexport async function updateReminderAsync(id: string, details: Reminder = {}): Promise<string> {\n  if (Platform.OS === 'android') {\n    throw new Error('updateReminderAsync is not available on Android');\n  }\n  if (!id) {\n    throw new Error(\n      'updateReminderAsync must be called with an id (string) of the target reminder'\n    );\n  }\n\n  if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate')) {\n    console.warn(\n      'updateReminderAsync was called with one or more read-only properties, which will not be updated'\n    );\n  }\n\n  const newDetails = { ...details, id };\n  return NativeModules.ExponentCalendar.saveReminderAsync(newDetails);\n} // iOS\n\nexport async function deleteReminderAsync(id: string): Promise<void> {\n  if (Platform.OS === 'android') {\n    throw new Error('deleteReminderAsync is not available on Android');\n  }\n  if (!id) {\n    throw new Error(\n      'deleteReminderAsync must be called with an id (string) of the target reminder'\n    );\n  }\n  return NativeModules.ExponentCalendar.deleteReminderAsync(id);\n} // iOS\n\nexport async function getSourcesAsync(): Promise<Source[]> {\n  if (Platform.OS === 'android') {\n    throw new Error('getSourcesAsync is not available on Android');\n  }\n  return NativeModules.ExponentCalendar.getSourcesAsync();\n} // iOS\n\nexport async function getSourceAsync(id: string): Promise<Source> {\n  if (Platform.OS === 'android') {\n    throw new Error('getSourceAsync is not available on Android');\n  }\n  if (!id) {\n    throw new Error('getSourceAsync must be called with an id (string) of the target source');\n  }\n  return NativeModules.ExponentCalendar.getSourceByIdAsync(id);\n} // iOS\n\nexport function openEventInCalendar(id: string): void {\n  if (Platform.OS === 'ios') {\n    console.warn('openEventInCalendar is not available on iOS');\n    return;\n  }\n  if (!id) {\n    throw new Error('openEventInCalendar must be called with an id (string) of the target event');\n  }\n  return NativeModules.ExponentCalendar.openEventInCalendar(parseInt(id, 10));\n} // Android\n\nexport const EntityTypes = {\n  EVENT: 'event',\n  REMINDER: 'reminder',\n};\n\nexport const Frequency = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  YEARLY: 'yearly',\n};\n\nexport const Availability = {\n  NOT_SUPPORTED: 'notSupported', // iOS\n  BUSY: 'busy',\n  FREE: 'free',\n  TENTATIVE: 'tentative',\n  UNAVAILABLE: 'unavailable', // iOS\n};\n\nexport const CalendarType = {\n  LOCAL: 'local',\n  CALDAV: 'caldav',\n  EXCHANGE: 'exchange',\n  SUBSCRIBED: 'subscribed',\n  BIRTHDAYS: 'birthdays',\n}; // iOS\n\nexport const EventStatus = {\n  NONE: 'none',\n  CONFIRMED: 'confirmed',\n  TENTATIVE: 'tentative',\n  CANCELED: 'canceled',\n};\n\nexport const SourceType = {\n  LOCAL: 'local',\n  EXCHANGE: 'exchange',\n  CALDAV: 'caldav',\n  MOBILEME: 'mobileme',\n  SUBSCRIBED: 'subscribed',\n  BIRTHDAYS: 'birthdays',\n};\n\nexport const AttendeeRole = {\n  UNKNOWN: 'unknown', // iOS\n  REQUIRED: 'required', // iOS\n  OPTIONAL: 'optional', // iOS\n  CHAIR: 'chair', // iOS\n  NON_PARTICIPANT: 'nonParticipant', // iOS\n  ATTENDEE: 'attendee', // Android\n  ORGANIZER: 'organizer', // Android\n  PERFORMER: 'performer', // Android\n  SPEAKER: 'speaker', // Android\n  NONE: 'none', // Android\n};\n\nexport const AttendeeStatus = {\n  UNKNOWN: 'unknown', // iOS\n  PENDING: 'pending', // iOS\n  ACCEPTED: 'accepted',\n  DECLINED: 'declined',\n  TENTATIVE: 'tentative',\n  DELEGATED: 'delegated', // iOS\n  COMPLETED: 'completed', // iOS\n  IN_PROCESS: 'inProcess', // iOS\n  INVITED: 'invited', // Android\n  NONE: 'none', // Android\n};\n\nexport const AttendeeType = {\n  UNKNOWN: 'unknown', // iOS\n  PERSON: 'person', // iOS\n  ROOM: 'room', // iOS\n  GROUP: 'group', // iOS\n  RESOURCE: 'resource',\n  OPTIONAL: 'optional', // Android\n  REQUIRED: 'required', // Android\n  NONE: 'none', // Android\n};\n\nexport const AlarmMethod = {\n  ALARM: 'alarm',\n  ALERT: 'alert',\n  EMAIL: 'email',\n  SMS: 'sms',\n  DEFAULT: 'default',\n};\n\nexport const EventAccessLevel = {\n  CONFIDENTIAL: 'confidential',\n  PRIVATE: 'private',\n  PUBLIC: 'public',\n  DEFAULT: 'default',\n};\n\nexport const CalendarAccessLevel = {\n  CONTRIBUTOR: 'contributor',\n  EDITOR: 'editor',\n  FREEBUSY: 'freebusy',\n  OVERRIDE: 'override',\n  OWNER: 'owner',\n  READ: 'read',\n  RESPOND: 'respond',\n  ROOT: 'root',\n  NONE: 'none',\n};\n\nexport const ReminderStatus = {\n  COMPLETED: 'completed',\n  INCOMPLETE: 'incomplete',\n};\n\nexport const DEFAULT = 'default';\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}