{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _core=require(\"@react-navigation/core\");var _native=require(\"@react-navigation/native\");var _reactNativeScreens=require(\"react-native-screens\");var _reactNativeGestureHandler=require(\"react-native-gesture-handler\");var _StackViewCard=_interopRequireDefault(require(\"./StackViewCard\"));var _Header=_interopRequireDefault(require(\"../Header/Header\"));var _StackViewTransitionConfigs=_interopRequireDefault(require(\"./StackViewTransitionConfigs\"));var _HeaderStyleInterpolator=_interopRequireDefault(require(\"../Header/HeaderStyleInterpolator\"));var _StackGestureContext=_interopRequireDefault(require(\"../../utils/StackGestureContext\"));var _clamp=_interopRequireDefault(require(\"../../utils/clamp\"));var _ReactNativeFeatures=require(\"../../utils/ReactNativeFeatures\");var IPHONE_XS_HEIGHT=812;var IPHONE_XR_HEIGHT=896;var _Dimensions$get=_reactNative.Dimensions.get('window'),WINDOW_WIDTH=_Dimensions$get.width,WINDOW_HEIGHT=_Dimensions$get.height;var IS_IPHONE_X=_reactNative.Platform.OS==='ios'&&!_reactNative.Platform.isPad&&!_reactNative.Platform.isTVOS&&(WINDOW_HEIGHT===IPHONE_XS_HEIGHT||WINDOW_WIDTH===IPHONE_XS_HEIGHT||WINDOW_HEIGHT===IPHONE_XR_HEIGHT||WINDOW_WIDTH===IPHONE_XR_HEIGHT);var EaseInOut=_reactNative.Easing.inOut(_reactNative.Easing.ease);var HEADER_LAYOUT_PRESET=['center','left'];var HEADER_TRANSITION_PRESET=['fade-in-place','uikit'];var HEADER_BACKGROUND_TRANSITION_PRESET=['toggle','fade','translate'];var ANIMATION_DURATION=500;var POSITION_THRESHOLD=1/2;var GESTURE_RESPONSE_DISTANCE_HORIZONTAL=50;var GESTURE_RESPONSE_DISTANCE_VERTICAL=135;var USE_NATIVE_DRIVER=true;var getDefaultHeaderHeight=function getDefaultHeaderHeight(isLandscape){if(_reactNative.Platform.OS==='ios'){if(isLandscape&&!_reactNative.Platform.isPad){return 32;}else if(IS_IPHONE_X){return 88;}else{return 64;}}else{return 56;}};var StackViewLayout=function(_React$Component){(0,_inherits2.default)(StackViewLayout,_React$Component);function StackViewLayout(props){var _this;(0,_classCallCheck2.default)(this,StackViewLayout);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(StackViewLayout).call(this,props));_this._immediateIndex=null;_this._onFloatingHeaderLayout=function(e){var height=e.nativeEvent.layout.height;if(height!==_this.state.floatingHeaderHeight){_this.setState({floatingHeaderHeight:height});}};_this._handlePanGestureStateChange=function(_ref){var nativeEvent=_ref.nativeEvent;if(nativeEvent.oldState===_reactNativeGestureHandler.State.ACTIVE){if(_this.positionSwitch.__getValue()===1){return;}if(_this._isMotionVertical()){_this._handleReleaseVertical(nativeEvent);}else{_this._handleReleaseHorizontal(nativeEvent);}}else if(nativeEvent.state===_reactNativeGestureHandler.State.ACTIVE){_this.positionSwitch.setValue(0);}};_this._renderCard=function(scene){var _this$props=_this.props,transitionProps=_this$props.transitionProps,shadowEnabled=_this$props.shadowEnabled,cardOverlayEnabled=_this$props.cardOverlayEnabled,transparentCard=_this$props.transparentCard,cardStyle=_this$props.cardStyle;var screenInterpolator=_this._transitionConfig.screenInterpolator;var style=screenInterpolator&&screenInterpolator((0,_objectSpread2.default)({},transitionProps,{shadowEnabled:shadowEnabled,cardOverlayEnabled:cardOverlayEnabled,position:_this.position,scene:scene}));var options=scene.descriptor.options;var hasHeader=options.header!==null;var headerMode=_this._getHeaderMode();var paddingTopStyle;if(hasHeader&&headerMode==='float'&&!options.headerTransparent){paddingTopStyle={paddingTop:_this.state.floatingHeaderHeight};}return _react.default.createElement(_StackViewCard.default,(0,_extends2.default)({},transitionProps,{key:\"card_\"+scene.key,position:_this.position,realPosition:transitionProps.position,animatedStyle:style,transparent:transparentCard,style:[paddingTopStyle,cardStyle],scene:scene}),_this._renderInnerScene(scene));};_this.panGestureRef=_react.default.createRef();_this.gestureX=new _reactNative.Animated.Value(0);_this.gestureY=new _reactNative.Animated.Value(0);_this.positionSwitch=new _reactNative.Animated.Value(1);if(_reactNative.Animated.subtract){_this.gestureSwitch=_reactNative.Animated.subtract(1,_this.positionSwitch);}else{_this.gestureSwitch=_reactNative.Animated.add(1,_reactNative.Animated.multiply(-1,_this.positionSwitch));}_this.gestureEvent=_reactNative.Animated.event([{nativeEvent:{translationX:_this.gestureX,translationY:_this.gestureY}}],{useNativeDriver:USE_NATIVE_DRIVER});_this.state={floatingHeaderHeight:getDefaultHeaderHeight(props.isLandscape)};return _this;}(0,_createClass2.default)(StackViewLayout,[{key:\"_renderHeader\",value:function _renderHeader(scene,headerMode){var options=scene.descriptor.options;var header=options.header;if(__DEV__&&typeof header==='string'){throw new Error(\"Invalid header value: \\\"\"+header+\"\\\". The header option must be a valid React component or null, not a string.\");}if(header===null&&headerMode==='screen'){return null;}if(_react.default.isValidElement(header)){return header;}var renderHeader=header||function(props){return _react.default.createElement(_Header.default,props);};var _this$_transitionConf=this._transitionConfig,headerLeftInterpolator=_this$_transitionConf.headerLeftInterpolator,headerTitleInterpolator=_this$_transitionConf.headerTitleInterpolator,headerRightInterpolator=_this$_transitionConf.headerRightInterpolator,headerBackgroundInterpolator=_this$_transitionConf.headerBackgroundInterpolator;var backgroundTransitionPresetInterpolator=this._getHeaderBackgroundTransitionPreset();if(backgroundTransitionPresetInterpolator){headerBackgroundInterpolator=backgroundTransitionPresetInterpolator;}var _this$props2=this.props,transitionProps=_this$props2.transitionProps,passProps=(0,_objectWithoutProperties2.default)(_this$props2,[\"transitionProps\"]);return _react.default.createElement(_core.NavigationProvider,{value:scene.descriptor.navigation},renderHeader((0,_objectSpread2.default)({},passProps,transitionProps,{position:this.position,scene:scene,mode:headerMode,transitionPreset:this._getHeaderTransitionPreset(),layoutPreset:this._getHeaderLayoutPreset(),backTitleVisible:this._getHeaderBackTitleVisible(),leftInterpolator:headerLeftInterpolator,titleInterpolator:headerTitleInterpolator,rightInterpolator:headerRightInterpolator,backgroundInterpolator:headerBackgroundInterpolator})));}},{key:\"_reset\",value:function _reset(resetToIndex,duration){if(_reactNative.Platform.OS==='ios'&&(0,_ReactNativeFeatures.supportsImprovedSpringAnimation)()){_reactNative.Animated.spring(this.props.transitionProps.position,{toValue:resetToIndex,stiffness:6000,damping:100,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01,useNativeDriver:USE_NATIVE_DRIVER}).start();}else{_reactNative.Animated.timing(this.props.transitionProps.position,{toValue:resetToIndex,duration:duration,easing:EaseInOut,useNativeDriver:USE_NATIVE_DRIVER}).start();}}},{key:\"_goBack\",value:function _goBack(backFromIndex,duration){var _this2=this;var _this$props$transitio=this.props.transitionProps,navigation=_this$props$transitio.navigation,position=_this$props$transitio.position,scenes=_this$props$transitio.scenes;var toValue=Math.max(backFromIndex-1,0);this._immediateIndex=toValue;var onCompleteAnimation=function onCompleteAnimation(){_this2._immediateIndex=null;var backFromScene=scenes.find(function(s){return s.index===toValue+1;});if(backFromScene){navigation.dispatch(_core.NavigationActions.back({key:backFromScene.route.key,immediate:true}));navigation.dispatch(_core.StackActions.completeTransition());}};if(_reactNative.Platform.OS==='ios'&&(0,_ReactNativeFeatures.supportsImprovedSpringAnimation)()){_reactNative.Animated.spring(position,{toValue:toValue,stiffness:7000,damping:300,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01,useNativeDriver:USE_NATIVE_DRIVER}).start(onCompleteAnimation);}else{_reactNative.Animated.timing(position,{toValue:toValue,duration:duration,easing:EaseInOut,useNativeDriver:USE_NATIVE_DRIVER}).start(onCompleteAnimation);}}},{key:\"_prepareAnimated\",value:function _prepareAnimated(){if(this.props===this._prevProps){return;}this._prevProps=this.props;this._prepareGesture();this._preparePosition();this._prepareTransitionConfig();}},{key:\"render\",value:function render(){this._prepareAnimated();var transitionProps=this.props.transitionProps;var index=transitionProps.navigation.state.index,scenes=transitionProps.scenes;var headerMode=this._getHeaderMode();var floatingHeader=null;if(headerMode==='float'){var scene=transitionProps.scene;floatingHeader=_react.default.createElement(_reactNative.View,{style:styles.floatingHeader,pointerEvents:\"box-none\",onLayout:this._onFloatingHeaderLayout},this._renderHeader(scene,headerMode));}return _react.default.createElement(_reactNativeGestureHandler.PanGestureHandler,(0,_extends2.default)({},this._gestureActivationCriteria(),{ref:this.panGestureRef,onGestureEvent:this.gestureEvent,onHandlerStateChange:this._handlePanGestureStateChange,enabled:index>0&&this._isGestureEnabled()}),_react.default.createElement(_reactNative.Animated.View,{style:[styles.container,this._transitionConfig.containerStyle]},_react.default.createElement(_StackGestureContext.default.Provider,{value:this.panGestureRef},_react.default.createElement(_reactNativeScreens.ScreenContainer,{style:styles.scenes},scenes.map(this._renderCard)),floatingHeader)));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var prevState=prevProps.transitionProps.navigation.state;var state=this.props.transitionProps.navigation.state;if(prevState.index!==state.index){this._maybeCancelGesture();}}},{key:\"_getGestureResponseDistance\",value:function _getGestureResponseDistance(){var scene=this.props.transitionProps.scene;var options=scene.descriptor.options;var _options$gestureRespo=options.gestureResponseDistance,userGestureResponseDistance=_options$gestureRespo===void 0?{}:_options$gestureRespo;return this._isModal()?userGestureResponseDistance.vertical||GESTURE_RESPONSE_DISTANCE_VERTICAL:userGestureResponseDistance.horizontal||GESTURE_RESPONSE_DISTANCE_HORIZONTAL;}},{key:\"_gestureActivationCriteria\",value:function _gestureActivationCriteria(){var layout=this.props.transitionProps.layout;var gestureResponseDistance=this._getGestureResponseDistance();var isMotionInverted=this._isMotionInverted();if(this._isMotionVertical()){var height=layout.height.__getValue();return{maxDeltaX:15,minOffsetY:isMotionInverted?-5:5,hitSlop:isMotionInverted?{top:-height+gestureResponseDistance}:{bottom:-height+gestureResponseDistance}};}else{var width=layout.width.__getValue();var hitSlop=-width+gestureResponseDistance;return{minOffsetX:isMotionInverted?-5:5,maxDeltaY:20,hitSlop:isMotionInverted?{left:hitSlop}:{right:hitSlop}};}}},{key:\"_isGestureEnabled\",value:function _isGestureEnabled(){var gesturesEnabled=this.props.transitionProps.scene.descriptor.options.gesturesEnabled;return typeof gesturesEnabled==='boolean'?gesturesEnabled:_reactNative.Platform.OS==='ios';}},{key:\"_isMotionVertical\",value:function _isMotionVertical(){return this._isModal();}},{key:\"_isModal\",value:function _isModal(){return this.props.mode==='modal';}},{key:\"_isMotionInverted\",value:function _isMotionInverted(){var scene=this.props.transitionProps.scene;var options=scene.descriptor.options;var gestureDirection=options.gestureDirection;if(this._isModal()){return gestureDirection==='inverted';}else{return typeof gestureDirection==='string'?gestureDirection==='inverted':_reactNative.I18nManager.isRTL;}}},{key:\"_computeHorizontalGestureValue\",value:function _computeHorizontalGestureValue(_ref2){var translationX=_ref2.translationX;var _this$props$transitio2=this.props.transitionProps,navigation=_this$props$transitio2.navigation,layout=_this$props$transitio2.layout;var index=navigation.state.index;var distance=layout.width.__getValue();var x=this._isMotionInverted()?-1*translationX:translationX;var value=index-x/distance;return(0,_clamp.default)(index-1,value,index);}},{key:\"_computeVerticalGestureValue\",value:function _computeVerticalGestureValue(_ref3){var translationY=_ref3.translationY;var _this$props$transitio3=this.props.transitionProps,navigation=_this$props$transitio3.navigation,layout=_this$props$transitio3.layout;var index=navigation.state.index;var distance=layout.height.__getValue();var y=this._isMotionInverted()?-1*translationY:translationY;var value=index-y/distance;return(0,_clamp.default)(index-1,value,index);}},{key:\"_maybeCancelGesture\",value:function _maybeCancelGesture(){this.positionSwitch.setValue(1);}},{key:\"_prepareGesture\",value:function _prepareGesture(){if(!this._isGestureEnabled()){if(this.positionSwitch.__getValue()!==1){this.positionSwitch.setValue(1);}this.gesturePosition=undefined;return;}if(this.props.transitionProps.layout.width.__getValue()===0||this.props.transitionProps.layout.height.__getValue()===0){return;}if(this._isMotionVertical()){this._prepareGestureVertical();}else{this._prepareGestureHorizontal();}}},{key:\"_prepareGestureHorizontal\",value:function _prepareGestureHorizontal(){var index=this.props.transitionProps.navigation.state.index;if(this._isMotionInverted()){this.gesturePosition=_reactNative.Animated.add(index,_reactNative.Animated.divide(this.gestureX,this.props.transitionProps.layout.width)).interpolate({inputRange:[index-1,index],outputRange:[index-1,index],extrapolate:'clamp'});}else{this.gesturePosition=_reactNative.Animated.add(index,_reactNative.Animated.multiply(-1,_reactNative.Animated.divide(this.gestureX,this.props.transitionProps.layout.width))).interpolate({inputRange:[index-1,index],outputRange:[index-1,index],extrapolate:'clamp'});}}},{key:\"_prepareGestureVertical\",value:function _prepareGestureVertical(){var index=this.props.transitionProps.navigation.state.index;if(this._isMotionInverted()){this.gesturePosition=_reactNative.Animated.add(index,_reactNative.Animated.divide(this.gestureY,this.props.transitionProps.layout.height)).interpolate({inputRange:[index-1,index],outputRange:[index-1,index],extrapolate:'clamp'});}else{this.gesturePosition=_reactNative.Animated.add(index,_reactNative.Animated.multiply(-1,_reactNative.Animated.divide(this.gestureY,this.props.transitionProps.layout.height))).interpolate({inputRange:[index-1,index],outputRange:[index-1,index],extrapolate:'clamp'});}}},{key:\"_handleReleaseHorizontal\",value:function _handleReleaseHorizontal(nativeEvent){var _this$props$transitio4=this.props.transitionProps,navigation=_this$props$transitio4.navigation,position=_this$props$transitio4.position,layout=_this$props$transitio4.layout;var index=navigation.state.index;var immediateIndex=this._immediateIndex==null?index:this._immediateIndex;var distance=layout.width.__getValue();var movementDirection=this._isMotionInverted()?-1:1;var movedDistance=movementDirection*nativeEvent.translationX;var gestureVelocity=movementDirection*nativeEvent.velocityX;var defaultVelocity=distance/ANIMATION_DURATION;var velocity=Math.max(Math.abs(gestureVelocity),defaultVelocity);var resetDuration=this._isMotionInverted()?(distance-movedDistance)/velocity:movedDistance/velocity;var goBackDuration=this._isMotionInverted()?movedDistance/velocity:(distance-movedDistance)/velocity;var value=this._computeHorizontalGestureValue(nativeEvent);position.setValue(value);this.positionSwitch.setValue(1);if(gestureVelocity<-50){this.props.onGestureCanceled&&this.props.onGestureCanceled();this._reset(immediateIndex,resetDuration);return;}if(gestureVelocity>50){this.props.onGestureFinish&&this.props.onGestureFinish();this._goBack(immediateIndex,goBackDuration);return;}if(value<=index-POSITION_THRESHOLD){this.props.onGestureFinish&&this.props.onGestureFinish();this._goBack(immediateIndex,goBackDuration);}else{this.props.onGestureCanceled&&this.props.onGestureCanceled();this._reset(immediateIndex,resetDuration);}}},{key:\"_handleReleaseVertical\",value:function _handleReleaseVertical(nativeEvent){var _this$props$transitio5=this.props.transitionProps,navigation=_this$props$transitio5.navigation,position=_this$props$transitio5.position,layout=_this$props$transitio5.layout;var index=navigation.state.index;var immediateIndex=this._immediateIndex==null?index:this._immediateIndex;var distance=layout.height.__getValue();var isMotionInverted=this._isMotionInverted();var movementDirection=isMotionInverted?-1:1;var movedDistance=movementDirection*nativeEvent.translationY;var gestureVelocity=movementDirection*nativeEvent.velocityY;var defaultVelocity=distance/ANIMATION_DURATION;var velocity=Math.max(Math.abs(gestureVelocity),defaultVelocity);var resetDuration=isMotionInverted?(distance-movedDistance)/velocity:movedDistance/velocity;var goBackDuration=isMotionInverted?movedDistance/velocity:(distance-movedDistance)/velocity;var value=this._computeVerticalGestureValue(nativeEvent);position.setValue(value);this.positionSwitch.setValue(1);if(gestureVelocity<-50){this.props.onGestureCanceled&&this.props.onGestureCanceled();this._reset(immediateIndex,resetDuration);return;}if(gestureVelocity>50){this.props.onGestureFinish&&this.props.onGestureFinish();this._goBack(immediateIndex,goBackDuration);return;}if(value<=index-POSITION_THRESHOLD){this.props.onGestureFinish&&this.props.onGestureFinish();this._goBack(immediateIndex,goBackDuration);}else{this.props.onGestureCanceled&&this.props.onGestureCanceled();this._reset(immediateIndex,resetDuration);}}},{key:\"_getHeaderMode\",value:function _getHeaderMode(){if(this.props.headerMode){return this.props.headerMode;}if(_reactNative.Platform.OS==='android'||this.props.mode==='modal'){return'screen';}return'float';}},{key:\"_getHeaderBackgroundTransitionPreset\",value:function _getHeaderBackgroundTransitionPreset(){var headerBackgroundTransitionPreset=this.props.headerBackgroundTransitionPreset;if(headerBackgroundTransitionPreset){if(HEADER_BACKGROUND_TRANSITION_PRESET.includes(headerBackgroundTransitionPreset)){if(headerBackgroundTransitionPreset==='fade'){return _HeaderStyleInterpolator.default.forBackgroundWithFade;}else if(headerBackgroundTransitionPreset==='translate'){return _HeaderStyleInterpolator.default.forBackgroundWithTranslation;}else if(headerBackgroundTransitionPreset==='toggle'){return _HeaderStyleInterpolator.default.forBackgroundWithInactiveHidden;}}else if(__DEV__){console.error(\"Invalid configuration applied for headerBackgroundTransitionPreset - expected one of \"+HEADER_BACKGROUND_TRANSITION_PRESET.join(', ')+\" but received \"+JSON.stringify(headerBackgroundTransitionPreset));}}return null;}},{key:\"_getHeaderLayoutPreset\",value:function _getHeaderLayoutPreset(){var headerLayoutPreset=this.props.headerLayoutPreset;if(headerLayoutPreset){if(__DEV__){if(this._getHeaderTransitionPreset()==='uikit'&&headerLayoutPreset==='left'&&_reactNative.Platform.OS==='ios'){console.warn(\"headerTransitionPreset with the value 'uikit' is incompatible with headerLayoutPreset 'left'\");}}if(HEADER_LAYOUT_PRESET.includes(headerLayoutPreset)){return headerLayoutPreset;}if(__DEV__){console.error(\"Invalid configuration applied for headerLayoutPreset - expected one of \"+HEADER_LAYOUT_PRESET.join(', ')+\" but received \"+JSON.stringify(headerLayoutPreset));}}if(_reactNative.Platform.OS==='android'){return'left';}else{return'center';}}},{key:\"_getHeaderTransitionPreset\",value:function _getHeaderTransitionPreset(){if(_reactNative.Platform.OS==='android'||this._getHeaderMode()==='screen'){return'fade-in-place';}var headerTransitionPreset=this.props.headerTransitionPreset;if(headerTransitionPreset){if(HEADER_TRANSITION_PRESET.includes(headerTransitionPreset)){return headerTransitionPreset;}if(__DEV__){console.error(\"Invalid configuration applied for headerTransitionPreset - expected one of \"+HEADER_TRANSITION_PRESET.join(', ')+\" but received \"+JSON.stringify(headerTransitionPreset));}}return'fade-in-place';}},{key:\"_getHeaderBackTitleVisible\",value:function _getHeaderBackTitleVisible(){var headerBackTitleVisible=this.props.headerBackTitleVisible;var layoutPreset=this._getHeaderLayoutPreset();var enabledByDefault=!(layoutPreset==='left'||_reactNative.Platform.OS==='android');return typeof headerBackTitleVisible==='boolean'?headerBackTitleVisible:enabledByDefault;}},{key:\"_renderInnerScene\",value:function _renderInnerScene(scene){var _scene$descriptor=scene.descriptor,navigation=_scene$descriptor.navigation,getComponent=_scene$descriptor.getComponent;var SceneComponent=getComponent();var screenProps=this.props.screenProps;var headerMode=this._getHeaderMode();if(headerMode==='screen'){return _react.default.createElement(_reactNative.View,{style:styles.container},_react.default.createElement(_reactNative.View,{style:styles.scenes},_react.default.createElement(_core.SceneView,{screenProps:screenProps,navigation:navigation,component:SceneComponent})),this._renderHeader(scene,headerMode));}return _react.default.createElement(_core.SceneView,{screenProps:screenProps,navigation:navigation,component:SceneComponent});}},{key:\"_prepareTransitionConfig\",value:function _prepareTransitionConfig(){this._transitionConfig=_StackViewTransitionConfigs.default.getTransitionConfig(this.props.transitionConfig,(0,_objectSpread2.default)({},this.props.transitionProps,{position:this.position}),this.props.lastTransitionProps,this._isModal());}},{key:\"_preparePosition\",value:function _preparePosition(){if(this.gesturePosition){this.position=_reactNative.Animated.add(_reactNative.Animated.multiply(this.props.transitionProps.position,this.positionSwitch),_reactNative.Animated.multiply(this.gesturePosition,this.gestureSwitch));}else{this.position=this.props.transitionProps.position;}}}]);return StackViewLayout;}(_react.default.Component);var styles=_reactNative.StyleSheet.create({container:{flex:1,flexDirection:'column-reverse',overflow:'hidden'},scenes:{flex:1},floatingHeader:{position:'absolute',left:0,top:0,right:0}});var _default=(0,_native.withOrientation)(StackViewLayout);exports.default=_default;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-navigation-stack/dist/views/StackView/StackViewLayout.js"],"names":["IPHONE_XS_HEIGHT","IPHONE_XR_HEIGHT","Dimensions","get","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","IS_IPHONE_X","Platform","OS","isPad","isTVOS","EaseInOut","Easing","inOut","ease","HEADER_LAYOUT_PRESET","HEADER_TRANSITION_PRESET","HEADER_BACKGROUND_TRANSITION_PRESET","ANIMATION_DURATION","POSITION_THRESHOLD","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","USE_NATIVE_DRIVER","getDefaultHeaderHeight","isLandscape","StackViewLayout","props","_immediateIndex","_onFloatingHeaderLayout","e","nativeEvent","layout","state","floatingHeaderHeight","setState","_handlePanGestureStateChange","oldState","State","ACTIVE","positionSwitch","__getValue","_isMotionVertical","_handleReleaseVertical","_handleReleaseHorizontal","setValue","_renderCard","scene","transitionProps","shadowEnabled","cardOverlayEnabled","transparentCard","cardStyle","screenInterpolator","_transitionConfig","style","position","options","descriptor","hasHeader","header","headerMode","_getHeaderMode","paddingTopStyle","headerTransparent","paddingTop","key","_renderInnerScene","panGestureRef","React","createRef","gestureX","Animated","Value","gestureY","subtract","gestureSwitch","add","multiply","gestureEvent","event","translationX","translationY","useNativeDriver","__DEV__","Error","isValidElement","renderHeader","headerLeftInterpolator","headerTitleInterpolator","headerRightInterpolator","headerBackgroundInterpolator","backgroundTransitionPresetInterpolator","_getHeaderBackgroundTransitionPreset","passProps","navigation","mode","transitionPreset","_getHeaderTransitionPreset","layoutPreset","_getHeaderLayoutPreset","backTitleVisible","_getHeaderBackTitleVisible","leftInterpolator","titleInterpolator","rightInterpolator","backgroundInterpolator","resetToIndex","duration","spring","toValue","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","start","timing","easing","backFromIndex","scenes","Math","max","onCompleteAnimation","backFromScene","find","s","index","dispatch","NavigationActions","back","route","immediate","StackActions","completeTransition","_prevProps","_prepareGesture","_preparePosition","_prepareTransitionConfig","_prepareAnimated","floatingHeader","styles","_renderHeader","_gestureActivationCriteria","_isGestureEnabled","container","containerStyle","map","prevProps","prevState","_maybeCancelGesture","gestureResponseDistance","userGestureResponseDistance","_isModal","vertical","horizontal","_getGestureResponseDistance","isMotionInverted","_isMotionInverted","maxDeltaX","minOffsetY","hitSlop","top","bottom","minOffsetX","maxDeltaY","left","right","gesturesEnabled","gestureDirection","I18nManager","isRTL","distance","x","value","y","gesturePosition","undefined","_prepareGestureVertical","_prepareGestureHorizontal","divide","interpolate","inputRange","outputRange","extrapolate","immediateIndex","movementDirection","movedDistance","gestureVelocity","velocityX","defaultVelocity","velocity","abs","resetDuration","goBackDuration","_computeHorizontalGestureValue","onGestureCanceled","_reset","onGestureFinish","_goBack","velocityY","_computeVerticalGestureValue","headerBackgroundTransitionPreset","includes","HeaderStyleInterpolator","forBackgroundWithFade","forBackgroundWithTranslation","forBackgroundWithInactiveHidden","console","error","join","JSON","stringify","headerLayoutPreset","warn","headerTransitionPreset","headerBackTitleVisible","enabledByDefault","getComponent","SceneComponent","screenProps","TransitionConfigs","getTransitionConfig","transitionConfig","lastTransitionProps","Component","StyleSheet","create","flex","flexDirection","overflow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Animated, StyleSheet, Platform, View, I18nManager, Easing, Dimensions } from 'react-native';\nimport { SceneView, StackActions, NavigationActions, NavigationProvider } from '@react-navigation/core';\nimport { withOrientation } from '@react-navigation/native';\nimport { ScreenContainer } from 'react-native-screens';\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\n\nimport Card from './StackViewCard';\nimport Header from '../Header/Header';\nimport TransitionConfigs from './StackViewTransitionConfigs';\nimport HeaderStyleInterpolator from '../Header/HeaderStyleInterpolator';\nimport StackGestureContext from '../../utils/StackGestureContext';\nimport clamp from '../../utils/clamp';\nimport { supportsImprovedSpringAnimation } from '../../utils/ReactNativeFeatures';\n\nconst IPHONE_XS_HEIGHT = 812; // iPhone X and XS\nconst IPHONE_XR_HEIGHT = 896; // iPhone XR and XS Max\nconst { width: WINDOW_WIDTH, height: WINDOW_HEIGHT } = Dimensions.get('window');\nconst IS_IPHONE_X = Platform.OS === 'ios' && !Platform.isPad && !Platform.isTVOS && (WINDOW_HEIGHT === IPHONE_XS_HEIGHT || WINDOW_WIDTH === IPHONE_XS_HEIGHT || WINDOW_HEIGHT === IPHONE_XR_HEIGHT || WINDOW_WIDTH === IPHONE_XR_HEIGHT);\n\nconst EaseInOut = Easing.inOut(Easing.ease);\n\n/**\n * Enumerate possible values for validation\n */\nconst HEADER_LAYOUT_PRESET = ['center', 'left'];\nconst HEADER_TRANSITION_PRESET = ['fade-in-place', 'uikit'];\nconst HEADER_BACKGROUND_TRANSITION_PRESET = ['toggle', 'fade', 'translate'];\n\n/**\n * The max duration of the card animation in milliseconds after released gesture.\n * The actual duration should be always less then that because the rest distance\n * is always less then the full distance of the layout.\n */\nconst ANIMATION_DURATION = 500;\n\n/**\n * The gesture distance threshold to trigger the back behavior. For instance,\n * `1/2` means that moving greater than 1/2 of the width of the screen will\n * trigger a back action\n */\nconst POSITION_THRESHOLD = 1 / 2;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst USE_NATIVE_DRIVER = true;\n\nconst getDefaultHeaderHeight = isLandscape => {\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      return 32;\n    } else if (IS_IPHONE_X) {\n      return 88;\n    } else {\n      return 64;\n    }\n  } else {\n    return 56;\n  }\n};\n\nclass StackViewLayout extends React.Component {\n  /**\n   * immediateIndex is used to represent the expected index that we will be on after a\n   * transition. To achieve a smooth animation when swiping back, the action to go back\n   * doesn't actually fire until the transition completes. The immediateIndex is used during\n   * the transition so that gestures can be handled correctly. This is a work-around for\n   * cases when the user quickly swipes back several times.\n   */\n  _immediateIndex = null;\n\n  constructor(props) {\n    super(props);\n    this.panGestureRef = React.createRef();\n    this.gestureX = new Animated.Value(0);\n    this.gestureY = new Animated.Value(0);\n    this.positionSwitch = new Animated.Value(1);\n    if (Animated.subtract) {\n      this.gestureSwitch = Animated.subtract(1, this.positionSwitch);\n    } else {\n      this.gestureSwitch = Animated.add(1, Animated.multiply(-1, this.positionSwitch));\n    }\n    this.gestureEvent = Animated.event([{\n      nativeEvent: {\n        translationX: this.gestureX,\n        translationY: this.gestureY\n      }\n    }], {\n      useNativeDriver: USE_NATIVE_DRIVER\n    });\n\n    this.state = {\n      // Used when card's header is null and mode is float to make transition\n      // between screens with headers and those without headers smooth.\n      // This is not a great heuristic here. We don't know synchronously\n      // on mount what the header height is so we have just used the most\n      // common cases here.\n      floatingHeaderHeight: getDefaultHeaderHeight(props.isLandscape)\n    };\n  }\n\n  _renderHeader(scene, headerMode) {\n    const { options } = scene.descriptor;\n    const { header } = options;\n\n    if (__DEV__ && typeof header === 'string') {\n      throw new Error(`Invalid header value: \"${header}\". The header option must be a valid React component or null, not a string.`);\n    }\n\n    if (header === null && headerMode === 'screen') {\n      return null;\n    }\n\n    // check if it's a react element\n    if (React.isValidElement(header)) {\n      return header;\n    }\n\n    // Handle the case where the header option is a function, and provide the default\n    const renderHeader = header || (props => <Header {...props} />);\n\n    let {\n      headerLeftInterpolator,\n      headerTitleInterpolator,\n      headerRightInterpolator,\n      headerBackgroundInterpolator\n    } = this._transitionConfig;\n\n    const backgroundTransitionPresetInterpolator = this._getHeaderBackgroundTransitionPreset();\n    if (backgroundTransitionPresetInterpolator) {\n      headerBackgroundInterpolator = backgroundTransitionPresetInterpolator;\n    }\n\n    const { transitionProps, ...passProps } = this.props;\n\n    return <NavigationProvider value={scene.descriptor.navigation}>\n        {renderHeader({\n        ...passProps,\n        ...transitionProps,\n        position: this.position,\n        scene,\n        mode: headerMode,\n        transitionPreset: this._getHeaderTransitionPreset(),\n        layoutPreset: this._getHeaderLayoutPreset(),\n        backTitleVisible: this._getHeaderBackTitleVisible(),\n        leftInterpolator: headerLeftInterpolator,\n        titleInterpolator: headerTitleInterpolator,\n        rightInterpolator: headerRightInterpolator,\n        backgroundInterpolator: headerBackgroundInterpolator\n      })}\n      </NavigationProvider>;\n  }\n\n  _reset(resetToIndex, duration) {\n    if (Platform.OS === 'ios' && supportsImprovedSpringAnimation()) {\n      Animated.spring(this.props.transitionProps.position, {\n        toValue: resetToIndex,\n        stiffness: 6000,\n        damping: 100,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01,\n        useNativeDriver: USE_NATIVE_DRIVER\n      }).start();\n    } else {\n      Animated.timing(this.props.transitionProps.position, {\n        toValue: resetToIndex,\n        duration,\n        easing: EaseInOut,\n        useNativeDriver: USE_NATIVE_DRIVER\n      }).start();\n    }\n  }\n\n  _goBack(backFromIndex, duration) {\n    const { navigation, position, scenes } = this.props.transitionProps;\n    const toValue = Math.max(backFromIndex - 1, 0);\n\n    // set temporary index for gesture handler to respect until the action is\n    // dispatched at the end of the transition.\n    this._immediateIndex = toValue;\n\n    const onCompleteAnimation = () => {\n      this._immediateIndex = null;\n      const backFromScene = scenes.find(s => s.index === toValue + 1);\n      if (backFromScene) {\n        navigation.dispatch(NavigationActions.back({\n          key: backFromScene.route.key,\n          immediate: true\n        }));\n        navigation.dispatch(StackActions.completeTransition());\n      }\n    };\n\n    if (Platform.OS === 'ios' && supportsImprovedSpringAnimation()) {\n      Animated.spring(position, {\n        toValue,\n        stiffness: 7000,\n        damping: 300,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01,\n        useNativeDriver: USE_NATIVE_DRIVER\n      }).start(onCompleteAnimation);\n    } else {\n      Animated.timing(position, {\n        toValue,\n        duration,\n        easing: EaseInOut,\n        useNativeDriver: USE_NATIVE_DRIVER\n      }).start(onCompleteAnimation);\n    }\n  }\n\n  _onFloatingHeaderLayout = e => {\n    const { height } = e.nativeEvent.layout;\n    if (height !== this.state.floatingHeaderHeight) {\n      this.setState({ floatingHeaderHeight: height });\n    }\n  };\n\n  _prepareAnimated() {\n    if (this.props === this._prevProps) {\n      return;\n    }\n    this._prevProps = this.props;\n\n    this._prepareGesture();\n    this._preparePosition();\n    this._prepareTransitionConfig();\n  }\n\n  render() {\n    this._prepareAnimated();\n\n    const { transitionProps } = this.props;\n    const {\n      navigation: {\n        state: { index }\n      },\n      scenes\n    } = transitionProps;\n\n    const headerMode = this._getHeaderMode();\n    let floatingHeader = null;\n    if (headerMode === 'float') {\n      const { scene } = transitionProps;\n      floatingHeader = <View style={styles.floatingHeader} pointerEvents=\"box-none\" onLayout={this._onFloatingHeaderLayout}>\n          {this._renderHeader(scene, headerMode)}\n        </View>;\n    }\n\n    return <PanGestureHandler {...this._gestureActivationCriteria()} ref={this.panGestureRef} onGestureEvent={this.gestureEvent} onHandlerStateChange={this._handlePanGestureStateChange} enabled={index > 0 && this._isGestureEnabled()}>\n        <Animated.View style={[styles.container, this._transitionConfig.containerStyle]}>\n          <StackGestureContext.Provider value={this.panGestureRef}>\n            <ScreenContainer style={styles.scenes}>\n              {scenes.map(this._renderCard)}\n            </ScreenContainer>\n            {floatingHeader}\n          </StackGestureContext.Provider>\n        </Animated.View>\n      </PanGestureHandler>;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { state: prevState } = prevProps.transitionProps.navigation;\n    const { state } = this.props.transitionProps.navigation;\n    if (prevState.index !== state.index) {\n      this._maybeCancelGesture();\n    }\n  }\n\n  _getGestureResponseDistance() {\n    const { scene } = this.props.transitionProps;\n    const { options } = scene.descriptor;\n    const {\n      gestureResponseDistance: userGestureResponseDistance = {}\n    } = options;\n\n    // Doesn't make sense for a response distance of 0, so this works fine\n    return this._isModal() ? userGestureResponseDistance.vertical || GESTURE_RESPONSE_DISTANCE_VERTICAL : userGestureResponseDistance.horizontal || GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n  }\n\n  _gestureActivationCriteria() {\n    const { layout } = this.props.transitionProps;\n    const gestureResponseDistance = this._getGestureResponseDistance();\n    const isMotionInverted = this._isMotionInverted();\n\n    if (this._isMotionVertical()) {\n      const height = layout.height.__getValue();\n\n      return {\n        maxDeltaX: 15,\n        minOffsetY: isMotionInverted ? -5 : 5,\n        hitSlop: isMotionInverted ? { top: -height + gestureResponseDistance } : { bottom: -height + gestureResponseDistance }\n      };\n    } else {\n      const width = layout.width.__getValue();\n      const hitSlop = -width + gestureResponseDistance;\n\n      return {\n        minOffsetX: isMotionInverted ? -5 : 5,\n        maxDeltaY: 20,\n        hitSlop: isMotionInverted ? { left: hitSlop } : { right: hitSlop }\n      };\n    }\n  }\n\n  _isGestureEnabled() {\n    const gesturesEnabled = this.props.transitionProps.scene.descriptor.options.gesturesEnabled;\n    return typeof gesturesEnabled === 'boolean' ? gesturesEnabled : Platform.OS === 'ios';\n  }\n\n  _isMotionVertical() {\n    return this._isModal();\n  }\n\n  _isModal() {\n    return this.props.mode === 'modal';\n  }\n\n  // This only currently applies to the horizontal gesture!\n  _isMotionInverted() {\n    const {\n      transitionProps: { scene }\n    } = this.props;\n    const { options } = scene.descriptor;\n    const { gestureDirection } = options;\n\n    if (this._isModal()) {\n      return gestureDirection === 'inverted';\n    } else {\n      return typeof gestureDirection === 'string' ? gestureDirection === 'inverted' : I18nManager.isRTL;\n    }\n  }\n\n  _computeHorizontalGestureValue({ translationX }) {\n    const {\n      transitionProps: { navigation, layout }\n    } = this.props;\n\n    const { index } = navigation.state;\n\n    // TODO: remove this __getValue!\n    const distance = layout.width.__getValue();\n\n    const x = this._isMotionInverted() ? -1 * translationX : translationX;\n\n    const value = index - x / distance;\n    return clamp(index - 1, value, index);\n  }\n\n  _computeVerticalGestureValue({ translationY }) {\n    const {\n      transitionProps: { navigation, layout }\n    } = this.props;\n\n    const { index } = navigation.state;\n\n    // TODO: remove this __getValue!\n    const distance = layout.height.__getValue();\n\n    const y = this._isMotionInverted() ? -1 * translationY : translationY;\n    const value = index - y / distance;\n    return clamp(index - 1, value, index);\n  }\n\n  _handlePanGestureStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      // Gesture was cancelled! For example, some navigation state update\n      // arrived while the gesture was active that cancelled it out\n      if (this.positionSwitch.__getValue() === 1) {\n        return;\n      }\n\n      if (this._isMotionVertical()) {\n        this._handleReleaseVertical(nativeEvent);\n      } else {\n        this._handleReleaseHorizontal(nativeEvent);\n      }\n    } else if (nativeEvent.state === State.ACTIVE) {\n      // Switch to using gesture position\n      this.positionSwitch.setValue(0);\n\n      // By enabling the gesture switch and ignoring the position here we\n      // end up with a quick jump to the initial value and then back to the\n      // gesture. While this isn't ideal, it's preferred over preventing new\n      // gestures during the animation (all gestures should be interruptible)\n      // and we will properly fix it (interruptible and from the correct position)\n      // when we integrate reanimated. If you prefer to prevent gestures during\n      // transitions, then fork this library, comment the positionSwitch value set above,\n      // and uncomment the following two lines.\n      // if (!this.props.transitionProps.position._animation) {\n      //   this.positionSwitch.setValue(0);\n      // }\n    }\n  };\n\n  // note: this will not animated so nicely because the position is unaware\n  // of the gesturePosition, so if we are in the middle of swiping the screen away\n  // and back is programatically fired then we will reset to the initial position\n  // and animate from there\n  _maybeCancelGesture() {\n    this.positionSwitch.setValue(1);\n  }\n\n  _prepareGesture() {\n    if (!this._isGestureEnabled()) {\n      if (this.positionSwitch.__getValue() !== 1) {\n        this.positionSwitch.setValue(1);\n      }\n      this.gesturePosition = undefined;\n      return;\n    }\n\n    // We can't run the gesture if width or height layout is unavailable\n    if (this.props.transitionProps.layout.width.__getValue() === 0 || this.props.transitionProps.layout.height.__getValue() === 0) {\n      return;\n    }\n\n    if (this._isMotionVertical()) {\n      this._prepareGestureVertical();\n    } else {\n      this._prepareGestureHorizontal();\n    }\n  }\n\n  _prepareGestureHorizontal() {\n    const { index } = this.props.transitionProps.navigation.state;\n\n    if (this._isMotionInverted()) {\n      this.gesturePosition = Animated.add(index, Animated.divide(this.gestureX, this.props.transitionProps.layout.width)).interpolate({\n        inputRange: [index - 1, index],\n        outputRange: [index - 1, index],\n        extrapolate: 'clamp'\n      });\n    } else {\n      this.gesturePosition = Animated.add(index, Animated.multiply(-1, Animated.divide(this.gestureX, this.props.transitionProps.layout.width))).interpolate({\n        inputRange: [index - 1, index],\n        outputRange: [index - 1, index],\n        extrapolate: 'clamp'\n      });\n    }\n  }\n\n  _prepareGestureVertical() {\n    const { index } = this.props.transitionProps.navigation.state;\n\n    if (this._isMotionInverted()) {\n      this.gesturePosition = Animated.add(index, Animated.divide(this.gestureY, this.props.transitionProps.layout.height)).interpolate({\n        inputRange: [index - 1, index],\n        outputRange: [index - 1, index],\n        extrapolate: 'clamp'\n      });\n    } else {\n      this.gesturePosition = Animated.add(index, Animated.multiply(-1, Animated.divide(this.gestureY, this.props.transitionProps.layout.height))).interpolate({\n        inputRange: [index - 1, index],\n        outputRange: [index - 1, index],\n        extrapolate: 'clamp'\n      });\n    }\n  }\n\n  _handleReleaseHorizontal(nativeEvent) {\n    const {\n      transitionProps: { navigation, position, layout }\n    } = this.props;\n    const { index } = navigation.state;\n    const immediateIndex = this._immediateIndex == null ? index : this._immediateIndex;\n\n    // Calculate animate duration according to gesture speed and moved distance\n    const distance = layout.width.__getValue();\n    const movementDirection = this._isMotionInverted() ? -1 : 1;\n    const movedDistance = movementDirection * nativeEvent.translationX;\n    const gestureVelocity = movementDirection * nativeEvent.velocityX;\n    const defaultVelocity = distance / ANIMATION_DURATION;\n    const velocity = Math.max(Math.abs(gestureVelocity), defaultVelocity);\n    const resetDuration = this._isMotionInverted() ? (distance - movedDistance) / velocity : movedDistance / velocity;\n    const goBackDuration = this._isMotionInverted() ? movedDistance / velocity : (distance - movedDistance) / velocity;\n\n    // Get the current position value and reset to using the statically driven\n    // (rather than gesture driven) position.\n    const value = this._computeHorizontalGestureValue(nativeEvent);\n    position.setValue(value);\n    this.positionSwitch.setValue(1);\n\n    // If the speed of the gesture release is significant, use that as the indication\n    // of intent\n    if (gestureVelocity < -50) {\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n      this._reset(immediateIndex, resetDuration);\n      return;\n    }\n    if (gestureVelocity > 50) {\n      this.props.onGestureFinish && this.props.onGestureFinish();\n      this._goBack(immediateIndex, goBackDuration);\n      return;\n    }\n\n    // Then filter based on the distance the screen was moved. Over a third of the way swiped,\n    // and the back will happen.\n    if (value <= index - POSITION_THRESHOLD) {\n      this.props.onGestureFinish && this.props.onGestureFinish();\n      this._goBack(immediateIndex, goBackDuration);\n    } else {\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n      this._reset(immediateIndex, resetDuration);\n    }\n  }\n\n  _handleReleaseVertical(nativeEvent) {\n    const {\n      transitionProps: { navigation, position, layout }\n    } = this.props;\n    const { index } = navigation.state;\n    const immediateIndex = this._immediateIndex == null ? index : this._immediateIndex;\n\n    // Calculate animate duration according to gesture speed and moved distance\n    const distance = layout.height.__getValue();\n    const isMotionInverted = this._isMotionInverted();\n    const movementDirection = isMotionInverted ? -1 : 1;\n    const movedDistance = movementDirection * nativeEvent.translationY;\n    const gestureVelocity = movementDirection * nativeEvent.velocityY;\n    const defaultVelocity = distance / ANIMATION_DURATION;\n    const velocity = Math.max(Math.abs(gestureVelocity), defaultVelocity);\n    const resetDuration = isMotionInverted ? (distance - movedDistance) / velocity : movedDistance / velocity;\n    const goBackDuration = isMotionInverted ? movedDistance / velocity : (distance - movedDistance) / velocity;\n\n    const value = this._computeVerticalGestureValue(nativeEvent);\n    position.setValue(value);\n    this.positionSwitch.setValue(1);\n\n    // If the speed of the gesture release is significant, use that as the indication\n    // of intent\n    if (gestureVelocity < -50) {\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n      this._reset(immediateIndex, resetDuration);\n      return;\n    }\n    if (gestureVelocity > 50) {\n      this.props.onGestureFinish && this.props.onGestureFinish();\n      this._goBack(immediateIndex, goBackDuration);\n      return;\n    }\n\n    // Then filter based on the distance the screen was moved. Over a third of the way swiped,\n    // and the back will happen.\n    if (value <= index - POSITION_THRESHOLD) {\n      this.props.onGestureFinish && this.props.onGestureFinish();\n      this._goBack(immediateIndex, goBackDuration);\n    } else {\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n      this._reset(immediateIndex, resetDuration);\n    }\n  }\n\n  _getHeaderMode() {\n    if (this.props.headerMode) {\n      return this.props.headerMode;\n    }\n    if (Platform.OS === 'android' || this.props.mode === 'modal') {\n      return 'screen';\n    }\n    return 'float';\n  }\n\n  _getHeaderBackgroundTransitionPreset() {\n    const { headerBackgroundTransitionPreset } = this.props;\n    if (headerBackgroundTransitionPreset) {\n      if (HEADER_BACKGROUND_TRANSITION_PRESET.includes(headerBackgroundTransitionPreset)) {\n        if (headerBackgroundTransitionPreset === 'fade') {\n          return HeaderStyleInterpolator.forBackgroundWithFade;\n        } else if (headerBackgroundTransitionPreset === 'translate') {\n          return HeaderStyleInterpolator.forBackgroundWithTranslation;\n        } else if (headerBackgroundTransitionPreset === 'toggle') {\n          return HeaderStyleInterpolator.forBackgroundWithInactiveHidden;\n        }\n      } else if (__DEV__) {\n        console.error(`Invalid configuration applied for headerBackgroundTransitionPreset - expected one of ${HEADER_BACKGROUND_TRANSITION_PRESET.join(', ')} but received ${JSON.stringify(headerBackgroundTransitionPreset)}`);\n      }\n    }\n\n    return null;\n  }\n\n  _getHeaderLayoutPreset() {\n    const { headerLayoutPreset } = this.props;\n    if (headerLayoutPreset) {\n      if (__DEV__) {\n        if (this._getHeaderTransitionPreset() === 'uikit' && headerLayoutPreset === 'left' && Platform.OS === 'ios') {\n          console.warn(`headerTransitionPreset with the value 'uikit' is incompatible with headerLayoutPreset 'left'`);\n        }\n      }\n      if (HEADER_LAYOUT_PRESET.includes(headerLayoutPreset)) {\n        return headerLayoutPreset;\n      }\n\n      if (__DEV__) {\n        console.error(`Invalid configuration applied for headerLayoutPreset - expected one of ${HEADER_LAYOUT_PRESET.join(', ')} but received ${JSON.stringify(headerLayoutPreset)}`);\n      }\n    }\n\n    if (Platform.OS === 'android') {\n      return 'left';\n    } else {\n      return 'center';\n    }\n  }\n\n  _getHeaderTransitionPreset() {\n    // On Android or with header mode screen, we always just use in-place,\n    // we ignore the option entirely (at least until we have other presets)\n    if (Platform.OS === 'android' || this._getHeaderMode() === 'screen') {\n      return 'fade-in-place';\n    }\n\n    const { headerTransitionPreset } = this.props;\n    if (headerTransitionPreset) {\n      if (HEADER_TRANSITION_PRESET.includes(headerTransitionPreset)) {\n        return headerTransitionPreset;\n      }\n\n      if (__DEV__) {\n        console.error(`Invalid configuration applied for headerTransitionPreset - expected one of ${HEADER_TRANSITION_PRESET.join(', ')} but received ${JSON.stringify(headerTransitionPreset)}`);\n      }\n    }\n\n    return 'fade-in-place';\n  }\n\n  _getHeaderBackTitleVisible() {\n    const { headerBackTitleVisible } = this.props;\n    const layoutPreset = this._getHeaderLayoutPreset();\n\n    // Even when we align to center on Android, people should need to opt-in to\n    // showing the back title\n    const enabledByDefault = !(layoutPreset === 'left' || Platform.OS === 'android');\n\n    return typeof headerBackTitleVisible === 'boolean' ? headerBackTitleVisible : enabledByDefault;\n  }\n\n  _renderInnerScene(scene) {\n    const { navigation, getComponent } = scene.descriptor;\n    const SceneComponent = getComponent();\n\n    const { screenProps } = this.props;\n    const headerMode = this._getHeaderMode();\n    if (headerMode === 'screen') {\n      return <View style={styles.container}>\n          <View style={styles.scenes}>\n            <SceneView screenProps={screenProps} navigation={navigation} component={SceneComponent} />\n          </View>\n          {this._renderHeader(scene, headerMode)}\n        </View>;\n    }\n    return <SceneView screenProps={screenProps} navigation={navigation} component={SceneComponent} />;\n  }\n\n  _prepareTransitionConfig() {\n    this._transitionConfig = TransitionConfigs.getTransitionConfig(this.props.transitionConfig, {\n      ...this.props.transitionProps,\n      position: this.position\n    }, this.props.lastTransitionProps, this._isModal());\n  }\n\n  _preparePosition() {\n    if (this.gesturePosition) {\n      this.position = Animated.add(Animated.multiply(this.props.transitionProps.position, this.positionSwitch), Animated.multiply(this.gesturePosition, this.gestureSwitch));\n    } else {\n      this.position = this.props.transitionProps.position;\n    }\n  }\n\n  _renderCard = scene => {\n    const {\n      transitionProps,\n      shadowEnabled,\n      cardOverlayEnabled,\n      transparentCard,\n      cardStyle\n    } = this.props;\n\n    const { screenInterpolator } = this._transitionConfig;\n    const style = screenInterpolator && screenInterpolator({\n      ...transitionProps,\n      shadowEnabled,\n      cardOverlayEnabled,\n      position: this.position,\n      scene\n    });\n\n    // When using a floating header, we need to add some top\n    // padding on the scene.\n    const { options } = scene.descriptor;\n    const hasHeader = options.header !== null;\n    const headerMode = this._getHeaderMode();\n    let paddingTopStyle;\n    if (hasHeader && headerMode === 'float' && !options.headerTransparent) {\n      paddingTopStyle = { paddingTop: this.state.floatingHeaderHeight };\n    }\n\n    return <Card {...transitionProps} key={`card_${scene.key}`} position={this.position} realPosition={transitionProps.position} animatedStyle={style} transparent={transparentCard} style={[paddingTopStyle, cardStyle]} scene={scene}>\n        {this._renderInnerScene(scene)}\n      </Card>;\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // Header is physically rendered after scenes so that Header won't be\n    // covered by the shadows of the scenes.\n    // That said, we'd have use `flexDirection: 'column-reverse'` to move\n    // Header above the scenes.\n    flexDirection: 'column-reverse',\n    overflow: 'hidden'\n  },\n  scenes: {\n    flex: 1\n  },\n  floatingHeader: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0\n  }\n});\n\nexport default withOrientation(StackViewLayout);"]},"metadata":{},"sourceType":"script"}