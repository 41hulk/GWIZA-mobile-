{"ast":null,"code":"var _regeneratorRuntime=require(\"@babel/runtime/regenerator\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.DatePicker=undefined;var _jsxFileName=\"src/basic/DatePicker.js\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require(\"react\");var _react2=_interopRequireDefault(_react);var _reactNative=require(\"react-native\");var _Text=require(\"./Text\");var _platform=require(\"../theme/variables/platform\");var _platform2=_interopRequireDefault(_platform);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var DatePicker=exports.DatePicker=function(_React$Component){_inherits(DatePicker,_React$Component);function DatePicker(props){_classCallCheck(this,DatePicker);var _this=_possibleConstructorReturn(this,(DatePicker.__proto__||Object.getPrototypeOf(DatePicker)).call(this,props));_this.state={modalVisible:false,defaultDate:props.defaultDate?props.defaultDate:new Date(),chosenDate:!props.placeHolderText&&props.defaultDate?props.defaultDate:undefined};return _this;}_createClass(DatePicker,[{key:\"setDate\",value:function setDate(date){this.setState({chosenDate:new Date(date)});if(this.props.onDateChange){this.props.onDateChange(date);}}},{key:\"showDatePicker\",value:function showDatePicker(){if(_reactNative.Platform.OS===\"android\"){this.openAndroidDatePicker();}else{this.setState({modalVisible:true});}}},{key:\"openAndroidDatePicker\",value:function openAndroidDatePicker(){var newDate,action,year,month,day,selectedDate,code,message;return _regeneratorRuntime.async(function openAndroidDatePicker$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(_reactNative.DatePickerAndroid.open({date:this.state.chosenDate?this.state.chosenDate:this.state.defaultDate,minDate:this.props.minimumDate,maxDate:this.props.maximumDate,mode:this.props.androidMode}));case 3:newDate=_context.sent;action=newDate.action,year=newDate.year,month=newDate.month,day=newDate.day;if(action===\"dateSetAction\"){selectedDate=new Date(year,month,day);this.setState({chosenDate:selectedDate});this.props.onDateChange(selectedDate);}_context.next=13;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);code=_context.t0.code;message=_context.t0.message;console.warn(\"Cannot open date picker\",message);case 13:case\"end\":return _context.stop();}}},null,this,[[0,8]]);}},{key:\"formatChosenDate\",value:function formatChosenDate(date){if(this.props.formatChosenDate){return this.props.formatChosenDate(date);}return[date.getDate(),date.getMonth()+1,date.getFullYear()].join('/');}},{key:\"render\",value:function render(){var _this2=this;var variables=this.context.theme?this.context.theme[\"@@shoutem.theme/themeStyle\"].variables:_platform2.default;return _react2.default.createElement(_reactNative.View,{__source:{fileName:_jsxFileName,lineNumber:77}},_react2.default.createElement(_reactNative.View,{__source:{fileName:_jsxFileName,lineNumber:78}},_react2.default.createElement(_Text.Text,{onPress:!this.props.disabled?this.showDatePicker.bind(this):undefined,style:[{padding:10,color:variables.datePickerTextColor},this.state.chosenDate?this.props.textStyle:this.props.placeHolderTextStyle],__source:{fileName:_jsxFileName,lineNumber:79}},this.state.chosenDate?this.formatChosenDate(this.state.chosenDate):this.props.placeHolderText?this.props.placeHolderText:\"Select Date\"),_react2.default.createElement(_reactNative.View,{__source:{fileName:_jsxFileName,lineNumber:92}},_react2.default.createElement(_reactNative.Modal,{supportedOrientations:['portrait','landscape'],animationType:this.props.animationType,transparent:this.props.modalTransparent,visible:this.state.modalVisible,onRequestClose:function onRequestClose(){},__source:{fileName:_jsxFileName,lineNumber:93}},_react2.default.createElement(_Text.Text,{onPress:function onPress(){return _this2.setState({modalVisible:false});},style:{backgroundColor:variables.datePickerBg,flex:1},__source:{fileName:_jsxFileName,lineNumber:100}}),_react2.default.createElement(_reactNative.DatePickerIOS,{date:this.state.chosenDate?this.state.chosenDate:this.state.defaultDate,onDateChange:this.setDate.bind(this),minimumDate:this.props.minimumDate,maximumDate:this.props.maximumDate,mode:\"date\",locale:this.props.locale,timeZoneOffsetInMinutes:this.props.timeZoneOffsetInMinutes,__source:{fileName:_jsxFileName,lineNumber:104}})))));}}]);return DatePicker;}(_react2.default.Component);DatePicker.defaultProps={disabled:false};","map":{"version":3,"sources":["../../../src/basic/DatePicker.js"],"names":["DatePicker","React","Component","defaultProps","disabled","modalVisible","defaultDate","props","chosenDate","date","Platform","newDate","DatePickerAndroid","minDate","maxDate","mode","action","year","month","day","selectedDate","code","message","console","variables","variable","padding","color","backgroundColor","flex"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Modal,\n  View,\n  Platform,\n  DatePickerIOS,\n  DatePickerAndroid\n} from \"react-native\";\nimport { Text } from \"./Text\";\nimport variable from \"../theme/variables/platform\";\n\nexport class DatePicker extends React.Component {\n  static defaultProps = {\n    disabled: false\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      defaultDate: props.defaultDate ? props.defaultDate : new Date(),\n      chosenDate: !props.placeHolderText && props.defaultDate ? props.defaultDate : undefined\n    };\n  }\n\n  setDate(date) {\n    this.setState({ chosenDate: new Date(date) });\n    if (this.props.onDateChange) {\n      this.props.onDateChange(date);\n    }\n  }\n\n  showDatePicker() {\n    if (Platform.OS === \"android\") {\n      this.openAndroidDatePicker();\n    } else {\n      this.setState({ modalVisible: true });\n    }\n  }\n\n  async openAndroidDatePicker() {\n    try {\n      const newDate = await DatePickerAndroid.open({\n        date: this.state.chosenDate\n          ? this.state.chosenDate\n          : this.state.defaultDate,\n        minDate: this.props.minimumDate,\n        maxDate: this.props.maximumDate,\n        mode: this.props.androidMode\n      });\n      const { action, year, month, day } = newDate;\n      if (action === \"dateSetAction\") {\n        let selectedDate = new Date(year, month, day);\n        this.setState({ chosenDate: selectedDate });\n        this.props.onDateChange(selectedDate);\n      }\n    } catch ({ code, message }) {\n      console.warn(\"Cannot open date picker\", message);\n    }\n  }\n\n  formatChosenDate(date) {\n    if (this.props.formatChosenDate) {\n      return this.props.formatChosenDate(date);\n    }\n    return [\n      date.getDate(),\n      date.getMonth() + 1,\n      date.getFullYear(),\n    ].join('/');\n  }\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    return (\n      <View>\n        <View>\n          <Text\n            onPress={ !this.props.disabled ? this.showDatePicker.bind(this) : undefined }\n            style={[\n              { padding: 10, color: variables.datePickerTextColor },\n              this.state.chosenDate ? this.props.textStyle : this.props.placeHolderTextStyle\n            ]}\n          >\n            {this.state.chosenDate\n              ? this.formatChosenDate(this.state.chosenDate)\n              : this.props.placeHolderText\n                ? this.props.placeHolderText\n                : \"Select Date\"}\n          </Text>\n          <View>\n            <Modal\n              supportedOrientations={['portrait', 'landscape']}\n              animationType={this.props.animationType}\n              transparent={this.props.modalTransparent} //from api\n              visible={this.state.modalVisible}\n              onRequestClose={() => { }}\n            >\n              <Text\n                onPress={() => this.setState({ modalVisible: false })}\n                style={{ backgroundColor: variables.datePickerBg, flex: 1 }}\n              />\n              <DatePickerIOS\n                date={\n                  this.state.chosenDate\n                    ? this.state.chosenDate\n                    : this.state.defaultDate\n                }\n                onDateChange={this.setDate.bind(this)}\n                minimumDate={this.props.minimumDate}\n                maximumDate={this.props.maximumDate}\n                mode=\"date\"\n                locale={this.props.locale}\n                timeZoneOffsetInMinutes={this.props.timeZoneOffsetInMinutes}\n              />\n            </Modal>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}