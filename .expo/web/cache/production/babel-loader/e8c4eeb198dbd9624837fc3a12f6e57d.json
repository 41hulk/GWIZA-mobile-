{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var TouchableComponent;if(_reactNative.Platform.OS==='android'){TouchableComponent=_reactNative.Platform.Version<=20?_reactNative.TouchableOpacity:_reactNative.TouchableNativeFeedback;}else{TouchableComponent=_reactNative.TouchableOpacity;}if(TouchableComponent!==_reactNative.TouchableNativeFeedback){TouchableComponent.SelectableBackground=function(){return{};};TouchableComponent.SelectableBackgroundBorderless=function(){return{};};TouchableComponent.Ripple=function(){return{};};TouchableComponent.canUseNativeForeground=function(){return false;};}var PlatformTouchable=function(_React$Component){(0,_inherits2.default)(PlatformTouchable,_React$Component);function PlatformTouchable(){(0,_classCallCheck2.default)(this,PlatformTouchable);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(PlatformTouchable).apply(this,arguments));}(0,_createClass2.default)(PlatformTouchable,[{key:\"render\",value:function render(){var _this$props=this.props,children=_this$props.children,style=_this$props.style,foreground=_this$props.foreground,background=_this$props.background,useForeground=_this$props.useForeground,props=(0,_objectWithoutProperties2.default)(_this$props,[\"children\",\"style\",\"foreground\",\"background\",\"useForeground\"]);children=_react.default.Children.only(children);if(TouchableComponent===_reactNative.TouchableNativeFeedback){useForeground=foreground&&_reactNative.TouchableNativeFeedback.canUseNativeForeground();if(foreground&&background){console.warn('Specified foreground and background for Touchable, only one can be used at a time. Defaulted to foreground.');}return _react.default.createElement(TouchableComponent,(0,_extends2.default)({},props,{useForeground:useForeground,background:useForeground&&foreground||background}),_react.default.createElement(_reactNative.View,{style:style},children));}else if(TouchableComponent===_reactNative.TouchableWithoutFeedback){return _react.default.createElement(_reactNative.TouchableWithoutFeedback,props,_react.default.createElement(_reactNative.View,{style:style},children));}else{var TouchableFallback=this.props.fallback||TouchableComponent;return _react.default.createElement(TouchableFallback,(0,_extends2.default)({},props,{style:style}),children);}}}]);return PlatformTouchable;}(_react.default.Component);exports.default=PlatformTouchable;PlatformTouchable.SelectableBackground=TouchableComponent.SelectableBackground;PlatformTouchable.SelectableBackgroundBorderless=TouchableComponent.SelectableBackgroundBorderless;PlatformTouchable.Ripple=TouchableComponent.Ripple;PlatformTouchable.canUseNativeForeground=TouchableComponent.canUseNativeForeground;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native-platform-touchable/PlatformTouchable.js"],"names":["TouchableComponent","Platform","OS","Version","TouchableOpacity","TouchableNativeFeedback","SelectableBackground","SelectableBackgroundBorderless","Ripple","canUseNativeForeground","PlatformTouchable","props","children","style","foreground","background","useForeground","React","Children","only","console","warn","TouchableWithoutFeedback","TouchableFallback","fallback","Component"],"mappings":"6zBAAA,oDACA,yCAQA,GAAIA,CAAAA,kBAAJ,CAEA,GAAIC,sBAASC,EAAT,GAAgB,SAApB,CAA+B,CAC7BF,kBAAkB,CAChBC,sBAASE,OAAT,EAAoB,EAApB,CAAyBC,6BAAzB,CAA4CC,oCAD9C,CAED,CAHD,IAGO,CACLL,kBAAkB,CAAGI,6BAArB,CACD,CAED,GAAIJ,kBAAkB,GAAKK,oCAA3B,CAAoD,CAClDL,kBAAkB,CAACM,oBAAnB,CAA0C,iBAAO,EAAP,EAA1C,CACAN,kBAAkB,CAACO,8BAAnB,CAAoD,iBAAO,EAAP,EAApD,CACAP,kBAAkB,CAACQ,MAAnB,CAA4B,iBAAO,EAAP,EAA5B,CACAR,kBAAkB,CAACS,sBAAnB,CAA4C,iBAAM,MAAN,EAA5C,CACD,C,GAEoBC,CAAAA,iB,sXAMV,iBAQH,KAAKC,KARF,CAELC,QAFK,aAELA,QAFK,CAGLC,KAHK,aAGLA,KAHK,CAILC,UAJK,aAILA,UAJK,CAKLC,UALK,aAKLA,UALK,CAMLC,aANK,aAMLA,aANK,CAOFL,KAPE,mHAcPC,QAAQ,CAAGK,eAAMC,QAAN,CAAeC,IAAf,CAAoBP,QAApB,CAAX,CAEA,GAAIZ,kBAAkB,GAAKK,oCAA3B,CAAoD,CAClDW,aAAa,CACXF,UAAU,EAAIT,qCAAwBI,sBAAxB,EADhB,CAGA,GAAIK,UAAU,EAAIC,UAAlB,CAA8B,CAC5BK,OAAO,CAACC,IAAR,CACE,6GADF,EAGD,CAED,MACE,8BAAC,kBAAD,0BACMV,KADN,EAEE,aAAa,CAAEK,aAFjB,CAGE,UAAU,CAAGA,aAAa,EAAIF,UAAlB,EAAiCC,UAH/C,GAIE,6BAAC,iBAAD,EAAM,KAAK,CAAEF,KAAb,EACGD,QADH,CAJF,CADF,CAUD,CApBD,IAoBO,IAAIZ,kBAAkB,GAAKsB,qCAA3B,CAAqD,CAC1D,MACE,8BAAC,qCAAD,CAA8BX,KAA9B,CACE,6BAAC,iBAAD,EAAM,KAAK,CAAEE,KAAb,EACGD,QADH,CADF,CADF,CAOD,CARM,IAQA,CACL,GAAIW,CAAAA,iBAAiB,CAAG,KAAKZ,KAAL,CAAWa,QAAX,EAAuBxB,kBAA/C,CACA,MACE,8BAAC,iBAAD,0BAAuBW,KAAvB,EAA8B,KAAK,CAAEE,KAArC,GACGD,QADH,CADF,CAKD,CACF,C,+BA1D4CK,eAAMQ,S,oCAAhCf,iB,CACZJ,oB,CAAuBN,kBAAkB,CAACM,oB,CAD9BI,iB,CAEZH,8B,CAAiCP,kBAAkB,CAACO,8B,CAFxCG,iB,CAGZF,M,CAASR,kBAAkB,CAACQ,M,CAHhBE,iB,CAIZD,sB,CAAyBT,kBAAkB,CAACS,sB","sourcesContent":["import React from 'react';\nimport {\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\n\nlet TouchableComponent;\n\nif (Platform.OS === 'android') {\n  TouchableComponent =\n    Platform.Version <= 20 ? TouchableOpacity : TouchableNativeFeedback;\n} else {\n  TouchableComponent = TouchableOpacity;\n}\n\nif (TouchableComponent !== TouchableNativeFeedback) {\n  TouchableComponent.SelectableBackground = () => ({});\n  TouchableComponent.SelectableBackgroundBorderless = () => ({});\n  TouchableComponent.Ripple = () => ({});\n  TouchableComponent.canUseNativeForeground = () => false;\n}\n\nexport default class PlatformTouchable extends React.Component {\n  static SelectableBackground = TouchableComponent.SelectableBackground;\n  static SelectableBackgroundBorderless = TouchableComponent.SelectableBackgroundBorderless;\n  static Ripple = TouchableComponent.Ripple;\n  static canUseNativeForeground = TouchableComponent.canUseNativeForeground;\n\n  render() {\n    let {\n      children,\n      style,\n      foreground,\n      background,\n      useForeground,\n      ...props\n    } = this.props;\n\n    // Even though it works for TouchableWithoutFeedback and\n    // TouchableNativeFeedback with this component, we want\n    // the API to be the same for all components so we require\n    // exactly one direct child for every touchable type.\n    children = React.Children.only(children);\n\n    if (TouchableComponent === TouchableNativeFeedback) {\n      useForeground =\n        foreground && TouchableNativeFeedback.canUseNativeForeground();\n\n      if (foreground && background) {\n        console.warn(\n          'Specified foreground and background for Touchable, only one can be used at a time. Defaulted to foreground.'\n        );\n      }\n\n      return (\n        <TouchableComponent\n          {...props}\n          useForeground={useForeground}\n          background={(useForeground && foreground) || background}>\n          <View style={style}>\n            {children}\n          </View>\n        </TouchableComponent>\n      );\n    } else if (TouchableComponent === TouchableWithoutFeedback) {\n      return (\n        <TouchableWithoutFeedback {...props}>\n          <View style={style}>\n            {children}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    } else {\n      let TouchableFallback = this.props.fallback || TouchableComponent;\n      return (\n        <TouchableFallback {...props} style={style}>\n          {children}\n        </TouchableFallback>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}