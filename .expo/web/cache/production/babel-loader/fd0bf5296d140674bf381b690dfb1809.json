{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});Object.defineProperty(exports,\"BranchEvent\",{enumerable:true,get:function get(){return _BranchEvent.default;}});exports.default=exports.Branch=exports.ShareInitiatedEvent=exports.ShareCompletedEvent=exports.RegisterViewEvent=exports.PurchaseInitiatedEvent=exports.PurchasedEvent=exports.AddToWishlistEvent=exports.AddToCartEvent=exports.VERSION=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _reactNative=require(\"react-native\");var _branchUniversalObject=_interopRequireDefault(require(\"./branchUniversalObject\"));var _BranchEvent=_interopRequireDefault(require(\"./BranchEvent\"));var RNBranch=_reactNative.NativeModules.RNBranch,RNBranchEventEmitter=_reactNative.NativeModules.RNBranchEventEmitter;var packageFile=require(\"./../package.json\");var VERSION=packageFile.version;exports.VERSION=VERSION;var AddToCartEvent=RNBranch.ADD_TO_CART_EVENT;exports.AddToCartEvent=AddToCartEvent;var AddToWishlistEvent=RNBranch.ADD_TO_WISHLIST_EVENT;exports.AddToWishlistEvent=AddToWishlistEvent;var PurchasedEvent=RNBranch.PURCHASED_EVENT;exports.PurchasedEvent=PurchasedEvent;var PurchaseInitiatedEvent=RNBranch.PURCHASE_INITIATED_EVENT;exports.PurchaseInitiatedEvent=PurchaseInitiatedEvent;var RegisterViewEvent=RNBranch.REGISTER_VIEW_EVENT;exports.RegisterViewEvent=RegisterViewEvent;var ShareCompletedEvent=RNBranch.SHARE_COMPLETED_EVENT;exports.ShareCompletedEvent=ShareCompletedEvent;var ShareInitiatedEvent=RNBranch.SHARE_INITIATED_EVENT;exports.ShareInitiatedEvent=ShareInitiatedEvent;var Branch=function(){function Branch(){var _options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};(0,_classCallCheck2.default)(this,Branch);this.nativeEventEmitter=_reactNative.Platform.select({android:_reactNative.DeviceEventEmitter,ios:new _reactNative.NativeEventEmitter(RNBranchEventEmitter)});this._checkCachedEvents=true;this._debug=false;this.setDebug=function(){throw'setDebug() is not supported in the RN SDK. For other solutions, please see https://rnbranch.app.link/setDebug';};this.getLatestReferringParams=RNBranch.getLatestReferringParams;this.getFirstReferringParams=RNBranch.getFirstReferringParams;this.setIdentity=function(identity){return RNBranch.setIdentity(identity);};this.logout=RNBranch.logout;this.userCompletedAction=function(event){var state=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return RNBranch.userCompletedAction(event,state);};this.getShortUrl=RNBranch.getShortUrl;this.sendCommerceEvent=function(revenue,metadata){console.info('[Branch] sendCommerceEvent is deprecated. Please use the BranchEvent class instead.');return RNBranch.sendCommerceEvent(''+revenue,metadata);};this.openURL=function(url){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return _reactNative.Platform.select({android:function android(){return RNBranch.openURL(url,options);},ios:function ios(){return RNBranch.openURL(url);}})();};this.redeemRewards=function(amount,bucket){return RNBranch.redeemRewards(amount,bucket);};this.loadRewards=function(bucket){return RNBranch.loadRewards(bucket);};this.getCreditHistory=RNBranch.getCreditHistory;this.createBranchUniversalObject=_branchUniversalObject.default;if(_options.debug)this._debug=true;console.info('Initializing react-native-branch v. '+VERSION);}(0,_createClass2.default)(Branch,[{key:\"subscribe\",value:function subscribe(listener){var _this=this;if(this._checkCachedEvents){this._checkCachedEvents=false;RNBranch.redeemInitSessionResult().then(function(result){if(result){if('params'in result){result['params']['cached_initial_event']=true;}listener(result);}_this._addListener(listener);});}else{this._addListener(listener);}var unsubscribe=function unsubscribe(){_this._removeListener(listener);};return unsubscribe;}},{key:\"skipCachedEvents\",value:function skipCachedEvents(){this._checkCachedEvents=false;}},{key:\"_addListener\",value:function _addListener(listener){this.nativeEventEmitter.addListener(RNBranch.INIT_SESSION_SUCCESS,listener);this.nativeEventEmitter.addListener(RNBranch.INIT_SESSION_ERROR,listener);}},{key:\"_removeListener\",value:function _removeListener(listener){this.nativeEventEmitter.removeListener(RNBranch.INIT_SESSION_SUCCESS,listener);this.nativeEventEmitter.removeListener(RNBranch.INIT_SESSION_ERROR,listener);}}]);return Branch;}();exports.Branch=Branch;var _default=new Branch();exports.default=_default;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native-branch/src/index.js"],"names":["RNBranch","NativeModules","RNBranchEventEmitter","packageFile","require","VERSION","version","AddToCartEvent","ADD_TO_CART_EVENT","AddToWishlistEvent","ADD_TO_WISHLIST_EVENT","PurchasedEvent","PURCHASED_EVENT","PurchaseInitiatedEvent","PURCHASE_INITIATED_EVENT","RegisterViewEvent","REGISTER_VIEW_EVENT","ShareCompletedEvent","SHARE_COMPLETED_EVENT","ShareInitiatedEvent","SHARE_INITIATED_EVENT","Branch","options","nativeEventEmitter","Platform","select","android","DeviceEventEmitter","ios","NativeEventEmitter","_checkCachedEvents","_debug","setDebug","getLatestReferringParams","getFirstReferringParams","setIdentity","identity","logout","userCompletedAction","event","state","getShortUrl","sendCommerceEvent","revenue","metadata","console","info","openURL","url","redeemRewards","amount","bucket","loadRewards","getCreditHistory","createBranchUniversalObject","debug","listener","redeemInitSessionResult","then","result","_addListener","unsubscribe","_removeListener","addListener","INIT_SESSION_SUCCESS","INIT_SESSION_ERROR","removeListener"],"mappings":"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","sourcesContent":["import { NativeModules, NativeEventEmitter, DeviceEventEmitter, Platform } from 'react-native'\n\nconst { RNBranch, RNBranchEventEmitter } = NativeModules\n\nimport createBranchUniversalObject from './branchUniversalObject'\nimport BranchEvent from './BranchEvent'\n\nconst packageFile = require('./../package.json')\nexport const VERSION = packageFile.version\n\nexport const AddToCartEvent = RNBranch.ADD_TO_CART_EVENT\nexport const AddToWishlistEvent = RNBranch.ADD_TO_WISHLIST_EVENT\nexport const PurchasedEvent = RNBranch.PURCHASED_EVENT\nexport const PurchaseInitiatedEvent = RNBranch.PURCHASE_INITIATED_EVENT\nexport const RegisterViewEvent = RNBranch.REGISTER_VIEW_EVENT\nexport const ShareCompletedEvent = RNBranch.SHARE_COMPLETED_EVENT\nexport const ShareInitiatedEvent = RNBranch.SHARE_INITIATED_EVENT\n\nclass Branch {\n  nativeEventEmitter = Platform.select({\n    android: DeviceEventEmitter,\n    ios: new NativeEventEmitter(RNBranchEventEmitter)\n  })\n\n  _checkCachedEvents = true;\n  _debug = false;\n\n  constructor(options = {}) {\n    if (options.debug) this._debug = true\n\n    console.info('Initializing react-native-branch v. ' + VERSION)\n  }\n\n  subscribe(listener) {\n    /*\n     * If _checkCachedEvents flag is set, get the cached value from the native layer (asynchronously).\n     * If none, the listener is not called. If there is a cached value, it is passed to the listener.\n     */\n    if (this._checkCachedEvents) {\n      this._checkCachedEvents = false\n\n      RNBranch.redeemInitSessionResult().then((result) => {\n        if (result) {\n          /*** Cached value is returned, so set it as cached. ***/\n          if('params' in result) {\n            result['params']['cached_initial_event'] = true\n          }\n\n          listener(result)\n        }\n\n        /*\n         * https://github.com/BranchMetrics/react-native-branch-deep-linking/issues/79\n         *\n         * By waiting until redeemInitSessionResult() returns, we roughly simulate a\n         * synchronous call to the native layer.\n         *\n         * Note that this is equivalent to\n         *\n         * let result = await RNBranch.redeemInitSessionResult()\n         * if (result) listener(result)\n         * this._addListener(listener)\n         *\n         * But by using then(), the subscribe method does not have to be async.\n         * This way, we don't add event listeners until the listener has received the\n         * initial cached value, which essentially eliminates all possibility of\n         * getting the same event twice.\n         */\n        this._addListener(listener)\n      })\n    }\n    else {\n      this._addListener(listener)\n    }\n\n    const unsubscribe = () => {\n      this._removeListener(listener)\n    }\n\n    return unsubscribe\n  }\n\n  skipCachedEvents() {\n    /*** Sets to ignore cached events. ***/\n    this._checkCachedEvents = false\n  }\n\n  _addListener(listener) {\n    this.nativeEventEmitter.addListener(RNBranch.INIT_SESSION_SUCCESS, listener)\n    this.nativeEventEmitter.addListener(RNBranch.INIT_SESSION_ERROR, listener)\n  }\n\n  _removeListener(listener) {\n    this.nativeEventEmitter.removeListener(RNBranch.INIT_SESSION_SUCCESS, listener)\n    this.nativeEventEmitter.removeListener(RNBranch.INIT_SESSION_ERROR, listener)\n  }\n\n  /*** RNBranch singleton methods ***/\n  setDebug = () => { throw 'setDebug() is not supported in the RN SDK. For other solutions, please see https://rnbranch.app.link/setDebug' }\n  getLatestReferringParams = RNBranch.getLatestReferringParams\n  getFirstReferringParams = RNBranch.getFirstReferringParams\n  setIdentity = (identity) => RNBranch.setIdentity(identity)\n  logout = RNBranch.logout\n  userCompletedAction = (event, state = {}) => RNBranch.userCompletedAction(event, state)\n  getShortUrl = RNBranch.getShortUrl\n  sendCommerceEvent = (revenue, metadata) => {\n    console.info('[Branch] sendCommerceEvent is deprecated. Please use the BranchEvent class instead.')\n    return RNBranch.sendCommerceEvent('' + revenue, metadata)\n  }\n  openURL = (url, options = {}) => {\n    return Platform.select({\n      android: () => RNBranch.openURL(url, options),\n      ios: () => RNBranch.openURL(url)\n    })()\n  }\n\n  /*** Referral Methods ***/\n  redeemRewards = (amount, bucket) => RNBranch.redeemRewards(amount, bucket)\n  loadRewards = (bucket) => RNBranch.loadRewards(bucket)\n  getCreditHistory = RNBranch.getCreditHistory\n\n  /*** BranchUniversalObject ***/\n  createBranchUniversalObject = createBranchUniversalObject\n}\n\nexport { Branch, BranchEvent }\nexport default new Branch()\n"]},"metadata":{},"sourceType":"script"}