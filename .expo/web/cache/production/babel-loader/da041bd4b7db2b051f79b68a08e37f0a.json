{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _AppLoading=require(\"./AppLoading\");var RootErrorBoundary=function(_React$Component){(0,_inherits2.default)(RootErrorBoundary,_React$Component);function RootErrorBoundary(){var _this;(0,_classCallCheck2.default)(this,RootErrorBoundary);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(RootErrorBoundary).apply(this,arguments));_this.state={error:null};_this._appLoadingIsMounted=false;_this._subscribeToGlobalErrors=function(){_this._appLoadingIsMounted=true;var ErrorUtils=global.ErrorUtils;var originalErrorHandler=ErrorUtils.getGlobalHandler();ErrorUtils.setGlobalHandler(function(error,isFatal){if(_this._appLoadingIsMounted){_reactNative.NativeModules.ExponentAppLoadingManager&&_reactNative.NativeModules.ExponentAppLoadingManager.finishedAsync();if(isFatal){_this.setState({error:error});}}originalErrorHandler(error,isFatal);});};_this._unsubscribeFromGlobalErrors=function(){_this._appLoadingIsMounted=false;};return _this;}(0,_createClass2.default)(RootErrorBoundary,[{key:\"componentWillMount\",value:function componentWillMount(){if(__DEV__){(0,_AppLoading.getAppLoadingLifecycleEmitter)().once('componentDidMount',this._subscribeToGlobalErrors);(0,_AppLoading.getAppLoadingLifecycleEmitter)().once('componentWillUnmount',this._unsubscribeFromGlobalErrors);}}},{key:\"componentDidCatch\",value:function componentDidCatch(error){if(this._appLoadingIsMounted){_reactNative.NativeModules.ExponentAppLoadingManager&&_reactNative.NativeModules.ExponentAppLoadingManager.finishedAsync();this.setState({error:error});}console.error(error);}},{key:\"render\",value:function render(){if(this.state.error){return _react.default.createElement(_reactNative.View,{style:styles.container},_react.default.createElement(_reactNative.Text,{style:styles.warningIcon},\"\\u26A0\\uFE0F\"),_react.default.createElement(_reactNative.Text,{style:[styles.paragraph,{color:'#000'}]},\"A fatal error was encountered while rendering the root component.\"),_react.default.createElement(_reactNative.Text,{style:styles.paragraph},\"Review your application logs for more information, and reload the app when the issue is resolved. In production, your app would have crashed.\"));}else{return this.props.children;}}}]);return RootErrorBoundary;}(_react.default.Component);exports.default=RootErrorBoundary;var styles=_reactNative.StyleSheet.create({container:{flex:1,alignItems:'center',justifyContent:'center'},paragraph:{marginBottom:10,textAlign:'center',marginHorizontal:30,maxWidth:350,fontSize:15,color:'#888'},warningIcon:{fontSize:40,marginBottom:20}});","map":{"version":3,"sources":["../../src/launch/RootErrorBoundary.tsx"],"names":[],"mappings":"6nBAAA,oDACA,yCAEA,wC,GAUqB,CAAA,iB,uFAArB,4BAAA,gE,0HACE,MAAA,KAAA,CAAQ,CACN,KAAK,CAAE,IADD,CAAR,CAIA,MAAA,oBAAA,CAAuB,KAAvB,CAeA,MAAA,wBAAA,CAA2B,UAAK,CAC9B,MAAK,oBAAL,CAA4B,IAA5B,CAEA,GAAI,CAAA,UAAU,CAAG,MAAM,CAAC,UAAxB,CACA,GAAI,CAAA,oBAAoB,CAAG,UAAU,CAAC,gBAAX,EAA3B,CAEA,UAAU,CAAC,gBAAX,CAA4B,SAAC,KAAD,CAAQ,OAAR,CAAmB,CAC7C,GAAI,MAAK,oBAAT,CAA+B,CAC7B,2BAAc,yBAAd,EACE,2BAAc,yBAAd,CAAwC,aAAxC,EADF,CAGA,GAAI,OAAJ,CAAa,CACX,MAAK,QAAL,CAAc,CAAE,KAAK,CAAL,KAAF,CAAd,EACD,CACF,CAED,oBAAoB,CAAC,KAAD,CAAQ,OAAR,CAApB,CACD,CAXD,EAYD,CAlBD,CAoBA,MAAA,4BAAA,CAA+B,UAAK,CAIlC,MAAK,oBAAL,CAA4B,KAA5B,CACD,CALD,CAxCF,aA6EC,C,0GAtEmB,CAIhB,GAAI,OAAJ,CAAa,CACX,gDAAgC,IAAhC,CAAqC,mBAArC,CAA0D,KAAK,wBAA/D,EACA,gDAAgC,IAAhC,CACE,sBADF,CAEE,KAAK,4BAFP,EAID,CACF,C,4DA8BiB,K,CAAY,CAC5B,GAAI,KAAK,oBAAT,CAA+B,CAC7B,2BAAc,yBAAd,EACE,2BAAc,yBAAd,CAAwC,aAAxC,EADF,CAGA,KAAK,QAAL,CAAc,CAAE,KAAK,CAAL,KAAF,CAAd,EACD,CAED,OAAO,CAAC,KAAR,CAAc,KAAd,EACD,C,uCAEK,CACJ,GAAI,KAAK,KAAL,CAAW,KAAf,CAAsB,CACpB,MACE,8BAAC,iBAAD,EAAM,KAAK,CAAE,MAAM,CAAC,SAApB,EACE,6BAAC,iBAAD,EAAM,KAAK,CAAE,MAAM,CAAC,WAApB,iBADF,CAEE,6BAAC,iBAAD,EAAM,KAAK,CAAE,CAAC,MAAM,CAAC,SAAR,CAAmB,CAAE,KAAK,CAAE,MAAT,CAAnB,CAAb,sEAFF,CAKE,6BAAC,iBAAD,EAAM,KAAK,CAAE,MAAM,CAAC,SAApB,kJALF,CADF,CAYD,CAbD,IAaO,CACL,MAAO,MAAK,KAAL,CAAW,QAAlB,CACD,CACF,C,+BA5E4C,eAAM,S,oCA+ErD,GAAM,CAAA,MAAM,CAAG,wBAAW,MAAX,CAAkB,CAC/B,SAAS,CAAE,CACT,IAAI,CAAE,CADG,CAET,UAAU,CAAE,QAFH,CAGT,cAAc,CAAE,QAHP,CADoB,CAM/B,SAAS,CAAE,CACT,YAAY,CAAE,EADL,CAET,SAAS,CAAE,QAFF,CAGT,gBAAgB,CAAE,EAHT,CAIT,QAAQ,CAAE,GAJD,CAKT,QAAQ,CAAE,EALD,CAMT,KAAK,CAAE,MANE,CANoB,CAc/B,WAAW,CAAE,CACX,QAAQ,CAAE,EADC,CAEX,YAAY,CAAE,EAFH,CAdkB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { NativeModules, StyleSheet, Text, View } from 'react-native';\n\nimport { getAppLoadingLifecycleEmitter } from './AppLoading';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype State = {\n  error: Error | null;\n};\n\nexport default class RootErrorBoundary extends React.Component<Props, State> {\n  state = {\n    error: null,\n  };\n\n  _appLoadingIsMounted = false;\n\n  componentWillMount() {\n    // In production the app will just hard crash on errors, unless the developer decides to handle\n    // them by overriding the global error handler and swallowing the error, in which case they are\n    // responsible for determining how to recover from this state.\n    if (__DEV__) {\n      getAppLoadingLifecycleEmitter().once('componentDidMount', this._subscribeToGlobalErrors);\n      getAppLoadingLifecycleEmitter().once(\n        'componentWillUnmount',\n        this._unsubscribeFromGlobalErrors\n      );\n    }\n  }\n\n  _subscribeToGlobalErrors = () => {\n    this._appLoadingIsMounted = true;\n\n    let ErrorUtils = global.ErrorUtils;\n    let originalErrorHandler = ErrorUtils.getGlobalHandler();\n\n    ErrorUtils.setGlobalHandler((error, isFatal) => {\n      if (this._appLoadingIsMounted) {\n        NativeModules.ExponentAppLoadingManager &&\n          NativeModules.ExponentAppLoadingManager.finishedAsync();\n\n        if (isFatal) {\n          this.setState({ error });\n        }\n      }\n\n      originalErrorHandler(error, isFatal);\n    });\n  };\n\n  _unsubscribeFromGlobalErrors = () => {\n    // We don't remove the global error handler that we set here because it is conceivable that the\n    // user may add error handlers *after* we subscribe, and we don't want to override those, so\n    // instead we just gate the call\n    this._appLoadingIsMounted = false;\n  };\n\n  // Test this by adding `throw new Error('example')` to your root component\n  componentDidCatch(error: Error) {\n    if (this._appLoadingIsMounted) {\n      NativeModules.ExponentAppLoadingManager &&\n        NativeModules.ExponentAppLoadingManager.finishedAsync();\n\n      this.setState({ error });\n    }\n\n    console.error(error);\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.warningIcon}>⚠️</Text>\n          <Text style={[styles.paragraph, { color: '#000' }]}>\n            A fatal error was encountered while rendering the root component.\n          </Text>\n          <Text style={styles.paragraph}>\n            Review your application logs for more information, and reload the app when the issue is\n            resolved. In production, your app would have crashed.\n          </Text>\n        </View>\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paragraph: {\n    marginBottom: 10,\n    textAlign: 'center',\n    marginHorizontal: 30,\n    maxWidth: 350,\n    fontSize: 15,\n    color: '#888',\n  },\n  warningIcon: {\n    fontSize: 40,\n    marginBottom: 20,\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}