{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports._TESTING_ONLY_reset_container_count=_TESTING_ONLY_reset_container_count;exports.default=createNavigationContainer;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _reactLifecyclesCompat=require(\"react-lifecycles-compat\");var _core=require(\"@react-navigation/core\");var _invariant=_interopRequireDefault(require(\"./utils/invariant\"));var _docsUrl=_interopRequireDefault(require(\"./utils/docsUrl\"));var urlToPathAndParams=_core.pathUtils.urlToPathAndParams;function isStateful(props){return!props.navigation;}function validateProps(props){if(isStateful(props)){return;}var navigation=props.navigation,screenProps=props.screenProps,containerProps=(0,_objectWithoutProperties2.default)(props,[\"navigation\",\"screenProps\"]);var keys=Object.keys(containerProps);if(keys.length!==0){throw new Error('This navigator has both navigation and container props, so it is '+(\"unclear if it should own its own state. Remove props: \\\"\"+keys.join(', ')+\"\\\" \")+'if the navigator should get its state from the navigation prop. If the '+'navigator should maintain its own state, do not pass a navigation prop.');}}var _statefulContainerCount=0;function _TESTING_ONLY_reset_container_count(){_statefulContainerCount=0;}var _reactNavigationIsHydratingState=false;function createNavigationContainer(Component){var NavigationContainer=function(_React$Component){(0,_inherits2.default)(NavigationContainer,_React$Component);(0,_createClass2.default)(NavigationContainer,null,[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps){validateProps(nextProps);return null;}}]);function NavigationContainer(props){var _this;(0,_classCallCheck2.default)(this,NavigationContainer);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(NavigationContainer).call(this,props));_this.subs=null;_this._actionEventSubscribers=new Set();_this._handleOpenURL=function(_ref){var url=_ref.url;var _this$props=_this.props,enableURLHandling=_this$props.enableURLHandling,uriPrefix=_this$props.uriPrefix;if(enableURLHandling===false){return;}var parsedUrl=urlToPathAndParams(url,uriPrefix);if(parsedUrl){var path=parsedUrl.path,params=parsedUrl.params;var action=Component.router.getActionForPathAndParams(path,params);if(action){_this.dispatch(action);}}};_this._persistNavigationState=function _callee(nav){var persistenceKey;return _regenerator.default.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:persistenceKey=_this.props.persistenceKey;if(persistenceKey){_context.next=3;break;}return _context.abrupt(\"return\");case 3:_context.next=5;return _regenerator.default.awrap(_reactNative.AsyncStorage.setItem(persistenceKey,JSON.stringify(nav)));case 5:case\"end\":return _context.stop();}}},null,this);};_this.dispatch=function(action){if(_this.props.navigation){return _this.props.navigation.dispatch(action);}_this._navState=_this._navState||_this.state.nav;var lastNavState=_this._navState;(0,_invariant.default)(lastNavState,'should be set in constructor if stateful');var reducedState=Component.router.getStateForAction(action,lastNavState);var navState=reducedState===null?lastNavState:reducedState;var dispatchActionEvents=function dispatchActionEvents(){_this._actionEventSubscribers.forEach(function(subscriber){return subscriber({type:'action',action:action,state:navState,lastState:lastNavState});});};if(reducedState===null){dispatchActionEvents();return true;}if(navState!==lastNavState){_this._navState=navState;_this.setState({nav:navState},function(){_this._onNavigationStateChange(lastNavState,navState,action);dispatchActionEvents();_this._persistNavigationState(navState);});return true;}dispatchActionEvents();return false;};_this._getScreenProps=function(){return _this.props.screenProps;};validateProps(props);_this._initialAction=_core.NavigationActions.init();if(_this._isStateful()){_this.subs=_reactNative.BackHandler.addEventListener('hardwareBackPress',function(){if(!_this._isMounted){_this.subs&&_this.subs.remove();}else{return _this.dispatch(_core.NavigationActions.back());}});}_this.state={nav:_this._isStateful()&&!props.persistenceKey?Component.router.getStateForAction(_this._initialAction):null};return _this;}(0,_createClass2.default)(NavigationContainer,[{key:\"_renderLoading\",value:function _renderLoading(){return this.props.renderLoadingExperimental?this.props.renderLoadingExperimental():null;}},{key:\"_isStateful\",value:function _isStateful(){return isStateful(this.props);}},{key:\"_validateProps\",value:function _validateProps(props){if(this._isStateful()){return;}var navigation=props.navigation,screenProps=props.screenProps,containerProps=(0,_objectWithoutProperties2.default)(props,[\"navigation\",\"screenProps\"]);var keys=Object.keys(containerProps);if(keys.length!==0){throw new Error('This navigator has both navigation and container props, so it is '+(\"unclear if it should own its own state. Remove props: \\\"\"+keys.join(', ')+\"\\\" \")+'if the navigator should get its state from the navigation prop. If the '+'navigator should maintain its own state, do not pass a navigation prop.');}}},{key:\"_onNavigationStateChange\",value:function _onNavigationStateChange(prevNav,nav,action){if(typeof this.props.onNavigationStateChange==='undefined'&&this._isStateful()&&!!process.env.REACT_NAV_LOGGING){if(console.group){console.group('Navigation Dispatch: ');console.log('Action: ',action);console.log('New State: ',nav);console.log('Last State: ',prevNav);console.groupEnd();}else{console.log('Navigation Dispatch: ',{action:action,newState:nav,lastState:prevNav});}return;}if(typeof this.props.onNavigationStateChange==='function'){this.props.onNavigationStateChange(prevNav,nav,action);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this._navState===this.state.nav){this._navState=null;}}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var _this$props2,persistenceKey,uriPrefix,enableURLHandling,parsedUrl,startupStateJSON,url,action,startupState,_parsedUrl,path,params,urlAction,dispatchActions;return _regenerator.default.async(function componentDidMount$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:this._isMounted=true;if(this._isStateful()){_context2.next=3;break;}return _context2.abrupt(\"return\");case 3:if(__DEV__&&!this.props.detached){if(_statefulContainerCount>0){if(_reactNative.Platform.OS==='ios'){console.warn(\"You should only render one navigator explicitly in your app, and other navigators should be rendered by including them in that navigator. Full details at: \"+(0,_docsUrl.default)('common-mistakes.html#explicitly-rendering-more-than-one-navigator'));}}}_statefulContainerCount++;_reactNative.Linking.addEventListener('url',this._handleOpenURL);_this$props2=this.props,persistenceKey=_this$props2.persistenceKey,uriPrefix=_this$props2.uriPrefix,enableURLHandling=_this$props2.enableURLHandling;parsedUrl=null;startupStateJSON=null;if(!(enableURLHandling!==false)){_context2.next=20;break;}_context2.t0=persistenceKey;if(!_context2.t0){_context2.next=15;break;}_context2.next=14;return _regenerator.default.awrap(_reactNative.AsyncStorage.getItem(persistenceKey));case 14:_context2.t0=_context2.sent;case 15:startupStateJSON=_context2.t0;_context2.next=18;return _regenerator.default.awrap(_reactNative.Linking.getInitialURL());case 18:url=_context2.sent;parsedUrl=url&&urlToPathAndParams(url,uriPrefix);case 20:action=this._initialAction;startupState=this.state.nav;if(!startupState){!!process.env.REACT_NAV_LOGGING&&console.log('Init new Navigation State');startupState=Component.router.getStateForAction(action);}if(startupStateJSON){try{startupState=JSON.parse(startupStateJSON);_reactNavigationIsHydratingState=true;}catch(e){}}if(parsedUrl){_parsedUrl=parsedUrl,path=_parsedUrl.path,params=_parsedUrl.params;urlAction=Component.router.getActionForPathAndParams(path,params);if(urlAction){!!process.env.REACT_NAV_LOGGING&&console.log('Applying Navigation Action for Initial URL:',parsedUrl);action=urlAction;startupState=Component.router.getStateForAction(urlAction,startupState);}}dispatchActions=function dispatchActions(){return _this2._actionEventSubscribers.forEach(function(subscriber){return subscriber({type:'action',action:action,state:_this2.state.nav,lastState:null});});};if(!(startupState===this.state.nav)){_context2.next=29;break;}dispatchActions();return _context2.abrupt(\"return\");case 29:this.setState({nav:startupState},function(){_reactNavigationIsHydratingState=false;dispatchActions();});case 30:case\"end\":return _context2.stop();}}},null,this);}},{key:\"componentDidCatch\",value:function componentDidCatch(e){if(_reactNavigationIsHydratingState){_reactNavigationIsHydratingState=false;console.warn('Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state..');this.dispatch(_core.NavigationActions.init());}else{throw e;}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._isMounted=false;_reactNative.Linking.removeEventListener('url',this._handleOpenURL);this.subs&&this.subs.remove();if(this._isStateful()){_statefulContainerCount--;}}},{key:\"render\",value:function render(){var _this3=this;var navigation=this.props.navigation;if(this._isStateful()){var navState=this.state.nav;if(!navState){return this._renderLoading();}if(!this._navigation||this._navigation.state!==navState){this._navigation=(0,_core.getNavigation)(Component.router,navState,this.dispatch,this._actionEventSubscribers,this._getScreenProps,function(){return _this3._navigation;});}navigation=this._navigation;}(0,_invariant.default)(navigation,'failed to get navigation');return _react.default.createElement(_core.NavigationProvider,{value:navigation},_react.default.createElement(Component,(0,_extends2.default)({},this.props,{navigation:navigation})));}}]);return NavigationContainer;}(_react.default.Component);NavigationContainer.router=Component.router;NavigationContainer.navigationOptions=null;return(0,_reactLifecyclesCompat.polyfill)(NavigationContainer);}","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/@react-navigation/native/dist/createAppContainer.js"],"names":["urlToPathAndParams","pathUtils","isStateful","props","navigation","validateProps","screenProps","containerProps","keys","Object","length","Error","join","_statefulContainerCount","_TESTING_ONLY_reset_container_count","_reactNavigationIsHydratingState","createNavigationContainer","Component","NavigationContainer","nextProps","subs","_actionEventSubscribers","Set","_handleOpenURL","url","enableURLHandling","uriPrefix","parsedUrl","path","params","action","router","getActionForPathAndParams","dispatch","_persistNavigationState","nav","persistenceKey","AsyncStorage","setItem","JSON","stringify","_navState","state","lastNavState","reducedState","getStateForAction","navState","dispatchActionEvents","forEach","subscriber","type","lastState","setState","_onNavigationStateChange","_getScreenProps","_initialAction","NavigationActions","init","_isStateful","BackHandler","addEventListener","_isMounted","remove","back","renderLoadingExperimental","prevNav","onNavigationStateChange","process","env","REACT_NAV_LOGGING","console","group","log","groupEnd","newState","__DEV__","detached","Platform","OS","warn","Linking","startupStateJSON","getItem","getInitialURL","startupState","parse","e","urlAction","dispatchActions","removeEventListener","_renderLoading","_navigation","React","navigationOptions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { AsyncStorage, Linking, Platform, BackHandler } from 'react-native';\nimport { polyfill } from 'react-lifecycles-compat';\n\nimport { NavigationActions, pathUtils, getNavigation, NavigationProvider } from '@react-navigation/core';\nimport invariant from './utils/invariant';\nimport docsUrl from './utils/docsUrl';\n\nconst { urlToPathAndParams } = pathUtils;\n\nfunction isStateful(props) {\n  return !props.navigation;\n}\n\nfunction validateProps(props) {\n  if (isStateful(props)) {\n    return;\n  }\n  // eslint-disable-next-line no-unused-vars\n  const { navigation, screenProps, ...containerProps } = props;\n\n  const keys = Object.keys(containerProps);\n\n  if (keys.length !== 0) {\n    throw new Error('This navigator has both navigation and container props, so it is ' + `unclear if it should own its own state. Remove props: \"${keys.join(', ')}\" ` + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');\n  }\n}\n\n// Track the number of stateful container instances. Warn if >0 and not using the\n// detached prop to explicitly acknowledge the behavior. We should deprecated implicit\n// stateful navigation containers in a future release and require a provider style pattern\n// instead in order to eliminate confusion entirely.\nlet _statefulContainerCount = 0;\nexport function _TESTING_ONLY_reset_container_count() {\n  _statefulContainerCount = 0;\n}\n\n// We keep a global flag to catch errors during the state persistence hydrating scenario.\n// The innermost navigator who catches the error will dispatch a new init action.\nlet _reactNavigationIsHydratingState = false;\n// Unfortunate to use global state here, but it seems necessesary for the time\n// being. There seems to be some problems with cascading componentDidCatch\n// handlers. Ideally the inner non-stateful navigator catches the error and\n// re-throws it, to be caught by the top-level stateful navigator.\n\n/**\n * Create an HOC that injects the navigation and manages the navigation state\n * in case it's not passed from above.\n * This allows to use e.g. the StackNavigator and TabNavigator as root-level\n * components.\n */\nexport default function createNavigationContainer(Component) {\n  class NavigationContainer extends React.Component {\n    subs = null;\n\n    static router = Component.router;\n    static navigationOptions = null;\n\n    static getDerivedStateFromProps(nextProps) {\n      validateProps(nextProps);\n      return null;\n    }\n\n    _actionEventSubscribers = new Set();\n\n    constructor(props) {\n      super(props);\n\n      validateProps(props);\n\n      this._initialAction = NavigationActions.init();\n\n      if (this._isStateful()) {\n        this.subs = BackHandler.addEventListener('hardwareBackPress', () => {\n          if (!this._isMounted) {\n            this.subs && this.subs.remove();\n          } else {\n            // dispatch returns true if the action results in a state change,\n            // and false otherwise. This maps well to what BackHandler expects\n            // from a callback -- true if handled, false if not handled\n            return this.dispatch(NavigationActions.back());\n          }\n        });\n      }\n\n      this.state = {\n        nav: this._isStateful() && !props.persistenceKey ? Component.router.getStateForAction(this._initialAction) : null\n      };\n    }\n\n    _renderLoading() {\n      return this.props.renderLoadingExperimental ? this.props.renderLoadingExperimental() : null;\n    }\n\n    _isStateful() {\n      return isStateful(this.props);\n    }\n\n    _validateProps(props) {\n      if (this._isStateful()) {\n        return;\n      }\n\n      // eslint-disable-next-line no-unused-vars\n      const { navigation, screenProps, ...containerProps } = props;\n\n      const keys = Object.keys(containerProps);\n\n      if (keys.length !== 0) {\n        throw new Error('This navigator has both navigation and container props, so it is ' + `unclear if it should own its own state. Remove props: \"${keys.join(', ')}\" ` + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');\n      }\n    }\n\n    _handleOpenURL = ({ url }) => {\n      const { enableURLHandling, uriPrefix } = this.props;\n      if (enableURLHandling === false) {\n        return;\n      }\n      const parsedUrl = urlToPathAndParams(url, uriPrefix);\n      if (parsedUrl) {\n        const { path, params } = parsedUrl;\n        const action = Component.router.getActionForPathAndParams(path, params);\n        if (action) {\n          this.dispatch(action);\n        }\n      }\n    };\n\n    _onNavigationStateChange(prevNav, nav, action) {\n      if (typeof this.props.onNavigationStateChange === 'undefined' && this._isStateful() && !!process.env.REACT_NAV_LOGGING) {\n        if (console.group) {\n          console.group('Navigation Dispatch: ');\n          console.log('Action: ', action);\n          console.log('New State: ', nav);\n          console.log('Last State: ', prevNav);\n          console.groupEnd();\n        } else {\n          console.log('Navigation Dispatch: ', {\n            action,\n            newState: nav,\n            lastState: prevNav\n          });\n        }\n        return;\n      }\n\n      if (typeof this.props.onNavigationStateChange === 'function') {\n        this.props.onNavigationStateChange(prevNav, nav, action);\n      }\n    }\n\n    componentDidUpdate() {\n      // Clear cached _navState every tick\n      if (this._navState === this.state.nav) {\n        this._navState = null;\n      }\n    }\n\n    async componentDidMount() {\n      this._isMounted = true;\n      if (!this._isStateful()) {\n        return;\n      }\n\n      if (__DEV__ && !this.props.detached) {\n        if (_statefulContainerCount > 0) {\n          // Temporarily only show this on iOS due to this issue:\n          // https://github.com/react-navigation/react-navigation/issues/4196#issuecomment-390827829\n          if (Platform.OS === 'ios') {\n            console.warn(`You should only render one navigator explicitly in your app, and other navigators should be rendered by including them in that navigator. Full details at: ${docsUrl('common-mistakes.html#explicitly-rendering-more-than-one-navigator')}`);\n          }\n        }\n      }\n      _statefulContainerCount++;\n      Linking.addEventListener('url', this._handleOpenURL);\n\n      // Pull out anything that can impact state\n      const { persistenceKey, uriPrefix, enableURLHandling } = this.props;\n      let parsedUrl = null;\n      let startupStateJSON = null;\n      if (enableURLHandling !== false) {\n        startupStateJSON = persistenceKey && (await AsyncStorage.getItem(persistenceKey));\n        const url = await Linking.getInitialURL();\n        parsedUrl = url && urlToPathAndParams(url, uriPrefix);\n      }\n\n      // Initialize state. This must be done *after* any async code\n      // so we don't end up with a different value for this.state.nav\n      // due to changes while async function was resolving\n      let action = this._initialAction;\n      let startupState = this.state.nav;\n      if (!startupState) {\n        !!process.env.REACT_NAV_LOGGING && console.log('Init new Navigation State');\n        startupState = Component.router.getStateForAction(action);\n      }\n\n      // Pull persisted state from AsyncStorage\n      if (startupStateJSON) {\n        try {\n          startupState = JSON.parse(startupStateJSON);\n          _reactNavigationIsHydratingState = true;\n        } catch (e) {\n          /* do nothing */\n        }\n      }\n\n      // Pull state out of URL\n      if (parsedUrl) {\n        const { path, params } = parsedUrl;\n        const urlAction = Component.router.getActionForPathAndParams(path, params);\n        if (urlAction) {\n          !!process.env.REACT_NAV_LOGGING && console.log('Applying Navigation Action for Initial URL:', parsedUrl);\n          action = urlAction;\n          startupState = Component.router.getStateForAction(urlAction, startupState);\n        }\n      }\n\n      const dispatchActions = () => this._actionEventSubscribers.forEach(subscriber => subscriber({\n        type: 'action',\n        action,\n        state: this.state.nav,\n        lastState: null\n      }));\n\n      if (startupState === this.state.nav) {\n        dispatchActions();\n        return;\n      }\n\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({ nav: startupState }, () => {\n        _reactNavigationIsHydratingState = false;\n        dispatchActions();\n      });\n    }\n\n    componentDidCatch(e) {\n      if (_reactNavigationIsHydratingState) {\n        _reactNavigationIsHydratingState = false;\n        console.warn('Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state..');\n        this.dispatch(NavigationActions.init());\n      } else {\n        throw e;\n      }\n    }\n\n    _persistNavigationState = async nav => {\n      const { persistenceKey } = this.props;\n      if (!persistenceKey) {\n        return;\n      }\n      await AsyncStorage.setItem(persistenceKey, JSON.stringify(nav));\n    };\n\n    componentWillUnmount() {\n      this._isMounted = false;\n      Linking.removeEventListener('url', this._handleOpenURL);\n      this.subs && this.subs.remove();\n\n      if (this._isStateful()) {\n        _statefulContainerCount--;\n      }\n    }\n\n    // Per-tick temporary storage for state.nav\n\n    dispatch = action => {\n      if (this.props.navigation) {\n        return this.props.navigation.dispatch(action);\n      }\n\n      // navState will have the most up-to-date value, because setState sometimes behaves asyncronously\n      this._navState = this._navState || this.state.nav;\n      const lastNavState = this._navState;\n      invariant(lastNavState, 'should be set in constructor if stateful');\n      const reducedState = Component.router.getStateForAction(action, lastNavState);\n      const navState = reducedState === null ? lastNavState : reducedState;\n\n      const dispatchActionEvents = () => {\n        this._actionEventSubscribers.forEach(subscriber => subscriber({\n          type: 'action',\n          action,\n          state: navState,\n          lastState: lastNavState\n        }));\n      };\n\n      if (reducedState === null) {\n        // The router will return null when action has been handled and the state hasn't changed.\n        // dispatch returns true when something has been handled.\n        dispatchActionEvents();\n        return true;\n      }\n\n      if (navState !== lastNavState) {\n        // Cache updates to state.nav during the tick to ensure that subsequent calls will not discard this change\n        this._navState = navState;\n        this.setState({ nav: navState }, () => {\n          this._onNavigationStateChange(lastNavState, navState, action);\n          dispatchActionEvents();\n          this._persistNavigationState(navState);\n        });\n        return true;\n      }\n\n      dispatchActionEvents();\n      return false;\n    };\n\n    _getScreenProps = () => this.props.screenProps;\n\n    render() {\n      let navigation = this.props.navigation;\n      if (this._isStateful()) {\n        const navState = this.state.nav;\n        if (!navState) {\n          return this._renderLoading();\n        }\n        if (!this._navigation || this._navigation.state !== navState) {\n          this._navigation = getNavigation(Component.router, navState, this.dispatch, this._actionEventSubscribers, this._getScreenProps, () => this._navigation);\n        }\n        navigation = this._navigation;\n      }\n      invariant(navigation, 'failed to get navigation');\n      return <NavigationProvider value={navigation}>\n          <Component {...this.props} navigation={navigation} />\n        </NavigationProvider>;\n    }\n  }\n\n  return polyfill(NavigationContainer);\n}"]},"metadata":{},"sourceType":"script"}