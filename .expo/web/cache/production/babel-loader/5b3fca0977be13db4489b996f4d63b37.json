{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _reactNative=require(\"react-native\");var CTKAdSettingsManager=_reactNative.NativeModules.CTKAdSettingsManager;var _default={get currentDeviceHash(){return CTKAdSettingsManager.currentDeviceHash;},addTestDevice:function addTestDevice(deviceHash){CTKAdSettingsManager.addTestDevice(deviceHash);},clearTestDevices:function clearTestDevices(){CTKAdSettingsManager.clearTestDevices();},setLogLevel:function setLogLevel(logLevel){CTKAdSettingsManager.setLogLevel(logLevel);},setIsChildDirected:function setIsChildDirected(isDirected){CTKAdSettingsManager.setIsChildDirected(isDirected);},setMediationService:function setMediationService(mediationService){CTKAdSettingsManager.setMediationService(mediationService);},setUrlPrefix:function setUrlPrefix(urlPrefix){CTKAdSettingsManager.setUrlPrefix(urlPrefix);}};exports.default=_default;","map":{"version":3,"sources":["../../src/facebook-ads/AdSettings.ts"],"names":[],"mappings":"gFAAA,yC,GAEQ,CAAA,oB,CAAyB,0B,CAAzB,oB,cAKO,CAIb,GAAI,CAAA,iBAAJ,EAAqB,CACnB,MAAO,CAAA,oBAAoB,CAAC,iBAA5B,CACD,CANY,CAWb,aAXa,wBAWC,UAXD,CAWmB,CAC9B,oBAAoB,CAAC,aAArB,CAAmC,UAAnC,EACD,CAbY,CAiBb,gBAjBa,4BAiBG,CACd,oBAAoB,CAAC,gBAArB,GACD,CAnBY,CAuBb,WAvBa,sBAuBD,QAvBC,CAuBmB,CAC9B,oBAAoB,CAAC,WAArB,CAAiC,QAAjC,EACD,CAzBY,CA6Bb,kBA7Ba,6BA6BM,UA7BN,CA6ByB,CACpC,oBAAoB,CAAC,kBAArB,CAAwC,UAAxC,EACD,CA/BY,CAmCb,mBAnCa,8BAmCO,gBAnCP,CAmC+B,CAC1C,oBAAoB,CAAC,mBAArB,CAAyC,gBAAzC,EACD,CArCY,CAyCb,YAzCa,uBAyCA,SAzCA,CAyCiB,CAC5B,oBAAoB,CAAC,YAArB,CAAkC,SAAlC,EACD,CA3CY,C","sourcesContent":["import { NativeModules } from 'react-native';\n\nconst { CTKAdSettingsManager } = NativeModules;\n\nexport type AdLogLevel = 'none' | 'debug' | 'verbose' | 'warning' | 'error' | 'notification';\n\n// TODO: rewrite the docblocks\nexport default {\n  /**\n   * Contains hash of the device id\n   */\n  get currentDeviceHash(): string {\n    return CTKAdSettingsManager.currentDeviceHash;\n  },\n\n  /**\n   * Registers given device with `deviceHash` to receive test Facebook ads.\n   */\n  addTestDevice(deviceHash: string): void {\n    CTKAdSettingsManager.addTestDevice(deviceHash);\n  },\n  /**\n   * Clears previously set test devices\n   */\n  clearTestDevices(): void {\n    CTKAdSettingsManager.clearTestDevices();\n  },\n  /**\n   * Sets current SDK log level\n   */\n  setLogLevel(logLevel: AdLogLevel): void {\n    CTKAdSettingsManager.setLogLevel(logLevel);\n  },\n  /**\n   * Specifies whether ads are treated as child-directed\n   */\n  setIsChildDirected(isDirected: boolean): void {\n    CTKAdSettingsManager.setIsChildDirected(isDirected);\n  },\n  /**\n   * Sets mediation service name\n   */\n  setMediationService(mediationService: string): void {\n    CTKAdSettingsManager.setMediationService(mediationService);\n  },\n  /**\n   * Sets URL prefix\n   */\n  setUrlPrefix(urlPrefix: string): void {\n    CTKAdSettingsManager.setUrlPrefix(urlPrefix);\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}