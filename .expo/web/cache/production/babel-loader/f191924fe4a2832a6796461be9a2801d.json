{"ast":null,"code":"'use strict';var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _possibleConstructorReturn=require(\"@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"@babel/runtime/helpers/getPrototypeOf\");var _inherits=require(\"@babel/runtime/helpers/inherits\");var Blob=require(\"./Blob\");var invariant=require('fbjs/lib/invariant');var File=function(_Blob){_inherits(File,_Blob);function File(parts,name,options){var _this;_classCallCheck(this,File);invariant(parts!=null&&name!=null,'Failed to construct `File`: Must pass both `parts` and `name` arguments.');_this=_possibleConstructorReturn(this,_getPrototypeOf(File).call(this,parts,options));_this.data.name=name;return _this;}_createClass(File,[{key:\"name\",get:function get(){invariant(this.data.name!=null,'Files must have a name set.');return this.data.name;}},{key:\"lastModified\",get:function get(){return this.data.lastModified||0;}}]);return File;}(Blob);module.exports=File;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native/Libraries/Blob/File.js"],"names":["Blob","require","invariant","File","parts","name","options","data","lastModified","module","exports"],"mappings":"AASA,a,6VAEA,GAAMA,CAAAA,IAAI,CAAGC,OAAO,UAApB,CAEA,GAAMC,CAAAA,SAAS,CAAGD,OAAO,CAAC,oBAAD,CAAzB,C,GAOME,CAAAA,I,uCAIJ,cACEC,KADF,CAEEC,IAFF,CAGEC,OAHF,CAIE,sCACAJ,SAAS,CACPE,KAAK,EAAI,IAAT,EAAiBC,IAAI,EAAI,IADlB,CAEP,0EAFO,CAAT,CAKA,sEAAMD,KAAN,CAAaE,OAAb,GACA,MAAKC,IAAL,CAAUF,IAAV,CAAiBA,IAAjB,CAPA,aAQD,C,iDAKkB,CACjBH,SAAS,CAAC,KAAKK,IAAL,CAAUF,IAAV,EAAkB,IAAnB,CAAyB,6BAAzB,CAAT,CACA,MAAO,MAAKE,IAAL,CAAUF,IAAjB,CACD,C,wCAK0B,CACzB,MAAO,MAAKE,IAAL,CAAUC,YAAV,EAA0B,CAAjC,CACD,C,kBA/BgBR,I,EAkCnBS,MAAM,CAACC,OAAP,CAAiBP,IAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst Blob = require('./Blob');\n\nconst invariant = require('fbjs/lib/invariant');\n\nimport type {BlobOptions} from './BlobTypes';\n\n/**\n * The File interface provides information about files.\n */\nclass File extends Blob {\n  /**\n   * Constructor for JS consumers.\n   */\n  constructor(\n    parts: Array<Blob | string>,\n    name: string,\n    options?: BlobOptions,\n  ) {\n    invariant(\n      parts != null && name != null,\n      'Failed to construct `File`: Must pass both `parts` and `name` arguments.',\n    );\n\n    super(parts, options);\n    this.data.name = name;\n  }\n\n  /**\n   * Name of the file.\n   */\n  get name(): string {\n    invariant(this.data.name != null, 'Files must have a name set.');\n    return this.data.name;\n  }\n\n  /*\n   * Last modified time of the file.\n   */\n  get lastModified(): number {\n    return this.data.lastModified || 0;\n  }\n}\n\nmodule.exports = File;\n"]},"metadata":{},"sourceType":"script"}