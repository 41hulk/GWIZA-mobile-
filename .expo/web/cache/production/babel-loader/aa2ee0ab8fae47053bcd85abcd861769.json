{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.ReactNativeModal=exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _reactNativeAnimatable=require(\"react-native-animatable\");var ANIMATION_DEFINITIONS=_interopRequireWildcard(require(\"./animations\"));var _indexStyle=_interopRequireDefault(require(\"./index.style.js\"));(0,_reactNativeAnimatable.initializeRegistryWithDefinitions)(ANIMATION_DEFINITIONS);var makeAnimation=function makeAnimation(name,obj){(0,_reactNativeAnimatable.registerAnimation)(name,(0,_reactNativeAnimatable.createAnimation)(obj));};var isObject=function isObject(obj){return obj!==null&&typeof obj===\"object\";};var ReactNativeModal=function(_Component){(0,_inherits2.default)(ReactNativeModal,_Component);function ReactNativeModal(_props){var _this;(0,_classCallCheck2.default)(this,ReactNativeModal);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(ReactNativeModal).call(this,_props));_this.state={showContent:true,isVisible:false,deviceWidth:_reactNative.Dimensions.get(\"window\").width,deviceHeight:_reactNative.Dimensions.get(\"window\").height,isSwipeable:_this.props.swipeDirection?true:false,pan:null};_this.transitionLock=null;_this.inSwipeClosingState=false;_this.buildPanResponder=function(){var animEvt=null;if(_this.props.swipeDirection===\"right\"||_this.props.swipeDirection===\"left\"){animEvt=_reactNative.Animated.event([null,{dx:_this.state.pan.x}]);}else{animEvt=_reactNative.Animated.event([null,{dy:_this.state.pan.y}]);}_this.panResponder=_reactNative.PanResponder.create({onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(evt,gestureState){return Math.abs(gestureState.dx)>=4||Math.abs(gestureState.dy)>=4;},onStartShouldSetPanResponder:function onStartShouldSetPanResponder(){if(_this.props.scrollTo){if(_this.props.scrollOffset>0){return false;}}return true;},onPanResponderMove:function onPanResponderMove(evt,gestureState){var deviceWidth=_this.props.deviceWidth||_this.state.deviceWidth;var accDistance=_this.getAccDistancePerDirection(gestureState);var newOpacityFactor=1-accDistance/deviceWidth;if(_this.isSwipeDirectionAllowed(gestureState)){_this.backdropRef&&_this.backdropRef.transitionTo({opacity:_this.props.backdropOpacity*newOpacityFactor});animEvt(evt,gestureState);}else{if(_this.props.scrollTo){var offsetY=-gestureState.dy;if(offsetY>_this.props.scrollOffsetMax){offsetY-=(offsetY-_this.props.scrollOffsetMax)/2;}_this.props.scrollTo({y:offsetY,animated:false});}}},onPanResponderRelease:function onPanResponderRelease(evt,gestureState){var accDistance=_this.getAccDistancePerDirection(gestureState);if(accDistance>_this.props.swipeThreshold){if(_this.props.onSwipe){_this.inSwipeClosingState=true;_this.props.onSwipe();return;}}if(_this.backdropRef){_this.backdropRef.transitionTo({opacity:_this.props.backdropOpacity},_this.props.backdropTransitionInTiming);}_reactNative.Animated.spring(_this.state.pan,{toValue:{x:0,y:0},bounciness:0}).start();if(_this.props.scrollOffset>_this.props.scrollOffsetMax){_this.props.scrollTo({y:_this.props.scrollOffsetMax,animated:true});}}});};_this.getAccDistancePerDirection=function(gestureState){switch(_this.props.swipeDirection){case\"up\":return-gestureState.dy;case\"down\":return gestureState.dy;case\"right\":return gestureState.dx;case\"left\":return-gestureState.dx;default:return 0;}};_this.isSwipeDirectionAllowed=function(_ref){var dy=_ref.dy,dx=_ref.dx;var draggedDown=dy>0;var draggedUp=dy<0;var draggedLeft=dx<0;var draggedRight=dx>0;if(_this.props.swipeDirection===\"up\"&&draggedUp){return true;}else if(_this.props.swipeDirection===\"down\"&&draggedDown){return true;}else if(_this.props.swipeDirection===\"right\"&&draggedRight){return true;}else if(_this.props.swipeDirection===\"left\"&&draggedLeft){return true;}return false;};_this.buildAnimations=function(props){var animationIn=props.animationIn;var animationOut=props.animationOut;if(isObject(animationIn)){var animationName=JSON.stringify(animationIn);makeAnimation(animationName,animationIn);animationIn=animationName;}if(isObject(animationOut)){var _animationName=JSON.stringify(animationOut);makeAnimation(_animationName,animationOut);animationOut=_animationName;}_this.animationIn=animationIn;_this.animationOut=animationOut;};_this.handleDimensionsUpdate=function(dimensionsUpdate){if(!_this.props.deviceHeight&&!_this.props.deviceWidth){var deviceWidth=_reactNative.Dimensions.get(\"window\").width;var deviceHeight=_reactNative.Dimensions.get(\"window\").height;if(deviceWidth!==_this.state.deviceWidth||deviceHeight!==_this.state.deviceHeight){_this.setState({deviceWidth:deviceWidth,deviceHeight:deviceHeight});}}};_this.open=function(){if(_this.transitionLock)return;_this.transitionLock=true;if(_this.backdropRef){_this.backdropRef.transitionTo({opacity:_this.props.backdropOpacity},_this.props.backdropTransitionInTiming);}if(_this.state.isSwipeable){_this.state.pan.setValue({x:0,y:0});}if(_this.contentRef){_this.contentRef[_this.animationIn](_this.props.animationInTiming).then(function(){_this.transitionLock=false;if(!_this.props.isVisible){_this.close();}else{_this.props.onModalShow();}});}};_this.close=function(){if(_this.transitionLock)return;_this.transitionLock=true;if(_this.backdropRef){_this.backdropRef.transitionTo({opacity:0},_this.props.backdropTransitionOutTiming);}var animationOut=_this.animationOut;if(_this.inSwipeClosingState){_this.inSwipeClosingState=false;if(_this.props.swipeDirection===\"up\"){animationOut=\"slideOutUp\";}else if(_this.props.swipeDirection===\"down\"){animationOut=\"slideOutDown\";}else if(_this.props.swipeDirection===\"right\"){animationOut=\"slideOutRight\";}else if(_this.props.swipeDirection===\"left\"){animationOut=\"slideOutLeft\";}}if(_this.contentRef){_this.contentRef[animationOut](_this.props.animationOutTiming).then(function(){_this.transitionLock=false;if(_this.props.isVisible){_this.open();}else{_this.setState({showContent:false},function(){_this.setState({isVisible:false});});_this.props.onModalHide();}});}};_this.buildAnimations(_props);if(_this.state.isSwipeable){_this.state=(0,_objectSpread2.default)({},_this.state,{pan:new _reactNative.Animated.ValueXY()});_this.buildPanResponder();}if(_this.props.isVisible){_this.state=(0,_objectSpread2.default)({},_this.state,{isVisible:true,showContent:true});}return _this;}(0,_createClass2.default)(ReactNativeModal,[{key:\"UNSAFE_componentWillReceiveProps\",value:function UNSAFE_componentWillReceiveProps(nextProps){if(!this.state.isVisible&&nextProps.isVisible){this.setState({isVisible:true,showContent:true});}if(this.props.animationIn!==nextProps.animationIn||this.props.animationOut!==nextProps.animationOut){this.buildAnimations(nextProps);}if(this.props.backdropOpacity!==nextProps.backdropOpacity&&this.backdropRef){this.backdropRef.transitionTo({opacity:nextProps.backdropOpacity},this.props.backdropTransitionInTiming);}}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.state.isVisible){this.open();}_reactNative.DeviceEventEmitter.addListener(\"didUpdateDimensions\",this.handleDimensionsUpdate);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){_reactNative.DeviceEventEmitter.removeListener(\"didUpdateDimensions\",this.handleDimensionsUpdate);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(this.props.isVisible&&!prevProps.isVisible){this.open();}else if(!this.props.isVisible&&prevProps.isVisible){this.close();}}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,animationIn=_this$props.animationIn,animationInTiming=_this$props.animationInTiming,animationOut=_this$props.animationOut,animationOutTiming=_this$props.animationOutTiming,avoidKeyboard=_this$props.avoidKeyboard,backdropColor=_this$props.backdropColor,backdropOpacity=_this$props.backdropOpacity,backdropTransitionInTiming=_this$props.backdropTransitionInTiming,backdropTransitionOutTiming=_this$props.backdropTransitionOutTiming,children=_this$props.children,deviceHeightProp=_this$props.deviceHeight,deviceWidthProp=_this$props.deviceWidth,isVisible=_this$props.isVisible,onModalShow=_this$props.onModalShow,onBackdropPress=_this$props.onBackdropPress,onBackButtonPress=_this$props.onBackButtonPress,useNativeDriver=_this$props.useNativeDriver,style=_this$props.style,otherProps=(0,_objectWithoutProperties2.default)(_this$props,[\"animationIn\",\"animationInTiming\",\"animationOut\",\"animationOutTiming\",\"avoidKeyboard\",\"backdropColor\",\"backdropOpacity\",\"backdropTransitionInTiming\",\"backdropTransitionOutTiming\",\"children\",\"deviceHeight\",\"deviceWidth\",\"isVisible\",\"onModalShow\",\"onBackdropPress\",\"onBackButtonPress\",\"useNativeDriver\",\"style\"]);var deviceWidth=deviceWidthProp||this.state.deviceWidth;var deviceHeight=deviceHeightProp||this.state.deviceHeight;var computedStyle=[{margin:deviceWidth*0.05,transform:[{translateY:0}]},_indexStyle.default.content,style];var panHandlers={};var panPosition={};if(this.state.isSwipeable){panHandlers=(0,_objectSpread2.default)({},this.panResponder.panHandlers);panPosition=this.state.pan.getLayout();}var _children=this.props.hideModalContentWhileAnimating&&this.props.useNativeDriver&&!this.state.showContent?_react.default.createElement(_reactNativeAnimatable.View,null):children;var containerView=_react.default.createElement(_reactNativeAnimatable.View,(0,_extends2.default)({},panHandlers,{ref:function ref(_ref2){return _this2.contentRef=_ref2;},style:[panPosition,computedStyle],pointerEvents:\"box-none\",useNativeDriver:useNativeDriver},otherProps),_children);return _react.default.createElement(_reactNative.Modal,(0,_extends2.default)({transparent:true,animationType:\"none\",visible:this.state.isVisible,onRequestClose:onBackButtonPress},otherProps),_react.default.createElement(_reactNative.TouchableWithoutFeedback,{onPress:onBackdropPress},_react.default.createElement(_reactNativeAnimatable.View,{ref:function ref(_ref3){return _this2.backdropRef=_ref3;},useNativeDriver:useNativeDriver,style:[_indexStyle.default.backdrop,{backgroundColor:this.state.showContent?backdropColor:\"transparent\",width:deviceWidth,height:deviceHeight}]})),avoidKeyboard&&_react.default.createElement(_reactNative.KeyboardAvoidingView,{behavior:_reactNative.Platform.OS===\"ios\"?\"padding\":null,pointerEvents:\"box-none\",style:computedStyle.concat([{margin:0}])},containerView),!avoidKeyboard&&containerView);}}]);return ReactNativeModal;}(_react.Component);exports.ReactNativeModal=ReactNativeModal;ReactNativeModal.propTypes={animationIn:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object]),animationInTiming:_propTypes.default.number,animationOut:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object]),animationOutTiming:_propTypes.default.number,avoidKeyboard:_propTypes.default.bool,backdropColor:_propTypes.default.string,backdropOpacity:_propTypes.default.number,backdropTransitionInTiming:_propTypes.default.number,backdropTransitionOutTiming:_propTypes.default.number,children:_propTypes.default.node.isRequired,deviceHeight:_propTypes.default.number,deviceWidth:_propTypes.default.number,isVisible:_propTypes.default.bool.isRequired,hideModalContentWhileAnimating:_propTypes.default.bool,onModalShow:_propTypes.default.func,onModalHide:_propTypes.default.func,onBackButtonPress:_propTypes.default.func,onBackdropPress:_propTypes.default.func,onSwipe:_propTypes.default.func,swipeThreshold:_propTypes.default.number,swipeDirection:_propTypes.default.oneOf([\"up\",\"down\",\"left\",\"right\"]),useNativeDriver:_propTypes.default.bool,style:_propTypes.default.any,scrollTo:_propTypes.default.func,scrollOffset:_propTypes.default.number,scrollOffsetMax:_propTypes.default.number,supportedOrientations:_propTypes.default.arrayOf(_propTypes.default.oneOf([\"portrait\",\"portrait-upside-down\",\"landscape\",\"landscape-left\",\"landscape-right\"]))};ReactNativeModal.defaultProps={animationIn:\"slideInUp\",animationInTiming:300,animationOut:\"slideOutDown\",animationOutTiming:300,avoidKeyboard:false,backdropColor:\"black\",backdropOpacity:0.7,backdropTransitionInTiming:300,backdropTransitionOutTiming:300,onModalShow:function onModalShow(){return null;},deviceHeight:null,deviceWidth:null,onModalHide:function onModalHide(){return null;},isVisible:false,hideModalContentWhileAnimating:false,onBackdropPress:function onBackdropPress(){return null;},onBackButtonPress:function onBackButtonPress(){return null;},swipeThreshold:100,useNativeDriver:false,scrollTo:null,scrollOffset:0,scrollOffsetMax:0,supportedOrientations:[\"portrait\",\"landscape\"]};var _default=ReactNativeModal;exports.default=_default;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native-modal/src/index.js"],"names":["ANIMATION_DEFINITIONS","makeAnimation","name","obj","isObject","ReactNativeModal","props","state","showContent","isVisible","deviceWidth","Dimensions","get","width","deviceHeight","height","isSwipeable","swipeDirection","pan","transitionLock","inSwipeClosingState","buildPanResponder","animEvt","Animated","event","dx","x","dy","y","panResponder","PanResponder","create","onMoveShouldSetPanResponder","evt","gestureState","Math","abs","onStartShouldSetPanResponder","scrollTo","scrollOffset","onPanResponderMove","accDistance","getAccDistancePerDirection","newOpacityFactor","isSwipeDirectionAllowed","backdropRef","transitionTo","opacity","backdropOpacity","offsetY","scrollOffsetMax","animated","onPanResponderRelease","swipeThreshold","onSwipe","backdropTransitionInTiming","spring","toValue","bounciness","start","draggedDown","draggedUp","draggedLeft","draggedRight","buildAnimations","animationIn","animationOut","animationName","JSON","stringify","handleDimensionsUpdate","dimensionsUpdate","setState","open","setValue","contentRef","animationInTiming","then","close","onModalShow","backdropTransitionOutTiming","animationOutTiming","onModalHide","ValueXY","nextProps","DeviceEventEmitter","addListener","removeListener","prevProps","prevState","avoidKeyboard","backdropColor","children","deviceHeightProp","deviceWidthProp","onBackdropPress","onBackButtonPress","useNativeDriver","style","otherProps","computedStyle","margin","transform","translateY","styles","content","panHandlers","panPosition","getLayout","_children","hideModalContentWhileAnimating","containerView","ref","backdrop","backgroundColor","Platform","OS","concat","Component","propTypes","PropTypes","oneOfType","string","object","number","bool","node","isRequired","func","oneOf","any","supportedOrientations","arrayOf","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Dimensions,\n  Modal,\n  DeviceEventEmitter,\n  TouchableWithoutFeedback,\n  KeyboardAvoidingView,\n  Platform,\n  PanResponder,\n  Animated\n} from \"react-native\";\nimport PropTypes from \"prop-types\";\nimport {\n  View,\n  initializeRegistryWithDefinitions,\n  registerAnimation,\n  createAnimation\n} from \"react-native-animatable\";\nimport * as ANIMATION_DEFINITIONS from \"./animations\";\n\nimport styles from \"./index.style.js\";\n\n// Override default animations\ninitializeRegistryWithDefinitions(ANIMATION_DEFINITIONS);\n\n// Utility for creating custom animations\nconst makeAnimation = (name, obj) => {\n  registerAnimation(name, createAnimation(obj));\n};\n\nconst isObject = obj => {\n  return obj !== null && typeof obj === \"object\";\n};\n\nclass ReactNativeModal extends Component {\n  static propTypes = {\n    animationIn: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    animationInTiming: PropTypes.number,\n    animationOut: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    animationOutTiming: PropTypes.number,\n    avoidKeyboard: PropTypes.bool,\n    backdropColor: PropTypes.string,\n    backdropOpacity: PropTypes.number,\n    backdropTransitionInTiming: PropTypes.number,\n    backdropTransitionOutTiming: PropTypes.number,\n    children: PropTypes.node.isRequired,\n    deviceHeight: PropTypes.number,\n    deviceWidth: PropTypes.number,\n    isVisible: PropTypes.bool.isRequired,\n    hideModalContentWhileAnimating: PropTypes.bool,\n    onModalShow: PropTypes.func,\n    onModalHide: PropTypes.func,\n    onBackButtonPress: PropTypes.func,\n    onBackdropPress: PropTypes.func,\n    onSwipe: PropTypes.func,\n    swipeThreshold: PropTypes.number,\n    swipeDirection: PropTypes.oneOf([\"up\", \"down\", \"left\", \"right\"]),\n    useNativeDriver: PropTypes.bool,\n    style: PropTypes.any,\n    scrollTo: PropTypes.func,\n    scrollOffset: PropTypes.number,\n    scrollOffsetMax: PropTypes.number,\n    supportedOrientations: PropTypes.arrayOf(\n      PropTypes.oneOf([\n        \"portrait\",\n        \"portrait-upside-down\",\n        \"landscape\",\n        \"landscape-left\",\n        \"landscape-right\"\n      ])\n    )\n  };\n\n  static defaultProps = {\n    animationIn: \"slideInUp\",\n    animationInTiming: 300,\n    animationOut: \"slideOutDown\",\n    animationOutTiming: 300,\n    avoidKeyboard: false,\n    backdropColor: \"black\",\n    backdropOpacity: 0.7,\n    backdropTransitionInTiming: 300,\n    backdropTransitionOutTiming: 300,\n    onModalShow: () => null,\n    deviceHeight: null,\n    deviceWidth: null,\n    onModalHide: () => null,\n    isVisible: false,\n    hideModalContentWhileAnimating: false,\n    onBackdropPress: () => null,\n    onBackButtonPress: () => null,\n    swipeThreshold: 100,\n    useNativeDriver: false,\n    scrollTo: null,\n    scrollOffset: 0,\n    scrollOffsetMax: 0,\n    supportedOrientations: [\"portrait\", \"landscape\"]\n  };\n\n  // We use an internal state for keeping track of the modal visibility: this allows us to keep\n  // the modal visibile during the exit animation, even if the user has already change the\n  // isVisible prop to false.\n  // We store in the state the device width and height so that we can update the modal on\n  // device rotation.\n  state = {\n    showContent: true,\n    isVisible: false,\n    deviceWidth: Dimensions.get(\"window\").width,\n    deviceHeight: Dimensions.get(\"window\").height,\n    isSwipeable: this.props.swipeDirection ? true : false,\n    pan: null\n  };\n\n  transitionLock = null;\n  inSwipeClosingState = false;\n\n  constructor(props) {\n    super(props);\n    this.buildAnimations(props);\n    if (this.state.isSwipeable) {\n      this.state = { ...this.state, pan: new Animated.ValueXY() };\n      this.buildPanResponder();\n    }\n    if (this.props.isVisible) {\n      this.state = {\n        ...this.state,\n        isVisible: true,\n        showContent: true\n      };\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!this.state.isVisible && nextProps.isVisible) {\n      this.setState({ isVisible: true, showContent: true });\n    }\n    if (\n      this.props.animationIn !== nextProps.animationIn ||\n      this.props.animationOut !== nextProps.animationOut\n    ) {\n      this.buildAnimations(nextProps);\n    }\n    if (\n      this.props.backdropOpacity !== nextProps.backdropOpacity &&\n      this.backdropRef\n    ) {\n      this.backdropRef.transitionTo(\n        { opacity: nextProps.backdropOpacity },\n        this.props.backdropTransitionInTiming\n      );\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.isVisible) {\n      this.open();\n    }\n    DeviceEventEmitter.addListener(\n      \"didUpdateDimensions\",\n      this.handleDimensionsUpdate\n    );\n  }\n\n  componentWillUnmount() {\n    DeviceEventEmitter.removeListener(\n      \"didUpdateDimensions\",\n      this.handleDimensionsUpdate\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // On modal open request, we slide the view up and fade in the backdrop\n    if (this.props.isVisible && !prevProps.isVisible) {\n      this.open();\n    } else if (!this.props.isVisible && prevProps.isVisible) {\n      // On modal close request, we slide the view down and fade out the backdrop\n      this.close();\n    }\n  }\n\n  buildPanResponder = () => {\n    let animEvt = null;\n\n    if (\n      this.props.swipeDirection === \"right\" ||\n      this.props.swipeDirection === \"left\"\n    ) {\n      animEvt = Animated.event([null, { dx: this.state.pan.x }]);\n    } else {\n      animEvt = Animated.event([null, { dy: this.state.pan.y }]);\n    }\n\n    this.panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: (evt, gestureState) => {\n        // The number \"4\" is just a good tradeoff to make the panResponder\n        // work correctly even when the modal has touchable buttons.\n        // For reference:\n        // https://github.com/react-native-community/react-native-modal/pull/197\n        return Math.abs(gestureState.dx) >= 4 || Math.abs(gestureState.dy) >= 4;\n      },\n      onStartShouldSetPanResponder: () => {\n        if (this.props.scrollTo) {\n          if (this.props.scrollOffset > 0) {\n            return false; // user needs to be able to scroll content back up\n          }\n        }\n        return true;\n      },\n      onPanResponderMove: (evt, gestureState) => {\n        // Dim the background while swiping the modal\n        const deviceWidth = this.props.deviceWidth || this.state.deviceWidth;\n        const accDistance = this.getAccDistancePerDirection(gestureState);\n        const newOpacityFactor = 1 - accDistance / deviceWidth;\n        if (this.isSwipeDirectionAllowed(gestureState)) {\n          this.backdropRef &&\n            this.backdropRef.transitionTo({\n              opacity: this.props.backdropOpacity * newOpacityFactor\n            });\n          animEvt(evt, gestureState);\n        } else {\n          if (this.props.scrollTo) {\n            let offsetY = -gestureState.dy;\n            if (offsetY > this.props.scrollOffsetMax) {\n              offsetY -= (offsetY - this.props.scrollOffsetMax) / 2;\n            }\n            this.props.scrollTo({ y: offsetY, animated: false });\n          }\n        }\n      },\n      onPanResponderRelease: (evt, gestureState) => {\n        // Call the onSwipe prop if the threshold has been exceeded\n        const accDistance = this.getAccDistancePerDirection(gestureState);\n        if (accDistance > this.props.swipeThreshold) {\n          if (this.props.onSwipe) {\n            this.inSwipeClosingState = true;\n            this.props.onSwipe();\n            return;\n          }\n        }\n        //Reset backdrop opacity and modal position\n        if (this.backdropRef) {\n          this.backdropRef.transitionTo(\n            { opacity: this.props.backdropOpacity },\n            this.props.backdropTransitionInTiming\n          );\n        }\n        Animated.spring(this.state.pan, {\n          toValue: { x: 0, y: 0 },\n          bounciness: 0\n        }).start();\n        if (this.props.scrollOffset > this.props.scrollOffsetMax) {\n          this.props.scrollTo({\n            y: this.props.scrollOffsetMax,\n            animated: true\n          });\n        }\n      }\n    });\n  };\n\n  getAccDistancePerDirection = gestureState => {\n    switch (this.props.swipeDirection) {\n      case \"up\":\n        return -gestureState.dy;\n      case \"down\":\n        return gestureState.dy;\n      case \"right\":\n        return gestureState.dx;\n      case \"left\":\n        return -gestureState.dx;\n      default:\n        return 0;\n    }\n  };\n\n  isSwipeDirectionAllowed = ({ dy, dx }) => {\n    const draggedDown = dy > 0;\n    const draggedUp = dy < 0;\n    const draggedLeft = dx < 0;\n    const draggedRight = dx > 0;\n\n    if (this.props.swipeDirection === \"up\" && draggedUp) {\n      return true;\n    } else if (this.props.swipeDirection === \"down\" && draggedDown) {\n      return true;\n    } else if (this.props.swipeDirection === \"right\" && draggedRight) {\n      return true;\n    } else if (this.props.swipeDirection === \"left\" && draggedLeft) {\n      return true;\n    }\n    return false;\n  };\n\n  // User can define custom react-native-animatable animations, see PR #72\n  buildAnimations = props => {\n    let animationIn = props.animationIn;\n    let animationOut = props.animationOut;\n\n    if (isObject(animationIn)) {\n      const animationName = JSON.stringify(animationIn);\n      makeAnimation(animationName, animationIn);\n      animationIn = animationName;\n    }\n\n    if (isObject(animationOut)) {\n      const animationName = JSON.stringify(animationOut);\n      makeAnimation(animationName, animationOut);\n      animationOut = animationName;\n    }\n\n    this.animationIn = animationIn;\n    this.animationOut = animationOut;\n  };\n\n  handleDimensionsUpdate = dimensionsUpdate => {\n    if (!this.props.deviceHeight && !this.props.deviceWidth) {\n      // Here we update the device dimensions in the state if the layout changed\n      // (triggering a render)\n      const deviceWidth = Dimensions.get(\"window\").width;\n      const deviceHeight = Dimensions.get(\"window\").height;\n      if (\n        deviceWidth !== this.state.deviceWidth ||\n        deviceHeight !== this.state.deviceHeight\n      ) {\n        this.setState({ deviceWidth, deviceHeight });\n      }\n    }\n  };\n\n  open = () => {\n    if (this.transitionLock) return;\n    this.transitionLock = true;\n    if (this.backdropRef) {\n      this.backdropRef.transitionTo(\n        { opacity: this.props.backdropOpacity },\n        this.props.backdropTransitionInTiming\n      );\n    }\n\n    // This is for reset the pan position, if not modal get stuck\n    // at the last release position when you try to open it.\n    // Could certainly be improve - no idea for the moment.\n    if (this.state.isSwipeable) {\n      this.state.pan.setValue({ x: 0, y: 0 });\n    }\n\n    if (this.contentRef) {\n      this.contentRef[this.animationIn](this.props.animationInTiming).then(\n        () => {\n          this.transitionLock = false;\n          if (!this.props.isVisible) {\n            this.close();\n          } else {\n            this.props.onModalShow();\n          }\n        }\n      );\n    }\n  };\n\n  close = () => {\n    if (this.transitionLock) return;\n    this.transitionLock = true;\n    if (this.backdropRef) {\n      this.backdropRef.transitionTo(\n        { opacity: 0 },\n        this.props.backdropTransitionOutTiming\n      );\n    }\n\n    let animationOut = this.animationOut;\n\n    if (this.inSwipeClosingState) {\n      this.inSwipeClosingState = false;\n      if (this.props.swipeDirection === \"up\") {\n        animationOut = \"slideOutUp\";\n      } else if (this.props.swipeDirection === \"down\") {\n        animationOut = \"slideOutDown\";\n      } else if (this.props.swipeDirection === \"right\") {\n        animationOut = \"slideOutRight\";\n      } else if (this.props.swipeDirection === \"left\") {\n        animationOut = \"slideOutLeft\";\n      }\n    }\n\n    if (this.contentRef) {\n      this.contentRef[animationOut](this.props.animationOutTiming).then(() => {\n        this.transitionLock = false;\n        if (this.props.isVisible) {\n          this.open();\n        } else {\n          this.setState(\n            {\n              showContent: false\n            },\n            () => {\n              this.setState({\n                isVisible: false\n              });\n            }\n          );\n          this.props.onModalHide();\n        }\n      });\n    }\n  };\n\n  render() {\n    const {\n      animationIn,\n      animationInTiming,\n      animationOut,\n      animationOutTiming,\n      avoidKeyboard,\n      backdropColor,\n      backdropOpacity,\n      backdropTransitionInTiming,\n      backdropTransitionOutTiming,\n      children,\n      deviceHeight: deviceHeightProp,\n      deviceWidth: deviceWidthProp,\n      isVisible,\n      onModalShow,\n      onBackdropPress,\n      onBackButtonPress,\n      useNativeDriver,\n      style,\n      ...otherProps\n    } = this.props;\n    const deviceWidth = deviceWidthProp || this.state.deviceWidth;\n    const deviceHeight = deviceHeightProp || this.state.deviceHeight;\n\n    const computedStyle = [\n      { margin: deviceWidth * 0.05, transform: [{ translateY: 0 }] },\n      styles.content,\n      style\n    ];\n\n    let panHandlers = {};\n    let panPosition = {};\n    if (this.state.isSwipeable) {\n      panHandlers = { ...this.panResponder.panHandlers };\n      panPosition = this.state.pan.getLayout();\n    }\n\n    const _children =\n      this.props.hideModalContentWhileAnimating &&\n      this.props.useNativeDriver &&\n      !this.state.showContent ? (\n        <View />\n      ) : (\n        children\n      );\n    const containerView = (\n      <View\n        {...panHandlers}\n        ref={ref => (this.contentRef = ref)}\n        style={[panPosition, computedStyle]}\n        pointerEvents=\"box-none\"\n        useNativeDriver={useNativeDriver}\n        {...otherProps}\n      >\n        {_children}\n      </View>\n    );\n\n    return (\n      <Modal\n        transparent={true}\n        animationType={\"none\"}\n        visible={this.state.isVisible}\n        onRequestClose={onBackButtonPress}\n        {...otherProps}\n      >\n        <TouchableWithoutFeedback onPress={onBackdropPress}>\n          <View\n            ref={ref => (this.backdropRef = ref)}\n            useNativeDriver={useNativeDriver}\n            style={[\n              styles.backdrop,\n              {\n                backgroundColor: this.state.showContent\n                  ? backdropColor\n                  : \"transparent\",\n                width: deviceWidth,\n                height: deviceHeight\n              }\n            ]}\n          />\n        </TouchableWithoutFeedback>\n\n        {avoidKeyboard && (\n          <KeyboardAvoidingView\n            behavior={Platform.OS === \"ios\" ? \"padding\" : null}\n            pointerEvents=\"box-none\"\n            style={computedStyle.concat([{ margin: 0 }])}\n          >\n            {containerView}\n          </KeyboardAvoidingView>\n        )}\n\n        {!avoidKeyboard && containerView}\n      </Modal>\n    );\n  }\n}\n\nexport default ReactNativeModal;\nexport { ReactNativeModal };\n"]},"metadata":{},"sourceType":"script"}