{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireDefault(require(\"react\"));var _core=require(\"@react-navigation/core\");var _StackViewLayout=_interopRequireDefault(require(\"./StackViewLayout\"));var _Transitioner=_interopRequireDefault(require(\"../Transitioner\"));var _StackViewTransitionConfigs=_interopRequireDefault(require(\"./StackViewTransitionConfigs\"));var USE_NATIVE_DRIVER=true;var DefaultNavigationConfig={mode:'card',cardShadowEnabled:true,cardOverlayEnabled:false};var StackView=function(_React$Component){(0,_inherits2.default)(StackView,_React$Component);function StackView(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,StackView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(StackView)).call.apply(_getPrototypeOf2,[this].concat(args)));_this._configureTransition=function(transitionProps,prevTransitionProps){return(0,_objectSpread2.default)({},_StackViewTransitionConfigs.default.getTransitionConfig(_this.props.navigationConfig.transitionConfig,transitionProps,prevTransitionProps,_this.props.navigationConfig.mode==='modal').transitionSpec,{useNativeDriver:USE_NATIVE_DRIVER});};_this._getShadowEnabled=function(){var navigationConfig=_this.props.navigationConfig;return navigationConfig&&navigationConfig.hasOwnProperty('cardShadowEnabled')?navigationConfig.cardShadowEnabled:DefaultNavigationConfig.cardShadowEnabled;};_this._getCardOverlayEnabled=function(){var navigationConfig=_this.props.navigationConfig;return navigationConfig&&navigationConfig.hasOwnProperty('cardOverlayEnabled')?navigationConfig.cardOverlayEnabled:DefaultNavigationConfig.cardOverlayEnabled;};_this._render=function(transitionProps,lastTransitionProps){var _this$props=_this.props,screenProps=_this$props.screenProps,navigationConfig=_this$props.navigationConfig;return _react.default.createElement(_StackViewLayout.default,(0,_extends2.default)({},navigationConfig,{shadowEnabled:_this._getShadowEnabled(),cardOverlayEnabled:_this._getCardOverlayEnabled(),onGestureBegin:_this.props.onGestureBegin,onGestureCanceled:_this.props.onGestureCanceled,onGestureEnd:_this.props.onGestureEnd,screenProps:screenProps,descriptors:_this.props.descriptors,transitionProps:transitionProps,lastTransitionProps:lastTransitionProps}));};_this._onTransitionEnd=function(transition,lastTransition){var _this$props2=_this.props,navigationConfig=_this$props2.navigationConfig,navigation=_this$props2.navigation,_this$props2$onTransi=_this$props2.onTransitionEnd,onTransitionEnd=_this$props2$onTransi===void 0?navigationConfig.onTransitionEnd:_this$props2$onTransi;var transitionDestKey=transition.scene.route.key;var isCurrentKey=navigation.state.routes[navigation.state.index].key===transitionDestKey;if(transition.navigation.state.isTransitioning&&isCurrentKey){navigation.dispatch(_core.StackActions.completeTransition({key:navigation.state.key,toChildKey:transitionDestKey}));}onTransitionEnd&&onTransitionEnd(transition,lastTransition);};return _this;}(0,_createClass2.default)(StackView,[{key:\"render\",value:function render(){return _react.default.createElement(_Transitioner.default,{render:this._render,configureTransition:this._configureTransition,screenProps:this.props.screenProps,navigation:this.props.navigation,descriptors:this.props.descriptors,onTransitionStart:this.props.onTransitionStart||this.props.navigationConfig.onTransitionStart,onTransitionEnd:this._onTransitionEnd});}},{key:\"componentDidMount\",value:function componentDidMount(){var navigation=this.props.navigation;if(navigation.state.isTransitioning){navigation.dispatch(_core.StackActions.completeTransition({key:navigation.state.key}));}}}]);return StackView;}(_react.default.Component);var _default=StackView;exports.default=_default;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-navigation-stack/dist/views/StackView/StackView.js"],"names":["USE_NATIVE_DRIVER","DefaultNavigationConfig","mode","cardShadowEnabled","cardOverlayEnabled","StackView","_configureTransition","transitionProps","prevTransitionProps","TransitionConfigs","getTransitionConfig","props","navigationConfig","transitionConfig","transitionSpec","useNativeDriver","_getShadowEnabled","hasOwnProperty","_getCardOverlayEnabled","_render","lastTransitionProps","screenProps","onGestureBegin","onGestureCanceled","onGestureEnd","descriptors","_onTransitionEnd","transition","lastTransition","navigation","onTransitionEnd","transitionDestKey","scene","route","key","isCurrentKey","state","routes","index","isTransitioning","dispatch","StackActions","completeTransition","toChildKey","onTransitionStart","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { StackActions } from '@react-navigation/core';\nimport StackViewLayout from './StackViewLayout';\nimport Transitioner from '../Transitioner';\nimport TransitionConfigs from './StackViewTransitionConfigs';\n\nconst USE_NATIVE_DRIVER = true;\n\n// NOTE(brentvatne): this was previously in defaultProps, but that is deceiving\n// because the entire object will be clobbered by navigationConfig that is\n// passed in.\nconst DefaultNavigationConfig = {\n  mode: 'card',\n  cardShadowEnabled: true,\n  cardOverlayEnabled: false\n};\n\nclass StackView extends React.Component {\n  render() {\n    return <Transitioner render={this._render} configureTransition={this._configureTransition} screenProps={this.props.screenProps} navigation={this.props.navigation} descriptors={this.props.descriptors} onTransitionStart={this.props.onTransitionStart || this.props.navigationConfig.onTransitionStart} onTransitionEnd={this._onTransitionEnd} />;\n  }\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    if (navigation.state.isTransitioning) {\n      navigation.dispatch(StackActions.completeTransition({\n        key: navigation.state.key\n      }));\n    }\n  }\n\n  _configureTransition = (transitionProps, prevTransitionProps) => {\n    return {\n      ...TransitionConfigs.getTransitionConfig(this.props.navigationConfig.transitionConfig, transitionProps, prevTransitionProps, this.props.navigationConfig.mode === 'modal').transitionSpec,\n      useNativeDriver: USE_NATIVE_DRIVER\n    };\n  };\n\n  _getShadowEnabled = () => {\n    const { navigationConfig } = this.props;\n    return navigationConfig && navigationConfig.hasOwnProperty('cardShadowEnabled') ? navigationConfig.cardShadowEnabled : DefaultNavigationConfig.cardShadowEnabled;\n  };\n\n  _getCardOverlayEnabled = () => {\n    const { navigationConfig } = this.props;\n    return navigationConfig && navigationConfig.hasOwnProperty('cardOverlayEnabled') ? navigationConfig.cardOverlayEnabled : DefaultNavigationConfig.cardOverlayEnabled;\n  };\n\n  _render = (transitionProps, lastTransitionProps) => {\n    const { screenProps, navigationConfig } = this.props;\n    return <StackViewLayout {...navigationConfig} shadowEnabled={this._getShadowEnabled()} cardOverlayEnabled={this._getCardOverlayEnabled()} onGestureBegin={this.props.onGestureBegin} onGestureCanceled={this.props.onGestureCanceled} onGestureEnd={this.props.onGestureEnd} screenProps={screenProps} descriptors={this.props.descriptors} transitionProps={transitionProps} lastTransitionProps={lastTransitionProps} />;\n  };\n\n  _onTransitionEnd = (transition, lastTransition) => {\n    const {\n      navigationConfig,\n      navigation,\n      onTransitionEnd = navigationConfig.onTransitionEnd\n    } = this.props;\n    const transitionDestKey = transition.scene.route.key;\n    const isCurrentKey = navigation.state.routes[navigation.state.index].key === transitionDestKey;\n    if (transition.navigation.state.isTransitioning && isCurrentKey) {\n      navigation.dispatch(StackActions.completeTransition({\n        key: navigation.state.key,\n        toChildKey: transitionDestKey\n      }));\n    }\n    onTransitionEnd && onTransitionEnd(transition, lastTransition);\n  };\n}\n\nexport default StackView;"]},"metadata":{},"sourceType":"script"}