{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.getNativeSourceFromSource=getNativeSourceFromSource;exports.assertStatusValuesInBounds=assertStatusValuesInBounds;exports.getNativeSourceAndFullInitialStatusForLoadAsync=getNativeSourceAndFullInitialStatusForLoadAsync;exports.getUnloadedStatus=getUnloadedStatus;exports.PlaybackMixin=exports._DEFAULT_INITIAL_PLAYBACK_STATUS=exports._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _expoAsset=require(\"expo-asset\");var _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS=500;exports._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS=_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS;var _DEFAULT_INITIAL_PLAYBACK_STATUS={positionMillis:0,progressUpdateIntervalMillis:_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,shouldPlay:false,rate:1.0,shouldCorrectPitch:false,volume:1.0,isMuted:false,isLooping:false};exports._DEFAULT_INITIAL_PLAYBACK_STATUS=_DEFAULT_INITIAL_PLAYBACK_STATUS;function getNativeSourceFromSource(source){var uri=null;var overridingExtension=null;var headers;var asset=_getAssetFromPlaybackSource(source);if(asset!=null){uri=asset.localUri||asset.uri;}else if(source!=null&&typeof source!=='number'&&'uri'in source&&typeof source.uri==='string'){uri=source.uri;}if(uri==null){return null;}if(source!=null&&typeof source!=='number'&&'overrideFileExtensionAndroid'in source&&typeof source.overrideFileExtensionAndroid==='string'){overridingExtension=source.overrideFileExtensionAndroid;}if(source!=null&&typeof source!=='number'&&'headers'in source&&typeof source.headers==='object'){headers=source.headers;}return{uri:uri,overridingExtension:overridingExtension,headers:headers};}function _getAssetFromPlaybackSource(source){if(source==null){return null;}var asset=null;if(typeof source==='number'){asset=_expoAsset.Asset.fromModule(source);}else if(source instanceof _expoAsset.Asset){asset=source;}return asset;}function assertStatusValuesInBounds(status){if(typeof status.rate==='number'&&(status.rate<0||status.rate>32)){throw new RangeError('Rate value must be between 0.0 and 32.0');}if(typeof status.volume==='number'&&(status.volume<0||status.volume>1)){throw new RangeError('Volume value must be between 0.0 and 1.0');}}function getNativeSourceAndFullInitialStatusForLoadAsync(source,initialStatus,downloadFirst){var asset,nativeSource,fullInitialStatus;return _regenerator.default.async(function getNativeSourceAndFullInitialStatusForLoadAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:asset=_getAssetFromPlaybackSource(source);if(!(downloadFirst&&asset)){_context.next=4;break;}_context.next=4;return _regenerator.default.awrap(asset.downloadAsync());case 4:nativeSource=getNativeSourceFromSource(source);if(!(nativeSource===null)){_context.next=7;break;}throw new Error(\"Cannot load an AV asset from a null playback source\");case 7:fullInitialStatus=initialStatus==null?_DEFAULT_INITIAL_PLAYBACK_STATUS:(0,_objectSpread2.default)({},_DEFAULT_INITIAL_PLAYBACK_STATUS,initialStatus);assertStatusValuesInBounds(fullInitialStatus);return _context.abrupt(\"return\",{nativeSource:nativeSource,fullInitialStatus:fullInitialStatus});case 10:case\"end\":return _context.stop();}}},null,this);}function getUnloadedStatus(){var error=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;return(0,_objectSpread2.default)({isLoaded:false},error?{error:error}:null);}var PlaybackMixin={playAsync:function playAsync(){return _regenerator.default.async(function playAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",this.setStatusAsync({shouldPlay:true}));case 1:case\"end\":return _context2.stop();}}},null,this);},playFromPositionAsync:function playFromPositionAsync(positionMillis){var tolerances,_args3=arguments;return _regenerator.default.async(function playFromPositionAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:tolerances=_args3.length>1&&_args3[1]!==undefined?_args3[1]:{};return _context3.abrupt(\"return\",this.setStatusAsync({positionMillis:positionMillis,shouldPlay:true,seekMillisToleranceAfter:tolerances.toleranceMillisAfter,seekMillisToleranceBefore:tolerances.toleranceMillisBefore}));case 2:case\"end\":return _context3.stop();}}},null,this);},pauseAsync:function pauseAsync(){return _regenerator.default.async(function pauseAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",this.setStatusAsync({shouldPlay:false}));case 1:case\"end\":return _context4.stop();}}},null,this);},stopAsync:function stopAsync(){return _regenerator.default.async(function stopAsync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:return _context5.abrupt(\"return\",this.setStatusAsync({positionMillis:0,shouldPlay:false}));case 1:case\"end\":return _context5.stop();}}},null,this);},setPositionAsync:function setPositionAsync(positionMillis){var tolerances,_args6=arguments;return _regenerator.default.async(function setPositionAsync$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:tolerances=_args6.length>1&&_args6[1]!==undefined?_args6[1]:{};return _context6.abrupt(\"return\",this.setStatusAsync({positionMillis:positionMillis,seekMillisToleranceAfter:tolerances.toleranceMillisAfter,seekMillisToleranceBefore:tolerances.toleranceMillisBefore}));case 2:case\"end\":return _context6.stop();}}},null,this);},setRateAsync:function setRateAsync(rate,shouldCorrectPitch){return _regenerator.default.async(function setRateAsync$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:return _context7.abrupt(\"return\",this.setStatusAsync({rate:rate,shouldCorrectPitch:shouldCorrectPitch}));case 1:case\"end\":return _context7.stop();}}},null,this);},setVolumeAsync:function setVolumeAsync(volume){return _regenerator.default.async(function setVolumeAsync$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:return _context8.abrupt(\"return\",this.setStatusAsync({volume:volume}));case 1:case\"end\":return _context8.stop();}}},null,this);},setIsMutedAsync:function setIsMutedAsync(isMuted){return _regenerator.default.async(function setIsMutedAsync$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:return _context9.abrupt(\"return\",this.setStatusAsync({isMuted:isMuted}));case 1:case\"end\":return _context9.stop();}}},null,this);},setIsLoopingAsync:function setIsLoopingAsync(isLooping){return _regenerator.default.async(function setIsLoopingAsync$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:return _context10.abrupt(\"return\",this.setStatusAsync({isLooping:isLooping}));case 1:case\"end\":return _context10.stop();}}},null,this);},setProgressUpdateIntervalAsync:function setProgressUpdateIntervalAsync(progressUpdateIntervalMillis){return _regenerator.default.async(function setProgressUpdateIntervalAsync$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:return _context11.abrupt(\"return\",this.setStatusAsync({progressUpdateIntervalMillis:progressUpdateIntervalMillis}));case 1:case\"end\":return _context11.stop();}}},null,this);}};exports.PlaybackMixin=PlaybackMixin;","map":{"version":3,"sources":["../../src/av/AV.ts"],"names":[],"mappings":"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","sourcesContent":["import { Asset } from 'expo-asset';\n\n// TODO add:\n//  disableFocusOnAndroid\n//  audio routes (at least did become noisy on android)\n//  pan\n//  pitch\n//  API to explicitly request audio focus / session\n//  API to select stream type on Android\n//  subtitles API\n\nexport type PlaybackSource =\n  | number\n  | { uri: string; overrideFileExtensionAndroid?: string; headers?: { [fieldName: string]: string } }\n  | Asset;\nexport type PlaybackNativeSource = { uri: string; overridingExtension?: string | null; headers?: { [fieldName: string]: string } };\n\nexport type PlaybackStatus =\n  | {\n      isLoaded: false;\n      androidImplementation?: string;\n      error?: string; // populated exactly once when an error forces the object to unload\n    }\n  | {\n      isLoaded: true;\n      androidImplementation?: string;\n\n      uri: string;\n\n      progressUpdateIntervalMillis: number;\n      durationMillis?: number;\n      positionMillis: number;\n      playableDurationMillis?: number;\n      seekMillisToleranceBefore?: number;\n      seekMillisToleranceAfter?: number;\n\n      shouldPlay: boolean;\n      isPlaying: boolean;\n      isBuffering: boolean;\n\n      rate: number;\n      shouldCorrectPitch: boolean;\n      volume: number;\n      isMuted: boolean;\n      isLooping: boolean;\n\n      didJustFinish: boolean; // true exactly once when the track plays to finish\n    };\n\nexport type PlaybackStatusToSet = {\n  androidImplementation?: string;\n  progressUpdateIntervalMillis?: number;\n  positionMillis?: number;\n  seekMillisToleranceBefore?: number;\n  seekMillisToleranceAfter?: number;\n  shouldPlay?: boolean;\n  rate?: number;\n  shouldCorrectPitch?: boolean;\n  volume?: number;\n  isMuted?: boolean;\n  isLooping?: boolean;\n};\n\nexport const _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS: number = 500;\nexport const _DEFAULT_INITIAL_PLAYBACK_STATUS: PlaybackStatusToSet = {\n  positionMillis: 0,\n  progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n  shouldPlay: false,\n  rate: 1.0,\n  shouldCorrectPitch: false,\n  volume: 1.0,\n  isMuted: false,\n  isLooping: false,\n};\n\nexport function getNativeSourceFromSource(\n  source: PlaybackSource | null\n): PlaybackNativeSource | null {\n  let uri: string | null = null;\n  let overridingExtension: string | null = null;\n  let headers: { [fieldName: string]: string } | undefined;\n\n  let asset: Asset | null = _getAssetFromPlaybackSource(source);\n  if (asset != null) {\n    uri = asset.localUri || asset.uri;\n  } else if (\n    source != null &&\n    typeof source !== 'number' &&\n    'uri' in source &&\n    typeof source.uri === 'string'\n  ) {\n    uri = source.uri;\n  }\n\n  if (uri == null) {\n    return null;\n  }\n\n  if (\n    source != null &&\n    typeof source !== 'number' &&\n    'overrideFileExtensionAndroid' in source &&\n    typeof source.overrideFileExtensionAndroid === 'string'\n  ) {\n    overridingExtension = source.overrideFileExtensionAndroid;\n  }\n\n  if (source != null && typeof source !== 'number' && 'headers' in source && typeof source.headers === 'object') {\n    headers = source.headers;\n  }\n  return { uri, overridingExtension, headers };\n}\n\nfunction _getAssetFromPlaybackSource(source: PlaybackSource | null): Asset | null {\n  if (source == null) {\n    return null;\n  }\n\n  let asset: Asset | null = null;\n  if (typeof source === 'number') {\n    asset = Asset.fromModule(source);\n  } else if (source instanceof Asset) {\n    asset = source;\n  }\n  return asset;\n}\n\nexport function assertStatusValuesInBounds(status: PlaybackStatusToSet): void {\n  if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n    throw new RangeError('Rate value must be between 0.0 and 32.0');\n  }\n  if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n    throw new RangeError('Volume value must be between 0.0 and 1.0');\n  }\n}\n\nexport async function getNativeSourceAndFullInitialStatusForLoadAsync(\n  source: PlaybackSource | null,\n  initialStatus: PlaybackStatusToSet | null,\n  downloadFirst: boolean\n): Promise<{\n  nativeSource: PlaybackNativeSource;\n  fullInitialStatus: PlaybackStatusToSet;\n}> {\n  // Download first if necessary.\n  let asset = _getAssetFromPlaybackSource(source);\n  if (downloadFirst && asset) {\n    // TODO we can download remote uri too once @nikki93 has integrated this into Asset\n    await asset.downloadAsync();\n  }\n\n  // Get the native source\n  const nativeSource: PlaybackNativeSource | null = getNativeSourceFromSource(source);\n\n  if (nativeSource === null) {\n    throw new Error(`Cannot load an AV asset from a null playback source`);\n  }\n\n  // Get the full initial status\n  const fullInitialStatus: PlaybackStatusToSet =\n    initialStatus == null\n      ? _DEFAULT_INITIAL_PLAYBACK_STATUS\n      : {\n          ..._DEFAULT_INITIAL_PLAYBACK_STATUS,\n          ...initialStatus,\n        };\n  assertStatusValuesInBounds(fullInitialStatus);\n\n  return { nativeSource, fullInitialStatus };\n}\n\nexport function getUnloadedStatus(error: string | null = null): PlaybackStatus {\n  return {\n    isLoaded: false,\n    ...(error ? { error } : null),\n  };\n}\n\nexport interface AV {\n  setStatusAsync(status: PlaybackStatusToSet): Promise<PlaybackStatus>;\n}\n\nexport interface Playback extends AV {\n  playAsync(): Promise<PlaybackStatus>;\n  playFromPositionAsync(\n    positionMillis: number,\n    tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n  ): Promise<PlaybackStatus>;\n  pauseAsync(): Promise<PlaybackStatus>;\n  stopAsync(): Promise<PlaybackStatus>;\n  setPositionAsync(\n    positionMillis: number,\n    tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n  ): Promise<PlaybackStatus>;\n  setRateAsync(rate: number, shouldCorrectPitch: boolean): Promise<PlaybackStatus>;\n  setVolumeAsync(volume: number): Promise<PlaybackStatus>;\n  setIsMutedAsync(isMuted: boolean): Promise<PlaybackStatus>;\n  setIsLoopingAsync(isLooping: boolean): Promise<PlaybackStatus>;\n  setProgressUpdateIntervalAsync(progressUpdateIntervalMillis: number): Promise<PlaybackStatus>;\n}\n\n/**\n * A mixin that defines common playback methods for A/V classes so they implement the `Playback`\n * interface\n */\nexport const PlaybackMixin = {\n  async playAsync(): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ shouldPlay: true });\n  },\n\n  async playFromPositionAsync(\n    positionMillis: number,\n    tolerances: { toleranceMillisBefore?: number; toleranceMillisAfter?: number } = {}\n  ): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({\n      positionMillis,\n      shouldPlay: true,\n      seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n      seekMillisToleranceBefore: tolerances.toleranceMillisBefore,\n    });\n  },\n\n  async pauseAsync(): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ shouldPlay: false });\n  },\n\n  async stopAsync(): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ positionMillis: 0, shouldPlay: false });\n  },\n\n  async setPositionAsync(\n    positionMillis: number,\n    tolerances: { toleranceMillisBefore?: number; toleranceMillisAfter?: number } = {}\n  ): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({\n      positionMillis,\n      seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n      seekMillisToleranceBefore: tolerances.toleranceMillisBefore,\n    });\n  },\n\n  async setRateAsync(rate: number, shouldCorrectPitch: boolean): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ rate, shouldCorrectPitch });\n  },\n\n  async setVolumeAsync(volume: number): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ volume });\n  },\n\n  async setIsMutedAsync(isMuted: boolean): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ isMuted });\n  },\n\n  async setIsLoopingAsync(isLooping: boolean): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ isLooping });\n  },\n\n  async setProgressUpdateIntervalAsync(\n    progressUpdateIntervalMillis: number\n  ): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ progressUpdateIntervalMillis });\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}