{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _core=require(\"@react-navigation/core\");var _invariant=_interopRequireDefault(require(\"../utils/invariant\"));var DrawerSidebar=function(_React$PureComponent){(0,_inherits2.default)(DrawerSidebar,_React$PureComponent);function DrawerSidebar(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,DrawerSidebar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(DrawerSidebar)).call.apply(_getPrototypeOf2,[this].concat(args)));_this._getScreenOptions=function(routeKey){var descriptor=_this.props.descriptors[routeKey];(0,_invariant.default)(descriptor.options,'Cannot access screen descriptor options from drawer sidebar');return descriptor.options;};_this._getLabel=function(_ref){var focused=_ref.focused,tintColor=_ref.tintColor,route=_ref.route;var _this$_getScreenOptio=_this._getScreenOptions(route.key),drawerLabel=_this$_getScreenOptio.drawerLabel,title=_this$_getScreenOptio.title;if(drawerLabel){return typeof drawerLabel==='function'?drawerLabel({tintColor:tintColor,focused:focused}):drawerLabel;}if(typeof title==='string'){return title;}return route.routeName;};_this._renderIcon=function(_ref2){var focused=_ref2.focused,tintColor=_ref2.tintColor,route=_ref2.route;var _this$_getScreenOptio2=_this._getScreenOptions(route.key),drawerIcon=_this$_getScreenOptio2.drawerIcon;if(drawerIcon){return typeof drawerIcon==='function'?drawerIcon({tintColor:tintColor,focused:focused}):drawerIcon;}return null;};_this._onItemPress=function(_ref3){var route=_ref3.route,focused=_ref3.focused;if(focused){_this.props.navigation.closeDrawer();}else{_this.props.navigation.dispatch(_core.NavigationActions.navigate({routeName:route.routeName}));}};return _this;}(0,_createClass2.default)(DrawerSidebar,[{key:\"render\",value:function render(){var ContentComponent=this.props.contentComponent;if(!ContentComponent){return null;}var state=this.props.navigation.state;(0,_invariant.default)(typeof state.index==='number','should be set');return _react.default.createElement(_reactNative.View,{style:[styles.container,this.props.style]},_react.default.createElement(ContentComponent,(0,_extends2.default)({},this.props.contentOptions,{navigation:this.props.navigation,descriptors:this.props.descriptors,items:state.routes,activeItemKey:state.routes[state.index]?state.routes[state.index].key:null,screenProps:this.props.screenProps,getLabel:this._getLabel,renderIcon:this._renderIcon,onItemPress:this._onItemPress,drawerPosition:this.props.drawerPosition})));}}]);return DrawerSidebar;}(_react.default.PureComponent);var _default=DrawerSidebar;exports.default=_default;var styles=_reactNative.StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-navigation-drawer/dist/views/DrawerSidebar.js"],"names":["DrawerSidebar","_getScreenOptions","routeKey","descriptor","props","descriptors","options","_getLabel","focused","tintColor","route","key","drawerLabel","title","routeName","_renderIcon","drawerIcon","_onItemPress","navigation","closeDrawer","dispatch","NavigationActions","navigate","ContentComponent","contentComponent","state","index","styles","container","style","contentOptions","routes","screenProps","drawerPosition","React","PureComponent","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { NavigationActions } from '@react-navigation/core';\nimport invariant from '../utils/invariant';\n\n/**\n * Component that renders the sidebar screen of the drawer.\n */\n\nclass DrawerSidebar extends React.PureComponent {\n  _getScreenOptions = routeKey => {\n    const descriptor = this.props.descriptors[routeKey];\n    invariant(descriptor.options, 'Cannot access screen descriptor options from drawer sidebar');\n    return descriptor.options;\n  };\n\n  _getLabel = ({ focused, tintColor, route }) => {\n    const { drawerLabel, title } = this._getScreenOptions(route.key);\n    if (drawerLabel) {\n      return typeof drawerLabel === 'function' ? drawerLabel({ tintColor, focused }) : drawerLabel;\n    }\n\n    if (typeof title === 'string') {\n      return title;\n    }\n\n    return route.routeName;\n  };\n\n  _renderIcon = ({ focused, tintColor, route }) => {\n    const { drawerIcon } = this._getScreenOptions(route.key);\n    if (drawerIcon) {\n      return typeof drawerIcon === 'function' ? drawerIcon({ tintColor, focused }) : drawerIcon;\n    }\n    return null;\n  };\n\n  _onItemPress = ({ route, focused }) => {\n    if (focused) {\n      this.props.navigation.closeDrawer();\n    } else {\n      this.props.navigation.dispatch(NavigationActions.navigate({ routeName: route.routeName }));\n    }\n  };\n\n  render() {\n    const ContentComponent = this.props.contentComponent;\n    if (!ContentComponent) {\n      return null;\n    }\n    const { state } = this.props.navigation;\n    invariant(typeof state.index === 'number', 'should be set');\n    return <View style={[styles.container, this.props.style]}>\n        <ContentComponent {...this.props.contentOptions} navigation={this.props.navigation} descriptors={this.props.descriptors} items={state.routes} activeItemKey={state.routes[state.index] ? state.routes[state.index].key : null} screenProps={this.props.screenProps} getLabel={this._getLabel} renderIcon={this._renderIcon} onItemPress={this._onItemPress} drawerPosition={this.props.drawerPosition} />\n      </View>;\n  }\n}\n\nexport default DrawerSidebar;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});"]},"metadata":{},"sourceType":"script"}