{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _resolveAssetSource=_interopRequireDefault(require(\"react-native/Libraries/Image/resolveAssetSource\"));var _decorateMapComponent=_interopRequireWildcard(require(\"./decorateMapComponent\"));var viewConfig={uiViewClassName:'AIR<provider>MapMarker',validAttributes:{coordinate:true}};var viewPropTypes=_reactNative.ViewPropTypes||_reactNative.View.propTypes;var propTypes=(0,_objectSpread2.default)({},viewPropTypes,{identifier:_propTypes.default.string,reuseIdentifier:_propTypes.default.string,title:_propTypes.default.string,description:_propTypes.default.string,image:_propTypes.default.any,opacity:_propTypes.default.number,pinColor:_reactNative.ColorPropType,coordinate:_propTypes.default.shape({latitude:_propTypes.default.number.isRequired,longitude:_propTypes.default.number.isRequired}).isRequired,centerOffset:_propTypes.default.shape({x:_propTypes.default.number.isRequired,y:_propTypes.default.number.isRequired}),calloutOffset:_propTypes.default.shape({x:_propTypes.default.number.isRequired,y:_propTypes.default.number.isRequired}),anchor:_propTypes.default.shape({x:_propTypes.default.number.isRequired,y:_propTypes.default.number.isRequired}),calloutAnchor:_propTypes.default.shape({x:_propTypes.default.number.isRequired,y:_propTypes.default.number.isRequired}),flat:_propTypes.default.bool,draggable:_propTypes.default.bool,tracksViewChanges:_propTypes.default.bool,tracksInfoWindowChanges:_propTypes.default.bool,stopPropagation:_propTypes.default.bool,onPress:_propTypes.default.func,onSelect:_propTypes.default.func,onDeselect:_propTypes.default.func,onCalloutPress:_propTypes.default.func,onDragStart:_propTypes.default.func,onDrag:_propTypes.default.func,onDragEnd:_propTypes.default.func});var defaultProps={stopPropagation:false};var MapMarker=function(_React$Component){(0,_inherits2.default)(MapMarker,_React$Component);function MapMarker(props){var _this;(0,_classCallCheck2.default)(this,MapMarker);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(MapMarker).call(this,props));_this.showCallout=_this.showCallout.bind((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this)));_this.hideCallout=_this.hideCallout.bind((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this)));_this.animateMarkerToCoordinate=_this.animateMarkerToCoordinate.bind((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this)));return _this;}(0,_createClass2.default)(MapMarker,[{key:\"setNativeProps\",value:function setNativeProps(props){this.marker.setNativeProps(props);}},{key:\"showCallout\",value:function showCallout(){this._runCommand('showCallout',[]);}},{key:\"hideCallout\",value:function hideCallout(){this._runCommand('hideCallout',[]);}},{key:\"animateMarkerToCoordinate\",value:function animateMarkerToCoordinate(coordinate,duration){this._runCommand('animateMarkerToCoordinate',[coordinate,duration||500]);}},{key:\"redraw\",value:function redraw(){this._runCommand('redraw',[]);}},{key:\"_getHandle\",value:function _getHandle(){return(0,_reactNative.findNodeHandle)(this.marker);}},{key:\"_runCommand\",value:function _runCommand(name,args){switch(_reactNative.Platform.OS){case'android':_reactNative.NativeModules.UIManager.dispatchViewManagerCommand(this._getHandle(),this.getUIManagerCommand(name),args);break;case'ios':this.getMapManagerCommand(name).apply(void 0,[this._getHandle()].concat((0,_toConsumableArray2.default)(args)));break;default:break;}}},{key:\"render\",value:function render(){var _this2=this;var image;if(this.props.image){image=(0,_resolveAssetSource.default)(this.props.image)||{};image=image.uri||this.props.image;}var AIRMapMarker=this.getAirComponent();return _react.default.createElement(AIRMapMarker,(0,_extends2.default)({ref:function ref(_ref){_this2.marker=_ref;}},this.props,{image:image,style:[styles.marker,this.props.style],onPress:function onPress(event){if(_this2.props.stopPropagation){event.stopPropagation();}if(_this2.props.onPress){_this2.props.onPress(event);}}}));}}]);return MapMarker;}(_react.default.Component);MapMarker.propTypes=propTypes;MapMarker.defaultProps=defaultProps;MapMarker.viewConfig=viewConfig;var styles=_reactNative.StyleSheet.create({marker:{position:'absolute',backgroundColor:'transparent'}});MapMarker.Animated=_reactNative.Animated.createAnimatedComponent(MapMarker);var _default=(0,_decorateMapComponent.default)(MapMarker,{componentType:'Marker',providers:{google:{ios:_decorateMapComponent.SUPPORTED,android:_decorateMapComponent.USES_DEFAULT_IMPLEMENTATION}}});exports.default=_default;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native-maps/lib/components/MapMarker.js"],"names":["viewConfig","uiViewClassName","validAttributes","coordinate","viewPropTypes","ViewPropTypes","View","propTypes","identifier","PropTypes","string","reuseIdentifier","title","description","image","any","opacity","number","pinColor","ColorPropType","shape","latitude","isRequired","longitude","centerOffset","x","y","calloutOffset","anchor","calloutAnchor","flat","bool","draggable","tracksViewChanges","tracksInfoWindowChanges","stopPropagation","onPress","func","onSelect","onDeselect","onCalloutPress","onDragStart","onDrag","onDragEnd","defaultProps","MapMarker","props","showCallout","bind","hideCallout","animateMarkerToCoordinate","marker","setNativeProps","_runCommand","duration","name","args","Platform","OS","NativeModules","UIManager","dispatchViewManagerCommand","_getHandle","getUIManagerCommand","getMapManagerCommand","uri","AIRMapMarker","getAirComponent","ref","styles","style","event","React","Component","StyleSheet","create","position","backgroundColor","Animated","createAnimatedComponent","componentType","providers","google","ios","SUPPORTED","android","USES_DEFAULT_IMPLEMENTATION"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  ColorPropType,\n  StyleSheet,\n  Platform,\n  NativeModules,\n  Animated,\n  findNodeHandle,\n  ViewPropTypes,\n  View,\n} from 'react-native';\n\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport decorateMapComponent, {\n  SUPPORTED,\n  USES_DEFAULT_IMPLEMENTATION,\n} from './decorateMapComponent';\n\nconst viewConfig = {\n  uiViewClassName: 'AIR<provider>MapMarker',\n  validAttributes: {\n    coordinate: true,\n  },\n};\n\n// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)\nconst viewPropTypes = ViewPropTypes || View.propTypes;\n\nconst propTypes = {\n  ...viewPropTypes,\n\n  // TODO(lmr): get rid of these?\n  identifier: PropTypes.string,\n  reuseIdentifier: PropTypes.string,\n\n  /**\n   * The title of the marker. This is only used if the <Marker /> component has no children that\n   * are a `<Callout />`, in which case the default callout behavior will be used, which\n   * will show both the `title` and the `description`, if provided.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The description of the marker. This is only used if the <Marker /> component has no children\n   * that are a `<Callout />`, in which case the default callout behavior will be used,\n   * which will show both the `title` and the `description`, if provided.\n   */\n  description: PropTypes.string,\n\n  /**\n   * A custom image to be used as the marker's icon. Only local image resources are allowed to be\n   * used.\n   */\n  image: PropTypes.any,\n\n  /**\n   * Opacity level of view/image based markers\n   */\n  opacity: PropTypes.number,\n\n  /**\n   * If no custom marker view or custom image is provided, the platform default pin will be used,\n   * which can be customized by this color. Ignored if a custom marker is being used.\n   */\n  pinColor: ColorPropType,\n\n  /**\n   * The coordinate for the marker.\n   */\n  coordinate: PropTypes.shape({\n    /**\n     * Coordinates for the anchor point of the marker.\n     */\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired,\n  }).isRequired,\n\n  /**\n   * The offset (in points) at which to display the view.\n   *\n   * By default, the center point of an annotation view is placed at the coordinate point of the\n   * associated annotation. You can use this property to reposition the annotation view as\n   * needed. This x and y offset values are measured in points. Positive offset values move the\n   * annotation view down and to the right, while negative values move it up and to the left.\n   *\n   * For android, see the `anchor` prop.\n   *\n   * @platform ios\n   */\n  centerOffset: PropTypes.shape({\n    /**\n     * Offset from the anchor point\n     */\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * The offset (in points) at which to place the callout bubble.\n   *\n   * This property determines the additional distance by which to move the callout bubble. When\n   * this property is set to (0, 0), the anchor point of the callout bubble is placed on the\n   * top-center point of the marker view’s frame. Specifying positive offset values moves the\n   * callout bubble down and to the right, while specifying negative values moves it up and to\n   * the left.\n   *\n   * For android, see the `calloutAnchor` prop.\n   *\n   * @platform ios\n   */\n  calloutOffset: PropTypes.shape({\n    /**\n     * Offset to the callout\n     */\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * Sets the anchor point for the marker.\n   *\n   * The anchor specifies the point in the icon image that is anchored to the marker's position\n   * on the Earth's surface.\n   *\n   * The anchor point is specified in the continuous space [0.0, 1.0] x [0.0, 1.0], where (0, 0)\n   * is the top-left corner of the image, and (1, 1) is the bottom-right corner. The anchoring\n   * point in a W x H image is the nearest discrete grid point in a (W + 1) x (H + 1) grid,\n   * obtained by scaling the then rounding. For example, in a 4 x 2 image, the anchor point\n   * (0.7, 0.6) resolves to the grid point at (3, 1).\n   *\n   * For ios, see the `centerOffset` prop.\n   *\n   * @platform android\n   */\n  anchor: PropTypes.shape({\n    /**\n     * Offset to the callout\n     */\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * Specifies the point in the marker image at which to anchor the callout when it is displayed.\n   * This is specified in the same coordinate system as the anchor. See the `andor` prop for more\n   * details.\n   *\n   * The default is the top middle of the image.\n   *\n   * For ios, see the `calloutOffset` prop.\n   *\n   * @platform android\n   */\n  calloutAnchor: PropTypes.shape({\n    /**\n     * Offset to the callout\n     */\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * Sets whether this marker should be flat against the map true or a billboard facing the\n   * camera false.\n   *\n   * @platform android\n   */\n  flat: PropTypes.bool,\n\n  draggable: PropTypes.bool,\n\n  /**\n   * Sets whether this marker should track view changes true.\n   */\n\n  tracksViewChanges: PropTypes.bool,\n\n  /**\n   * Sets whether this marker should track view changes in info window true.\n   *\n   * @platform ios\n   */\n\n  tracksInfoWindowChanges: PropTypes.bool,\n\n  /**\n   * Stops Marker onPress events from propagating to and triggering MapView onPress events.\n   *\n   * @platform ios\n   */\n\n  stopPropagation: PropTypes.bool,\n\n  /**\n   * Callback that is called when the user presses on the marker\n   */\n  onPress: PropTypes.func,\n\n  /**\n   * Callback that is called when the user selects the marker, before the callout is shown.\n   *\n   * @platform ios\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Callback that is called when the marker is deselected, before the callout is hidden.\n   *\n   * @platform ios\n   */\n  onDeselect: PropTypes.func,\n\n  /**\n   * Callback that is called when the user taps the callout view.\n   */\n  onCalloutPress: PropTypes.func,\n\n  /**\n   * Callback that is called when the user initiates a drag on this marker (if it is draggable)\n   */\n  onDragStart: PropTypes.func,\n\n  /**\n   * Callback called continuously as the marker is dragged\n   */\n  onDrag: PropTypes.func,\n\n  /**\n   * Callback that is called when a drag on this marker finishes. This is usually the point you\n   * will want to setState on the marker's coordinate again\n   */\n  onDragEnd: PropTypes.func,\n};\n\nconst defaultProps = {\n  stopPropagation: false,\n};\n\nclass MapMarker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showCallout = this.showCallout.bind(this);\n    this.hideCallout = this.hideCallout.bind(this);\n    this.animateMarkerToCoordinate = this.animateMarkerToCoordinate.bind(this);\n  }\n\n  setNativeProps(props) {\n    this.marker.setNativeProps(props);\n  }\n\n  showCallout() {\n    this._runCommand('showCallout', []);\n  }\n\n  hideCallout() {\n    this._runCommand('hideCallout', []);\n  }\n\n  animateMarkerToCoordinate(coordinate, duration) {\n    this._runCommand('animateMarkerToCoordinate', [coordinate, duration || 500]);\n  }\n\n  redraw() {\n    this._runCommand('redraw', []);\n  }\n\n  _getHandle() {\n    return findNodeHandle(this.marker);\n  }\n\n  _runCommand(name, args) {\n    switch (Platform.OS) {\n      case 'android':\n        NativeModules.UIManager.dispatchViewManagerCommand(\n          this._getHandle(),\n          this.getUIManagerCommand(name),\n          args\n        );\n        break;\n\n      case 'ios':\n        this.getMapManagerCommand(name)(this._getHandle(), ...args);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    let image;\n    if (this.props.image) {\n      image = resolveAssetSource(this.props.image) || {};\n      image = image.uri || this.props.image;\n    }\n\n    const AIRMapMarker = this.getAirComponent();\n\n    return (\n      <AIRMapMarker\n        ref={ref => {\n          this.marker = ref;\n        }}\n        {...this.props}\n        image={image}\n        style={[styles.marker, this.props.style]}\n        onPress={event => {\n          if (this.props.stopPropagation) {\n            event.stopPropagation();\n          }\n          if (this.props.onPress) {\n            this.props.onPress(event);\n          }\n        }}\n      />\n    );\n  }\n}\n\nMapMarker.propTypes = propTypes;\nMapMarker.defaultProps = defaultProps;\nMapMarker.viewConfig = viewConfig;\n\nconst styles = StyleSheet.create({\n  marker: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n  },\n});\n\nMapMarker.Animated = Animated.createAnimatedComponent(MapMarker);\n\nexport default decorateMapComponent(MapMarker, {\n  componentType: 'Marker',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"script"}