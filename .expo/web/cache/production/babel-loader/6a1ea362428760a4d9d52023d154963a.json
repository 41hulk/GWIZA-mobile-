{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.printAsync=printAsync;exports.selectPrinterAsync=selectPrinterAsync;exports.printToFileAsync=printToFileAsync;exports.Orientation=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _reactNative=require(\"react-native\");var _expoCore=require(\"expo-core\");var ExponentPrint=_expoCore.NativeModulesProxy.ExponentPrint;var Orientation=ExponentPrint.Orientation;exports.Orientation=Orientation;function printAsync(options){return _regenerator.default.async(function printAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!options.uri&&!options.html&&_reactNative.Platform.OS==='ios'&&!options.markupFormatterIOS)){_context.next=2;break;}throw new Error('Must provide either `html` or `uri` to print');case 2:if(!(options.uri&&options.html)){_context.next=4;break;}throw new Error('Must provide exactly one of `html` and `uri` but both were specified');case 4:return _context.abrupt(\"return\",ExponentPrint.print(options));case 5:case\"end\":return _context.stop();}}},null,this);}function selectPrinterAsync(){return _regenerator.default.async(function selectPrinterAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(_reactNative.Platform.OS==='ios')){_context2.next=4;break;}return _context2.abrupt(\"return\",ExponentPrint.selectPrinter());case 4:throw new Error('Selecting the printer in advance is not available on Android.');case 5:case\"end\":return _context2.stop();}}},null,this);}function printToFileAsync(){var options,_args3=arguments;return _regenerator.default.async(function printToFileAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:options=_args3.length>0&&_args3[0]!==undefined?_args3[0]:{};return _context3.abrupt(\"return\",ExponentPrint.printToFileAsync(options));case 2:case\"end\":return _context3.stop();}}},null,this);}","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/expo-print/src/Print.js"],"names":["ExponentPrint","NativeModulesProxy","Orientation","printAsync","options","uri","html","Platform","OS","markupFormatterIOS","Error","print","selectPrinterAsync","selectPrinter","printToFileAsync"],"mappings":"4WAEA,yCACA,mC,GACQA,CAAAA,a,CAAkBC,4B,CAAlBD,a,CAoCD,GAAME,CAAAA,WAAgC,CAAGF,aAAa,CAACE,WAAvD,C,gCAEA,QAAeC,CAAAA,UAAf,CAA0BC,OAA1B,4HACD,CAACA,OAAO,CAACC,GAAT,EAAgB,CAACD,OAAO,CAACE,IAAzB,EAAkCC,sBAASC,EAAT,GAAgB,KAAhB,EAAyB,CAACJ,OAAO,CAACK,kBADnE,+BAEG,IAAIC,CAAAA,KAAJ,CAAU,8CAAV,CAFH,aAIDN,OAAO,CAACC,GAAR,EAAeD,OAAO,CAACE,IAJtB,+BAKG,IAAII,CAAAA,KAAJ,CAAU,sEAAV,CALH,wCAOEV,aAAa,CAACW,KAAd,CAAoBP,OAApB,CAPF,0DAUA,QAAeQ,CAAAA,kBAAf,wIACDL,sBAASC,EAAT,GAAgB,KADf,4DAEIR,aAAa,CAACa,aAAd,EAFJ,cAIG,IAAIH,CAAAA,KAAJ,CAAU,+DAAV,CAJH,0DAQA,QAAeI,CAAAA,gBAAf,8JAAgCV,OAAhC,kDAA4D,EAA5D,kCACEJ,aAAa,CAACc,gBAAd,CAA+BV,OAA/B,CADF","sourcesContent":["// @flow\n\nimport { Platform } from 'react-native';\nimport { NativeModulesProxy } from 'expo-core';\nconst { ExponentPrint } = NativeModulesProxy;\n\ntype PrintOptions = {\n  uri: string,\n  html?: string,\n  printerUrl?: string,\n  markupFormatterIOS?: string,\n};\n\ntype SelectResult = {\n  name: string,\n  url: string,\n};\n\ntype OrientationConstant = {\n  portrait: string,\n  landscape: string,\n};\n\ntype FilePrintOptions = {\n  html?: string,\n  width?: number,\n  height?: number,\n  padding?: {\n    top: number,\n    right: number,\n    bottom: number,\n    left: number,\n  },\n};\n\ntype FilePrintResult = {\n  uri: string,\n  numberOfPages: number,\n};\n\nexport const Orientation: OrientationConstant = ExponentPrint.Orientation;\n\nexport async function printAsync(options: PrintOptions): Promise<void> {\n  if (!options.uri && !options.html && (Platform.OS === 'ios' && !options.markupFormatterIOS)) {\n    throw new Error('Must provide either `html` or `uri` to print');\n  }\n  if (options.uri && options.html) {\n    throw new Error('Must provide exactly one of `html` and `uri` but both were specified');\n  }\n  return ExponentPrint.print(options);\n}\n\nexport async function selectPrinterAsync(): Promise<SelectResult> {\n  if (Platform.OS === 'ios') {\n    return ExponentPrint.selectPrinter();\n  } else {\n    throw new Error('Selecting the printer in advance is not available on Android.');\n  }\n}\n\nexport async function printToFileAsync(options: FilePrintOptions = {}): Promise<FilePrintResult> {\n  return ExponentPrint.printToFileAsync(options);\n}\n"]},"metadata":{},"sourceType":"script"}