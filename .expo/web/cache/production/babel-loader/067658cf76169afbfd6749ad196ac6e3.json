{"ast":null,"code":"'use strict';var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _possibleConstructorReturn=require(\"@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"@babel/runtime/helpers/getPrototypeOf\");var _get=require(\"@babel/runtime/helpers/get\");var _inherits=require(\"@babel/runtime/helpers/inherits\");var EventEmitter=require(\"../vendor/emitter/EventEmitter\");var Platform=require(\"../Utilities/Platform\");var RCTDeviceEventEmitter=require(\"./RCTDeviceEventEmitter\");var invariant=require('fbjs/lib/invariant');var NativeEventEmitter=function(_EventEmitter){_inherits(NativeEventEmitter,_EventEmitter);function NativeEventEmitter(nativeModule){var _this;_classCallCheck(this,NativeEventEmitter);_this=_possibleConstructorReturn(this,_getPrototypeOf(NativeEventEmitter).call(this,RCTDeviceEventEmitter.sharedSubscriber));if(Platform.OS==='ios'){invariant(nativeModule,'Native module cannot be null.');_this._nativeModule=nativeModule;}return _this;}_createClass(NativeEventEmitter,[{key:\"addListener\",value:function addListener(eventType,listener,context){if(this._nativeModule!=null){this._nativeModule.addListener(eventType);}return _get(_getPrototypeOf(NativeEventEmitter.prototype),\"addListener\",this).call(this,eventType,listener,context);}},{key:\"removeAllListeners\",value:function removeAllListeners(eventType){invariant(eventType,'eventType argument is required.');var count=this.listeners(eventType).length;if(this._nativeModule!=null){this._nativeModule.removeListeners(count);}_get(_getPrototypeOf(NativeEventEmitter.prototype),\"removeAllListeners\",this).call(this,eventType);}},{key:\"removeSubscription\",value:function removeSubscription(subscription){if(this._nativeModule!=null){this._nativeModule.removeListeners(1);}_get(_getPrototypeOf(NativeEventEmitter.prototype),\"removeSubscription\",this).call(this,subscription);}}]);return NativeEventEmitter;}(EventEmitter);module.exports=NativeEventEmitter;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js"],"names":["EventEmitter","require","Platform","RCTDeviceEventEmitter","invariant","NativeEventEmitter","nativeModule","sharedSubscriber","OS","_nativeModule","eventType","listener","context","addListener","count","listeners","length","removeListeners","subscription","module","exports"],"mappings":"AAUA,a,4YAEA,GAAMA,CAAAA,YAAY,CAAGC,OAAO,kCAA5B,CACA,GAAMC,CAAAA,QAAQ,CAAGD,OAAO,yBAAxB,CACA,GAAME,CAAAA,qBAAqB,CAAGF,OAAO,2BAArC,CAEA,GAAMG,CAAAA,SAAS,CAAGH,OAAO,CAAC,oBAAD,CAAzB,C,GAaMI,CAAAA,kB,qEAGJ,4BAAYC,YAAZ,CAAyC,oDACvC,oFAAMH,qBAAqB,CAACI,gBAA5B,GACA,GAAIL,QAAQ,CAACM,EAAT,GAAgB,KAApB,CAA2B,CACzBJ,SAAS,CAACE,YAAD,CAAe,+BAAf,CAAT,CACA,MAAKG,aAAL,CAAqBH,YAArB,CACD,CALsC,aAMxC,C,+EAGCI,S,CACAC,Q,CACAC,O,CACqB,CACrB,GAAI,KAAKH,aAAL,EAAsB,IAA1B,CAAgC,CAC9B,KAAKA,aAAL,CAAmBI,WAAnB,CAA+BH,SAA/B,EACD,CACD,wFAAyBA,SAAzB,CAAoCC,QAApC,CAA8CC,OAA9C,EACD,C,8DAEkBF,S,CAAmB,CACpCN,SAAS,CAACM,SAAD,CAAY,iCAAZ,CAAT,CACA,GAAMI,CAAAA,KAAK,CAAG,KAAKC,SAAL,CAAeL,SAAf,EAA0BM,MAAxC,CACA,GAAI,KAAKP,aAAL,EAAsB,IAA1B,CAAgC,CAC9B,KAAKA,aAAL,CAAmBQ,eAAnB,CAAmCH,KAAnC,EACD,CACD,wFAAyBJ,SAAzB,EACD,C,8DAEkBQ,Y,CAAmC,CACpD,GAAI,KAAKT,aAAL,EAAsB,IAA1B,CAAgC,CAC9B,KAAKA,aAAL,CAAmBQ,eAAnB,CAAmC,CAAnC,EACD,CACD,wFAAyBC,YAAzB,EACD,C,gCApC8BlB,Y,EAuCjCmB,MAAM,CAACC,OAAP,CAAiBf,kBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst EventEmitter = require('../vendor/emitter/EventEmitter');\nconst Platform = require('../Utilities/Platform');\nconst RCTDeviceEventEmitter = require('./RCTDeviceEventEmitter');\n\nconst invariant = require('fbjs/lib/invariant');\n\nimport type EmitterSubscription from '../vendor/emitter/EmitterSubscription';\n\ntype NativeModule = {\n  +addListener: (eventType: string) => void,\n  +removeListeners: (count: number) => void,\n};\n\n/**\n * Abstract base class for implementing event-emitting modules. This implements\n * a subset of the standard EventEmitter node module API.\n */\nclass NativeEventEmitter extends EventEmitter {\n  _nativeModule: ?NativeModule;\n\n  constructor(nativeModule: ?NativeModule) {\n    super(RCTDeviceEventEmitter.sharedSubscriber);\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      this._nativeModule = nativeModule;\n    }\n  }\n\n  addListener(\n    eventType: string,\n    listener: Function,\n    context: ?Object,\n  ): EmitterSubscription {\n    if (this._nativeModule != null) {\n      this._nativeModule.addListener(eventType);\n    }\n    return super.addListener(eventType, listener, context);\n  }\n\n  removeAllListeners(eventType: string) {\n    invariant(eventType, 'eventType argument is required.');\n    const count = this.listeners(eventType).length;\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(count);\n    }\n    super.removeAllListeners(eventType);\n  }\n\n  removeSubscription(subscription: EmitterSubscription) {\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(1);\n    }\n    super.removeSubscription(subscription);\n  }\n}\n\nmodule.exports = NativeEventEmitter;\n"]},"metadata":{},"sourceType":"script"}