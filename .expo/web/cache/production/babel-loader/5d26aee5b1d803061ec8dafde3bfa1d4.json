{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var TabBarIcon=function(_React$Component){(0,_inherits2.default)(TabBarIcon,_React$Component);function TabBarIcon(){(0,_classCallCheck2.default)(this,TabBarIcon);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(TabBarIcon).apply(this,arguments));}(0,_createClass2.default)(TabBarIcon,[{key:\"render\",value:function render(){var _this$props=this.props,route=_this$props.route,activeOpacity=_this$props.activeOpacity,inactiveOpacity=_this$props.inactiveOpacity,activeTintColor=_this$props.activeTintColor,inactiveTintColor=_this$props.inactiveTintColor,renderIcon=_this$props.renderIcon,horizontal=_this$props.horizontal,style=_this$props.style;return _react.default.createElement(_reactNative.View,{style:style},_react.default.createElement(_reactNative.Animated.View,{style:[styles.icon,{opacity:activeOpacity}]},renderIcon({route:route,focused:true,horizontal:horizontal,tintColor:activeTintColor})),_react.default.createElement(_reactNative.Animated.View,{style:[styles.icon,{opacity:inactiveOpacity}]},renderIcon({route:route,focused:false,horizontal:horizontal,tintColor:inactiveTintColor})));}}]);return TabBarIcon;}(_react.default.Component);exports.default=TabBarIcon;var styles=_reactNative.StyleSheet.create({icon:{position:'absolute',alignSelf:'center',alignItems:'center',justifyContent:'center',height:'100%',width:'100%',minWidth:25}});","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-navigation-tabs/dist/views/CrossFadeIcon.js"],"names":["TabBarIcon","props","route","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","horizontal","style","styles","icon","opacity","focused","tintColor","React","Component","StyleSheet","create","position","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":"6nBAAA,oDACA,yC,GAEqBA,CAAAA,U,mVACV,iBAUH,KAAKC,KAVF,CAELC,KAFK,aAELA,KAFK,CAGLC,aAHK,aAGLA,aAHK,CAILC,eAJK,aAILA,eAJK,CAKLC,eALK,aAKLA,eALK,CAMLC,iBANK,aAMLA,iBANK,CAOLC,UAPK,aAOLA,UAPK,CAQLC,UARK,aAQLA,UARK,CASLC,KATK,aASLA,KATK,CAcP,MAAO,8BAAC,iBAAD,EAAM,KAAK,CAAEA,KAAb,EACH,6BAAC,qBAAD,CAAU,IAAV,EAAe,KAAK,CAAE,CAACC,MAAM,CAACC,IAAR,CAAc,CAAEC,OAAO,CAAET,aAAX,CAAd,CAAtB,EACGI,UAAU,CAAC,CACZL,KAAK,CAALA,KADY,CAEZW,OAAO,CAAE,IAFG,CAGZL,UAAU,CAAVA,UAHY,CAIZM,SAAS,CAAET,eAJC,CAAD,CADb,CADG,CASH,6BAAC,qBAAD,CAAU,IAAV,EAAe,KAAK,CAAE,CAACK,MAAM,CAACC,IAAR,CAAc,CAAEC,OAAO,CAAER,eAAX,CAAd,CAAtB,EACGG,UAAU,CAAC,CACZL,KAAK,CAALA,KADY,CAEZW,OAAO,CAAE,KAFG,CAGZL,UAAU,CAAVA,UAHY,CAIZM,SAAS,CAAER,iBAJC,CAAD,CADb,CATG,CAAP,CAkBD,C,wBAjCqCS,eAAMC,S,6BAoC9C,GAAMN,CAAAA,MAAM,CAAGO,wBAAWC,MAAX,CAAkB,CAC/BP,IAAI,CAAE,CAIJQ,QAAQ,CAAE,UAJN,CAKJC,SAAS,CAAE,QALP,CAMJC,UAAU,CAAE,QANR,CAOJC,cAAc,CAAE,QAPZ,CAQJC,MAAM,CAAE,MARJ,CASJC,KAAK,CAAE,MATH,CAWJC,QAAQ,CAAE,EAXN,CADyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\n\nexport default class TabBarIcon extends React.Component {\n  render() {\n    const {\n      route,\n      activeOpacity,\n      inactiveOpacity,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      horizontal,\n      style\n    } = this.props;\n\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them.\n    return <View style={style}>\n        <Animated.View style={[styles.icon, { opacity: activeOpacity }]}>\n          {renderIcon({\n          route,\n          focused: true,\n          horizontal,\n          tintColor: activeTintColor\n        })}\n        </Animated.View>\n        <Animated.View style={[styles.icon, { opacity: inactiveOpacity }]}>\n          {renderIcon({\n          route,\n          focused: false,\n          horizontal,\n          tintColor: inactiveTintColor\n        })}\n        </Animated.View>\n      </View>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25\n  }\n});"]},"metadata":{},"sourceType":"script"}