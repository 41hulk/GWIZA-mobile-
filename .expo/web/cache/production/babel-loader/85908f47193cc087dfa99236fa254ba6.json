{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _uriParser=_interopRequireDefault(require(\"uri-parser\"));var _urlJoin=_interopRequireDefault(require(\"url-join\"));var _reactNative=require(\"react-native\");var _AssetRegistry=_interopRequireDefault(require(\"react-native/Libraries/Image/AssetRegistry\"));var _AssetSourceResolver=_interopRequireDefault(require(\"react-native/Libraries/Image/AssetSourceResolver\"));var _resolveAssetSource=_interopRequireDefault(require(\"react-native/Libraries/Image/resolveAssetSource\"));var FS,Constants;try{FS=require('expo-file-system').FileSystem;}catch(error){throw new Error('`expo-asset` requires `expo-file-system` package to be installed and linked.');}try{Constants=require('expo-constants').Constants;}catch(error){throw new Error('`expo-asset` requires `expo-constants` package to be installed and linked.');}var parser=new _uriParser.default.Parser();var bundledAssets=new Set(FS.bundledAssets||[]);var assetMapOverride=Constants.manifest&&Constants.manifest.assetMapOverride;var getManifestBaseUrl=function getManifestBaseUrl(manifestUrl){var urlComponents=parser.parse(manifestUrl);if(urlComponents.protocol==='exp'){urlComponents.protocol='http';}else if(urlComponents.protocol==='exps'){urlComponents.protocol='https';}urlComponents.relative=urlComponents.directory;return parser.format(urlComponents);};var manifestBaseUrl=Constants.experienceUrl?getManifestBaseUrl(Constants.experienceUrl):null;var resolveIfRelative=function resolveIfRelative(uri){var uriComponents=parser.parse(uri);if(uriComponents.protocol===''&&manifestBaseUrl){return(0,_urlJoin.default)(manifestBaseUrl,uri.replace(/^\\.?\\//,''));}else{return uri;}};var pickScale=function pickScale(originalMeta){var meta=assetMapOverride?(0,_objectSpread2.default)({},originalMeta,assetMapOverride[originalMeta.hash]):originalMeta;var scale=meta.scales.length>1?_AssetSourceResolver.default.pickScale(meta.scales,_reactNative.PixelRatio.get()):1;var index=meta.scales.findIndex(function(s){return s===scale;});var hash=meta.fileHashes?meta.fileHashes[index]||meta.fileHashes[0]:meta.hash;var uri=meta.fileUris?meta.fileUris[index]||meta.fileUris[0]:meta.uri;var suffix='/'+meta.name+(scale===1?'':'@'+scale+'x')+'.'+meta.type+'?platform='+_reactNative.Platform.OS+'&hash='+meta.hash;if(uri){return{uri:resolveIfRelative(uri),hash:hash};}var assetUrlOverride=Constants.manifest&&Constants.manifest.assetUrlOverride;if(assetUrlOverride){return{uri:resolveIfRelative((0,_urlJoin.default)(assetUrlOverride,hash)),hash:hash};}if(/^https?:/.test(meta.httpServerLocation)){return{uri:meta.httpServerLocation+suffix,hash:hash};}if(Constants.manifest&&Constants.manifest.developer){return{uri:Constants.manifest.bundleUrl.match(/^https?:\\/\\/.*?\\//)[0]+meta.httpServerLocation.replace(/^\\/?/,'')+suffix,hash:hash};}return{uri:'https://d1wp6m56sqw74a.cloudfront.net/~assets/'+hash,hash:hash};};var getUriInBundle=function getUriInBundle(hash,type){var assetName='asset_'+hash+(type?'.'+type:'');if(__DEV__||Constants.appOwnership!=='standalone'||!bundledAssets.has(assetName)){return null;}return\"\"+FS.bundleDirectory+assetName;};var Asset=function(){function Asset(_ref){var name=_ref.name,type=_ref.type,hash=_ref.hash,uri=_ref.uri,width=_ref.width,height=_ref.height;(0,_classCallCheck2.default)(this,Asset);this.name=name;this.type=type;this.hash=hash;this.uri=uri;this.localUri=getUriInBundle(hash,type);if(typeof width==='number'){this.width=width;}if(typeof height==='number'){this.height=height;}this.downloading=false;this.downloaded=!!this.localUri;this.downloadCallbacks=[];}(0,_createClass2.default)(Asset,[{key:\"downloadAsync\",value:function downloadAsync(){var _this=this;var localUri,exists,md5,_ref2,_ref3;return _regenerator.default.async(function downloadAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!this.downloaded){_context.next=2;break;}return _context.abrupt(\"return\");case 2:if(!this.downloading){_context.next=6;break;}_context.next=5;return _regenerator.default.awrap(new Promise(function(resolve,reject){return _this.downloadCallbacks.push({resolve:resolve,reject:reject});}));case 5:return _context.abrupt(\"return\");case 6:this.downloading=true;_context.prev=7;localUri=FS.cacheDirectory+\"ExponentAsset-\"+this.hash+\".\"+this.type;_context.next=11;return _regenerator.default.awrap(FS.getInfoAsync(localUri,{cache:true,md5:true}));case 11:_ref2=_context.sent;exists=_ref2.exists;md5=_ref2.md5;if(!(!exists||md5!==this.hash)){_context.next=21;break;}_context.next=17;return _regenerator.default.awrap(FS.downloadAsync(this.uri,localUri,{cache:true,md5:true}));case 17:_ref3=_context.sent;md5=_ref3.md5;if(!(md5!==this.hash)){_context.next=21;break;}throw new Error(\"Downloaded file for asset '\"+this.name+\".\"+this.type+\"' \"+(\"Located at \"+this.uri+\" \")+\"failed MD5 integrity check\");case 21:this.localUri=localUri;this.downloaded=true;this.downloadCallbacks.forEach(function(_ref4){var resolve=_ref4.resolve;return resolve();});_context.next=30;break;case 26:_context.prev=26;_context.t0=_context[\"catch\"](7);this.downloadCallbacks.forEach(function(_ref5){var reject=_ref5.reject;return reject(_context.t0);});throw _context.t0;case 30:_context.prev=30;this.downloading=false;this.downloadCallbacks=[];return _context.finish(30);case 34:case\"end\":return _context.stop();}}},null,this,[[7,26,30,34]]);}}],[{key:\"loadAsync\",value:function loadAsync(moduleId){var moduleIds=typeof moduleId==='number'?[moduleId]:moduleId;return Promise.all(moduleIds.map(function(m){return Asset.fromModule(m).downloadAsync();}));}},{key:\"fromModule\",value:function fromModule(moduleId){var meta=_AssetRegistry.default.getAssetByID(moduleId);return Asset.fromMetadata(meta);}},{key:\"fromMetadata\",value:function fromMetadata(meta){var metaHash=meta.hash;if(Asset.byHash[metaHash]){return Asset.byHash[metaHash];}var _pickScale=pickScale(meta),uri=_pickScale.uri,hash=_pickScale.hash;var asset=new Asset({name:meta.name,type:meta.type,hash:hash,uri:uri,width:meta.width,height:meta.height});Asset.byHash[metaHash]=asset;return asset;}}]);return Asset;}();exports.default=Asset;Asset.byHash={};_resolveAssetSource.default.setCustomSourceTransformer(function(resolver){var asset=Asset.fromMetadata(resolver.asset);return resolver.fromSource(asset.downloaded?asset.localUri:asset.uri);});","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/expo-asset/src/Asset.js"],"names":["FS","Constants","require","FileSystem","error","Error","parser","uriparser","Parser","bundledAssets","Set","assetMapOverride","manifest","getManifestBaseUrl","manifestUrl","urlComponents","parse","protocol","relative","directory","format","manifestBaseUrl","experienceUrl","resolveIfRelative","uri","uriComponents","replace","pickScale","originalMeta","meta","hash","scale","scales","length","AssetSourceResolver","PixelRatio","get","index","findIndex","s","fileHashes","fileUris","suffix","name","type","Platform","OS","assetUrlOverride","test","httpServerLocation","developer","bundleUrl","match","getUriInBundle","assetName","__DEV__","appOwnership","has","bundleDirectory","Asset","width","height","localUri","downloading","downloaded","downloadCallbacks","Promise","resolve","reject","push","cacheDirectory","getInfoAsync","cache","md5","exists","downloadAsync","forEach","moduleId","moduleIds","all","map","m","fromModule","AssetRegistry","getAssetByID","fromMetadata","metaHash","byHash","asset","resolveAssetSource","setCustomSourceTransformer","resolver","fromSource"],"mappings":"kgBAAA,6DACA,yDACA,yCACA,iGACA,6GACA,2GAEA,GAAIA,CAAAA,EAAJ,CAAQC,SAAR,CAEA,GAAI,CACFD,EAAE,CAAGE,OAAO,CAAC,kBAAD,CAAP,CAA4BC,UAAjC,CACD,CAAC,MAAOC,KAAP,CAAc,CACd,KAAM,IAAIC,CAAAA,KAAJ,CAAU,8EAAV,CAAN,CACD,CAED,GAAI,CACFJ,SAAS,CAAGC,OAAO,CAAC,gBAAD,CAAP,CAA0BD,SAAtC,CACD,CAAC,MAAOG,KAAP,CAAc,CACd,KAAM,IAAIC,CAAAA,KAAJ,CAAU,4EAAV,CAAN,CACD,CAED,GAAMC,CAAAA,MAAM,CAAG,GAAIC,oBAAUC,MAAd,EAAf,CAGA,GAAMC,CAAAA,aAAa,CAAG,GAAIC,CAAAA,GAAJ,CAAQV,EAAE,CAACS,aAAH,EAAoB,EAA5B,CAAtB,CAGA,GAAME,CAAAA,gBAAgB,CAAGV,SAAS,CAACW,QAAV,EAAsBX,SAAS,CAACW,QAAV,CAAmBD,gBAAlE,CAGA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,WAAW,CAAI,CACxC,GAAMC,CAAAA,aAAa,CAAGT,MAAM,CAACU,KAAP,CAAaF,WAAb,CAAtB,CAGA,GAAIC,aAAa,CAACE,QAAd,GAA2B,KAA/B,CAAsC,CACpCF,aAAa,CAACE,QAAd,CAAyB,MAAzB,CACD,CAFD,IAEO,IAAIF,aAAa,CAACE,QAAd,GAA2B,MAA/B,CAAuC,CAC5CF,aAAa,CAACE,QAAd,CAAyB,OAAzB,CACD,CAGDF,aAAa,CAACG,QAAd,CAAyBH,aAAa,CAACI,SAAvC,CACA,MAAOb,CAAAA,MAAM,CAACc,MAAP,CAAcL,aAAd,CAAP,CACD,CAbD,CAgBA,GAAMM,CAAAA,eAAe,CAAGpB,SAAS,CAACqB,aAAV,CACpBT,kBAAkB,CAACZ,SAAS,CAACqB,aAAX,CADE,CAEpB,IAFJ,CAKA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,GAAG,CAAI,CAC/B,GAAMC,CAAAA,aAAa,CAAGnB,MAAM,CAACU,KAAP,CAAaQ,GAAb,CAAtB,CACA,GAAIC,aAAa,CAACR,QAAd,GAA2B,EAA3B,EAAiCI,eAArC,CAAsD,CAEpD,MAAO,qBAAQA,eAAR,CAAyBG,GAAG,CAACE,OAAJ,CAAY,QAAZ,CAAsB,EAAtB,CAAzB,CAAP,CACD,CAHD,IAGO,CACL,MAAOF,CAAAA,GAAP,CACD,CACF,CARD,CAYA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,YAAY,CAAI,CAEhC,GAAMC,CAAAA,IAAI,CAAGlB,gBAAgB,+BACpBiB,YADoB,CACHjB,gBAAgB,CAACiB,YAAY,CAACE,IAAd,CADb,EAEzBF,YAFJ,CAMA,GAAMG,CAAAA,KAAK,CACTF,IAAI,CAACG,MAAL,CAAYC,MAAZ,CAAqB,CAArB,CAAyBC,6BAAoBP,SAApB,CAA8BE,IAAI,CAACG,MAAnC,CAA2CG,wBAAWC,GAAX,EAA3C,CAAzB,CAAwF,CAD1F,CAEA,GAAMC,CAAAA,KAAK,CAAGR,IAAI,CAACG,MAAL,CAAYM,SAAZ,CAAsB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,GAAKR,KAAV,EAAvB,CAAd,CACA,GAAMD,CAAAA,IAAI,CAAGD,IAAI,CAACW,UAAL,CAAkBX,IAAI,CAACW,UAAL,CAAgBH,KAAhB,GAA0BR,IAAI,CAACW,UAAL,CAAgB,CAAhB,CAA5C,CAAiEX,IAAI,CAACC,IAAnF,CACA,GAAMN,CAAAA,GAAG,CAAGK,IAAI,CAACY,QAAL,CAAgBZ,IAAI,CAACY,QAAL,CAAcJ,KAAd,GAAwBR,IAAI,CAACY,QAAL,CAAc,CAAd,CAAxC,CAA2DZ,IAAI,CAACL,GAA5E,CAEA,GAAMkB,CAAAA,MAAM,CACV,IACAb,IAAI,CAACc,IADL,EAECZ,KAAK,GAAK,CAAV,CAAc,EAAd,CAAmB,IAAMA,KAAN,CAAc,GAFlC,EAGA,GAHA,CAIAF,IAAI,CAACe,IAJL,CAKA,YALA,CAMAC,sBAASC,EANT,CAOA,QAPA,CAQAjB,IAAI,CAACC,IATP,CAYA,GAAIN,GAAJ,CAAS,CACP,MAAO,CACLA,GAAG,CAAED,iBAAiB,CAACC,GAAD,CADjB,CAELM,IAAI,CAAJA,IAFK,CAAP,CAID,CAGD,GAAMiB,CAAAA,gBAAgB,CAAG9C,SAAS,CAACW,QAAV,EAAsBX,SAAS,CAACW,QAAV,CAAmBmC,gBAAlE,CACA,GAAIA,gBAAJ,CAAsB,CACpB,MAAO,CACLvB,GAAG,CAAED,iBAAiB,CAAC,qBAAQwB,gBAAR,CAA0BjB,IAA1B,CAAD,CADjB,CAELA,IAAI,CAAJA,IAFK,CAAP,CAID,CAED,GAAI,WAAWkB,IAAX,CAAgBnB,IAAI,CAACoB,kBAArB,CAAJ,CAA8C,CAG5C,MAAO,CACLzB,GAAG,CAAEK,IAAI,CAACoB,kBAAL,CAA0BP,MAD1B,CAELZ,IAAI,CAAJA,IAFK,CAAP,CAID,CAED,GAAI7B,SAAS,CAACW,QAAV,EAAsBX,SAAS,CAACW,QAAV,CAAmBsC,SAA7C,CAAwD,CAEtD,MAAO,CACL1B,GAAG,CACDvB,SAAS,CAACW,QAAV,CAAmBuC,SAAnB,CAA6BC,KAA7B,CAAmC,mBAAnC,EAAwD,CAAxD,EACAvB,IAAI,CAACoB,kBAAL,CAAwBvB,OAAxB,CAAgC,MAAhC,CAAwC,EAAxC,CADA,CAEAgB,MAJG,CAKLZ,IAAI,CAAJA,IALK,CAAP,CAOD,CAGD,MAAO,CACLN,GAAG,CAAE,iDAAmDM,IADnD,CAELA,IAAI,CAAJA,IAFK,CAAP,CAID,CAnED,CAuEA,GAAMuB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACvB,IAAD,CAAOc,IAAP,CAAgB,CACrC,GAAMU,CAAAA,SAAS,CAAG,SAAWxB,IAAX,EAAmBc,IAAI,CAAG,IAAMA,IAAT,CAAgB,EAAvC,CAAlB,CACA,GAAIW,OAAO,EAAItD,SAAS,CAACuD,YAAV,GAA2B,YAAtC,EAAsD,CAAC/C,aAAa,CAACgD,GAAd,CAAkBH,SAAlB,CAA3D,CAAyF,CACvF,MAAO,KAAP,CACD,CACD,SAAUtD,EAAE,CAAC0D,eAAb,CAA+BJ,SAA/B,CACD,CAND,C,GAQqBK,CAAAA,K,YAGnB,oBAAsD,IAAxChB,CAAAA,IAAwC,MAAxCA,IAAwC,CAAlCC,IAAkC,MAAlCA,IAAkC,CAA5Bd,IAA4B,MAA5BA,IAA4B,CAAtBN,GAAsB,MAAtBA,GAAsB,CAAjBoC,KAAiB,MAAjBA,KAAiB,CAAVC,MAAU,MAAVA,MAAU,0CACpD,KAAKlB,IAAL,CAAYA,IAAZ,CACA,KAAKC,IAAL,CAAYA,IAAZ,CACA,KAAKd,IAAL,CAAYA,IAAZ,CACA,KAAKN,GAAL,CAAWA,GAAX,CACA,KAAKsC,QAAL,CAAgBT,cAAc,CAACvB,IAAD,CAAOc,IAAP,CAA9B,CACA,GAAI,MAAOgB,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7B,KAAKA,KAAL,CAAaA,KAAb,CACD,CACD,GAAI,MAAOC,CAAAA,MAAP,GAAkB,QAAtB,CAAgC,CAC9B,KAAKA,MAAL,CAAcA,MAAd,CACD,CAED,KAAKE,WAAL,CAAmB,KAAnB,CACA,KAAKC,UAAL,CAAkB,CAAC,CAAC,KAAKF,QAAzB,CACA,KAAKG,iBAAL,CAAyB,EAAzB,CACD,C,oQAmCK,KAAKD,U,qEAGL,KAAKD,W,2EACD,GAAIG,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,QAAqB,CAAA,KAAI,CAACH,iBAAL,CAAuBI,IAAvB,CAA4B,CAAEF,OAAO,CAAPA,OAAF,CAAWC,MAAM,CAANA,MAAX,CAA5B,CAArB,EAAZ,C,iDAGR,KAAKL,WAAL,CAAmB,IAAnB,C,gBAEQD,Q,CAAc9D,EAAE,CAACsE,c,kBAA+B,KAAKxC,I,KAAQ,KAAKc,I,oDAE/C5C,EAAE,CAACuE,YAAH,CAAgBT,QAAhB,CAA0B,CACjDU,KAAK,CAAE,IAD0C,CAEjDC,GAAG,CAAE,IAF4C,CAA1B,C,8BAAtBC,M,OAAAA,M,CAAQD,G,OAAAA,G,MAIP,CAACC,MAAD,EAAWD,GAAG,GAAK,KAAK3C,I,8EACT9B,EAAE,CAAC2E,aAAH,CAAiB,KAAKnD,GAAtB,CAA2BsC,QAA3B,CAAqC,CACpDU,KAAK,CAAE,IAD6C,CAEpDC,GAAG,CAAE,IAF+C,CAArC,C,8BAAdA,G,OAAAA,G,MAICA,GAAG,GAAK,KAAK3C,I,gCACT,IAAIzB,CAAAA,KAAJ,CACJ,8BAA8B,KAAKsC,IAAnC,KAA2C,KAAKC,IAAhD,qBACgB,KAAKpB,GADrB,kCADI,C,SAQV,KAAKsC,QAAL,CAAgBA,QAAhB,CACA,KAAKE,UAAL,CAAkB,IAAlB,CACA,KAAKC,iBAAL,CAAuBW,OAAvB,CAA+B,mBAAGT,CAAAA,OAAH,OAAGA,OAAH,OAAiBA,CAAAA,OAAO,EAAxB,EAA/B,E,iFAEA,KAAKF,iBAAL,CAAuBW,OAAvB,CAA+B,mBAAGR,CAAAA,MAAH,OAAGA,MAAH,OAAgBA,CAAAA,MAAM,aAAtB,EAA/B,E,2CAGA,KAAKL,WAAL,CAAmB,KAAnB,CACA,KAAKE,iBAAL,CAAyB,EAAzB,C,iJAtEaY,Q,CAAU,CACzB,GAAIC,CAAAA,SAAS,CAAG,MAAOD,CAAAA,QAAP,GAAoB,QAApB,CAA+B,CAACA,QAAD,CAA/B,CAA4CA,QAA5D,CACA,MAAOX,CAAAA,OAAO,CAACa,GAAR,CAAYD,SAAS,CAACE,GAAV,CAAc,SAAAC,CAAC,QAAItB,CAAAA,KAAK,CAACuB,UAAN,CAAiBD,CAAjB,EAAoBN,aAApB,EAAJ,EAAf,CAAZ,CAAP,CACD,C,8CAEiBE,Q,CAAU,CAC1B,GAAMhD,CAAAA,IAAI,CAAGsD,uBAAcC,YAAd,CAA2BP,QAA3B,CAAb,CACA,MAAOlB,CAAAA,KAAK,CAAC0B,YAAN,CAAmBxD,IAAnB,CAAP,CACD,C,kDAEmBA,I,CAAM,CAGxB,GAAMyD,CAAAA,QAAQ,CAAGzD,IAAI,CAACC,IAAtB,CACA,GAAI6B,KAAK,CAAC4B,MAAN,CAAaD,QAAb,CAAJ,CAA4B,CAC1B,MAAO3B,CAAAA,KAAK,CAAC4B,MAAN,CAAaD,QAAb,CAAP,CACD,CANuB,eAQF3D,SAAS,CAACE,IAAD,CARP,CAQhBL,GARgB,YAQhBA,GARgB,CAQXM,IARW,YAQXA,IARW,CAUxB,GAAM0D,CAAAA,KAAK,CAAG,GAAI7B,CAAAA,KAAJ,CAAU,CACtBhB,IAAI,CAAEd,IAAI,CAACc,IADW,CAEtBC,IAAI,CAAEf,IAAI,CAACe,IAFW,CAGtBd,IAAI,CAAJA,IAHsB,CAItBN,GAAG,CAAHA,GAJsB,CAKtBoC,KAAK,CAAE/B,IAAI,CAAC+B,KALU,CAMtBC,MAAM,CAAEhC,IAAI,CAACgC,MANS,CAAV,CAAd,CAQAF,KAAK,CAAC4B,MAAN,CAAaD,QAAb,EAAyBE,KAAzB,CACA,MAAOA,CAAAA,KAAP,CACD,C,2CAnDkB7B,K,CACZ4B,M,CAAS,E,CAgGlBE,4BAAmBC,0BAAnB,CAA8C,SAAAC,QAAQ,CAAI,CACxD,GAAMH,CAAAA,KAAK,CAAG7B,KAAK,CAAC0B,YAAN,CAAmBM,QAAQ,CAACH,KAA5B,CAAd,CACA,MAAOG,CAAAA,QAAQ,CAACC,UAAT,CAAoBJ,KAAK,CAACxB,UAAN,CAAmBwB,KAAK,CAAC1B,QAAzB,CAAoC0B,KAAK,CAAChE,GAA9D,CAAP,CACD,CAHD","sourcesContent":["import uriparser from 'uri-parser';\nimport urljoin from 'url-join';\nimport { PixelRatio, Platform } from 'react-native';\nimport AssetRegistry from 'react-native/Libraries/Image/AssetRegistry';\nimport AssetSourceResolver from 'react-native/Libraries/Image/AssetSourceResolver';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\n\nlet FS, Constants;\n\ntry {\n  FS = require('expo-file-system').FileSystem;\n} catch (error) {\n  throw new Error('`expo-asset` requires `expo-file-system` package to be installed and linked.');\n}\n\ntry {\n  Constants = require('expo-constants').Constants;\n} catch (error) {\n  throw new Error('`expo-asset` requires `expo-constants` package to be installed and linked.');\n}\n\nconst parser = new uriparser.Parser();\n\n// Fast lookup check if assets are available in the local bundle.\nconst bundledAssets = new Set(FS.bundledAssets || []);\n\n// Fast lookup check if asset map has any overrides in the manifest\nconst assetMapOverride = Constants.manifest && Constants.manifest.assetMapOverride;\n\n// get base url of manifest (ie) https://site.com\nconst getManifestBaseUrl = manifestUrl => {\n  const urlComponents = parser.parse(manifestUrl);\n\n  // change to http(s) if scheme is exp/exps\n  if (urlComponents.protocol === 'exp') {\n    urlComponents.protocol = 'http';\n  } else if (urlComponents.protocol === 'exps') {\n    urlComponents.protocol = 'https';\n  }\n\n  // trim file extension and query params, if any (ie) https://site.com/index.exp?s=q -> https://site.com\n  urlComponents.relative = urlComponents.directory;\n  return parser.format(urlComponents);\n};\n\n// compute manifest base url if available\nconst manifestBaseUrl = Constants.experienceUrl\n  ? getManifestBaseUrl(Constants.experienceUrl)\n  : null;\n\n// resolve against manifestBaseUrl if uri is relative\nconst resolveIfRelative = uri => {\n  const uriComponents = parser.parse(uri);\n  if (uriComponents.protocol === '' && manifestBaseUrl) {\n    // uri is relative (ie) ./assets, remove ./ prefix if exists\n    return urljoin(manifestBaseUrl, uri.replace(/^\\.?\\//, ''));\n  } else {\n    return uri;\n  }\n};\n\n// Return { uri, hash } for an asset's file, picking the correct scale, based on its React Native\n// metadata. If the asset isn't an image just picks the first file.\nconst pickScale = originalMeta => {\n  // Override with the asset map in manifest if available\n  const meta = assetMapOverride\n    ? { ...originalMeta, ...assetMapOverride[originalMeta.hash] }\n    : originalMeta;\n\n  // This logic is based on that in AssetSourceResolver.js, we just do it with our own tweaks for\n  // Expo\n  const scale =\n    meta.scales.length > 1 ? AssetSourceResolver.pickScale(meta.scales, PixelRatio.get()) : 1;\n  const index = meta.scales.findIndex(s => s === scale);\n  const hash = meta.fileHashes ? meta.fileHashes[index] || meta.fileHashes[0] : meta.hash;\n  const uri = meta.fileUris ? meta.fileUris[index] || meta.fileUris[0] : meta.uri;\n\n  const suffix =\n    '/' +\n    meta.name +\n    (scale === 1 ? '' : '@' + scale + 'x') +\n    '.' +\n    meta.type +\n    '?platform=' +\n    Platform.OS +\n    '&hash=' +\n    meta.hash;\n\n  // Allow asset processors to directly provide the URL that will be loaded\n  if (uri) {\n    return {\n      uri: resolveIfRelative(uri),\n      hash,\n    };\n  }\n\n  // Check if the assetUrl was overriden in the manifest\n  const assetUrlOverride = Constants.manifest && Constants.manifest.assetUrlOverride;\n  if (assetUrlOverride) {\n    return {\n      uri: resolveIfRelative(urljoin(assetUrlOverride, hash)),\n      hash,\n    };\n  }\n\n  if (/^https?:/.test(meta.httpServerLocation)) {\n    // This is a full URL, so we avoid prepending bundle URL/cloudfront\n    // This usually means Asset is on a different server, and the URL is present in the bundle\n    return {\n      uri: meta.httpServerLocation + suffix,\n      hash,\n    };\n  }\n\n  if (Constants.manifest && Constants.manifest.developer) {\n    // Development server URI is pieced together\n    return {\n      uri:\n        Constants.manifest.bundleUrl.match(/^https?:\\/\\/.*?\\//)[0] +\n        meta.httpServerLocation.replace(/^\\/?/, '') +\n        suffix,\n      hash,\n    };\n  }\n\n  // CDN URI is based directly on the hash\n  return {\n    uri: 'https://d1wp6m56sqw74a.cloudfront.net/~assets/' + hash,\n    hash,\n  };\n};\n\n// Returns the uri of an asset from its hash and type or null if the asset is\n// not included in the app bundle.\nconst getUriInBundle = (hash, type) => {\n  const assetName = 'asset_' + hash + (type ? '.' + type : '');\n  if (__DEV__ || Constants.appOwnership !== 'standalone' || !bundledAssets.has(assetName)) {\n    return null;\n  }\n  return `${FS.bundleDirectory}${assetName}`;\n};\n\nexport default class Asset {\n  static byHash = {};\n\n  constructor({ name, type, hash, uri, width, height }) {\n    this.name = name;\n    this.type = type;\n    this.hash = hash;\n    this.uri = uri;\n    this.localUri = getUriInBundle(hash, type);\n    if (typeof width === 'number') {\n      this.width = width;\n    }\n    if (typeof height === 'number') {\n      this.height = height;\n    }\n\n    this.downloading = false;\n    this.downloaded = !!this.localUri;\n    this.downloadCallbacks = [];\n  }\n\n  static loadAsync(moduleId) {\n    let moduleIds = typeof moduleId === 'number' ? [moduleId] : moduleId;\n    return Promise.all(moduleIds.map(m => Asset.fromModule(m).downloadAsync()));\n  }\n\n  static fromModule(moduleId) {\n    const meta = AssetRegistry.getAssetByID(moduleId);\n    return Asset.fromMetadata(meta);\n  }\n\n  static fromMetadata(meta) {\n    // The hash of the whole asset, not to confuse with the hash of a specific\n    // file returned from `pickScale`.\n    const metaHash = meta.hash;\n    if (Asset.byHash[metaHash]) {\n      return Asset.byHash[metaHash];\n    }\n\n    const { uri, hash } = pickScale(meta);\n\n    const asset = new Asset({\n      name: meta.name,\n      type: meta.type,\n      hash,\n      uri,\n      width: meta.width,\n      height: meta.height,\n    });\n    Asset.byHash[metaHash] = asset;\n    return asset;\n  }\n\n  async downloadAsync() {\n    if (this.downloaded) {\n      return;\n    }\n    if (this.downloading) {\n      await new Promise((resolve, reject) => this.downloadCallbacks.push({ resolve, reject }));\n      return;\n    }\n    this.downloading = true;\n    try {\n      const localUri = `${FS.cacheDirectory}ExponentAsset-${this.hash}.${this.type}`;\n      let exists, md5;\n      ({ exists, md5 } = await FS.getInfoAsync(localUri, {\n        cache: true,\n        md5: true,\n      }));\n      if (!exists || md5 !== this.hash) {\n        ({ md5 } = await FS.downloadAsync(this.uri, localUri, {\n          cache: true,\n          md5: true,\n        }));\n        if (md5 !== this.hash) {\n          throw new Error(\n            `Downloaded file for asset '${this.name}.${this.type}' ` +\n              `Located at ${this.uri} ` +\n              `failed MD5 integrity check`\n          );\n        }\n      }\n\n      this.localUri = localUri;\n      this.downloaded = true;\n      this.downloadCallbacks.forEach(({ resolve }) => resolve());\n    } catch (e) {\n      this.downloadCallbacks.forEach(({ reject }) => reject(e));\n      throw e;\n    } finally {\n      this.downloading = false;\n      this.downloadCallbacks = [];\n    }\n  }\n}\n\n// Override React Native's asset resolution for `Image` components\nresolveAssetSource.setCustomSourceTransformer(resolver => {\n  const asset = Asset.fromMetadata(resolver.asset);\n  return resolver.fromSource(asset.downloaded ? asset.localUri : asset.uri);\n});\n"]},"metadata":{},"sourceType":"script"}