{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _AnimatedEvent=require(\"react-native/Libraries/Animated/src/AnimatedEvent\");var _reactNativeGestureHandler=require(\"react-native-gesture-handler\");var DRAG_TOSS=0.05;if(!Math.sign){Math.sign=function(x){return(x>0)-(x<0)||+x;};}var Swipeable=function(_Component){(0,_inherits2.default)(Swipeable,_Component);function Swipeable(_props){var _this;(0,_classCallCheck2.default)(this,Swipeable);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(Swipeable).call(this,_props));_this._updateAnimatedEvent=function(props,state){var friction=props.friction,useNativeAnimations=props.useNativeAnimations;var dragX=state.dragX,rowTranslation=state.rowTranslation,_state$leftWidth=state.leftWidth,leftWidth=_state$leftWidth===void 0?0:_state$leftWidth,_state$rowWidth=state.rowWidth,rowWidth=_state$rowWidth===void 0?0:_state$rowWidth;var _state$rightOffset=state.rightOffset,rightOffset=_state$rightOffset===void 0?rowWidth:_state$rightOffset;var rightWidth=Math.max(0,rowWidth-rightOffset);var _props$overshootLeft=props.overshootLeft,overshootLeft=_props$overshootLeft===void 0?leftWidth>0:_props$overshootLeft,_props$overshootRight=props.overshootRight,overshootRight=_props$overshootRight===void 0?rightWidth>0:_props$overshootRight;var transX=_reactNative.Animated.add(rowTranslation,dragX.interpolate({inputRange:[0,friction],outputRange:[0,1]})).interpolate({inputRange:[-rightWidth-1,-rightWidth,leftWidth,leftWidth+1],outputRange:[-rightWidth-(overshootRight?1:0),-rightWidth,leftWidth,leftWidth+(overshootLeft?1:0)]});_this._transX=transX;_this._showLeftAction=leftWidth>0?transX.interpolate({inputRange:[-1,0,leftWidth],outputRange:[0,0,1],extrapolate:'clamp'}):new _reactNative.Animated.Value(0);_this._leftActionTranslate=_this._showLeftAction.interpolate({inputRange:[0,Number.MIN_VALUE],outputRange:[-10000,0],extrapolate:'clamp'});_this._showRightAction=rightWidth>0?transX.interpolate({inputRange:[-rightWidth,0,1],outputRange:[1,0,0],extrapolate:'clamp'}):new _reactNative.Animated.Value(0);_this._rightActionTranslate=_this._showRightAction.interpolate({inputRange:[0,Number.MIN_VALUE],outputRange:[-10000,0],extrapolate:'clamp'});};_this._onTapHandlerStateChange=function(_ref){var nativeEvent=_ref.nativeEvent;if(nativeEvent.oldState===_reactNativeGestureHandler.State.ACTIVE){_this.close();}};_this._onHandlerStateChange=function(_ref2){var nativeEvent=_ref2.nativeEvent;if(nativeEvent.oldState===_reactNativeGestureHandler.State.ACTIVE){_this._handleRelease(nativeEvent);}};_this._handleRelease=function(nativeEvent){var velocityX=nativeEvent.velocityX,dragX=nativeEvent.translationX;var _this$state=_this.state,_this$state$leftWidth=_this$state.leftWidth,leftWidth=_this$state$leftWidth===void 0?0:_this$state$leftWidth,_this$state$rowWidth=_this$state.rowWidth,rowWidth=_this$state$rowWidth===void 0?0:_this$state$rowWidth,rowState=_this$state.rowState;var _this$state$rightOffs=_this.state.rightOffset,rightOffset=_this$state$rightOffs===void 0?rowWidth:_this$state$rightOffs;var rightWidth=rowWidth-rightOffset;var _this$props=_this.props,friction=_this$props.friction,_this$props$leftThres=_this$props.leftThreshold,leftThreshold=_this$props$leftThres===void 0?leftWidth/2:_this$props$leftThres,_this$props$rightThre=_this$props.rightThreshold,rightThreshold=_this$props$rightThre===void 0?rightWidth/2:_this$props$rightThre;var startOffsetX=_this._currentOffset()+dragX/friction;var translationX=(dragX+DRAG_TOSS*velocityX)/friction;var toValue=0;if(rowState===0){if(translationX>leftThreshold){toValue=leftWidth;}else if(translationX<-rightThreshold){toValue=-rightWidth;}}else if(rowState===1){if(translationX>-leftThreshold){toValue=leftWidth;}}else{if(translationX<rightThreshold){toValue=-rightWidth;}}_this._animateRow(startOffsetX,toValue,velocityX/friction);};_this._animateRow=function(fromValue,toValue,velocityX){var _this$state2=_this.state,dragX=_this$state2.dragX,rowTranslation=_this$state2.rowTranslation;dragX.setValue(0);rowTranslation.setValue(fromValue);_this.setState({rowState:Math.sign(toValue)});_reactNative.Animated.spring(rowTranslation,(0,_objectSpread2.default)({restSpeedThreshold:1.7,restDisplacementThreshold:0.4,velocity:velocityX,bounciness:0,toValue:toValue,useNativeDriver:_this.props.useNativeAnimations},_this.props.animationOptions)).start(function(_ref3){var finished=_ref3.finished;if(finished){if(toValue>0&&_this.props.onSwipeableLeftOpen){_this.props.onSwipeableLeftOpen();}else if(toValue<0&&_this.props.onSwipeableRightOpen){_this.props.onSwipeableRightOpen();}if(toValue===0){_this.props.onSwipeableClose&&_this.props.onSwipeableClose();}else{_this.props.onSwipeableOpen&&_this.props.onSwipeableOpen();}}});if(toValue>0&&_this.props.onSwipeableLeftWillOpen){_this.props.onSwipeableLeftWillOpen();}else if(toValue<0&&_this.props.onSwipeableRightWillOpen){_this.props.onSwipeableRightWillOpen();}if(toValue===0){_this.props.onSwipeableWillClose&&_this.props.onSwipeableWillClose();}else{_this.props.onSwipeableWillOpen&&_this.props.onSwipeableWillOpen();}};_this._onRowLayout=function(_ref4){var nativeEvent=_ref4.nativeEvent;_this.setState({rowWidth:nativeEvent.layout.width});};_this._currentOffset=function(){var _this$state3=_this.state,_this$state3$leftWidt=_this$state3.leftWidth,leftWidth=_this$state3$leftWidt===void 0?0:_this$state3$leftWidt,_this$state3$rowWidth=_this$state3.rowWidth,rowWidth=_this$state3$rowWidth===void 0?0:_this$state3$rowWidth,rowState=_this$state3.rowState;var _this$state$rightOffs2=_this.state.rightOffset,rightOffset=_this$state$rightOffs2===void 0?rowWidth:_this$state$rightOffs2;var rightWidth=rowWidth-rightOffset;if(rowState===1){return leftWidth;}else if(rowState===-1){return-rightWidth;}return 0;};_this.close=function(){_this._animateRow(_this._currentOffset(),0);};_this.openLeft=function(){var _this$state$leftWidth2=_this.state.leftWidth,leftWidth=_this$state$leftWidth2===void 0?0:_this$state$leftWidth2;_this._animateRow(_this._currentOffset(),leftWidth);};_this.openRight=function(){var _this$state$rowWidth2=_this.state.rowWidth,rowWidth=_this$state$rowWidth2===void 0?0:_this$state$rowWidth2;var _this$state$rightOffs3=_this.state.rightOffset,rightOffset=_this$state$rightOffs3===void 0?rowWidth:_this$state$rightOffs3;var rightWidth=rowWidth-rightOffset;_this._animateRow(_this._currentOffset(),-rightWidth);};var _dragX=new _reactNative.Animated.Value(0);_this.state={dragX:_dragX,rowTranslation:new _reactNative.Animated.Value(0),rowState:0,leftWidth:undefined,rightOffset:undefined,rowWidth:undefined};_this._updateAnimatedEvent(_props,_this.state);_this._onGestureEvent=_reactNative.Animated.event([{nativeEvent:{translationX:_dragX}}],{useNativeDriver:_props.useNativeAnimations});return _this;}(0,_createClass2.default)(Swipeable,[{key:\"componentWillUpdate\",value:function componentWillUpdate(props,state){if(this.props.friction!==props.friction||this.props.overshootLeft!==props.overshootLeft||this.props.overshootRight!==props.overshootRight||this.state.leftWidth!==state.leftWidth||this.state.rightOffset!==state.rightOffset||this.state.rowWidth!==state.rowWidth){this._updateAnimatedEvent(props,state);}}},{key:\"render\",value:function render(){var _this2=this;var rowState=this.state.rowState;var _this$props2=this.props,children=_this$props2.children,renderLeftActions=_this$props2.renderLeftActions,renderRightActions=_this$props2.renderRightActions;var left=renderLeftActions&&_react.default.createElement(_reactNative.Animated.View,{style:[styles.leftActions,{transform:[{translateX:this._leftActionTranslate}]}]},renderLeftActions(this._showLeftAction,this._transX),_react.default.createElement(_reactNative.View,{onLayout:function onLayout(_ref5){var nativeEvent=_ref5.nativeEvent;return _this2.setState({leftWidth:nativeEvent.layout.x});}}));var right=renderRightActions&&_react.default.createElement(_reactNative.Animated.View,{style:[styles.rightActions,{transform:[{translateX:this._rightActionTranslate}]}]},renderRightActions(this._showRightAction,this._transX),_react.default.createElement(_reactNative.View,{onLayout:function onLayout(_ref6){var nativeEvent=_ref6.nativeEvent;return _this2.setState({rightOffset:nativeEvent.layout.x});}}));return _react.default.createElement(_reactNativeGestureHandler.PanGestureHandler,(0,_extends2.default)({},this.props,{minDeltaX:10,onGestureEvent:this._onGestureEvent,onHandlerStateChange:this._onHandlerStateChange}),_react.default.createElement(_reactNative.Animated.View,{onLayout:this._onRowLayout,style:styles.container},left,right,_react.default.createElement(_reactNativeGestureHandler.TapGestureHandler,{enabled:rowState!==0,onHandlerStateChange:this._onTapHandlerStateChange},_react.default.createElement(_reactNative.Animated.View,{pointerEvents:rowState===0?'auto':'box-only',style:{transform:[{translateX:this._transX}]}},children))));}}]);return Swipeable;}(_react.Component);exports.default=Swipeable;Swipeable.defaultProps={friction:1,useNativeAnimations:true};var styles=_reactNative.StyleSheet.create({container:{overflow:'hidden'},leftActions:(0,_objectSpread2.default)({},_reactNative.StyleSheet.absoluteFillObject,{flexDirection:'row'}),rightActions:(0,_objectSpread2.default)({},_reactNative.StyleSheet.absoluteFillObject,{flexDirection:'row-reverse'})});","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native-gesture-handler/Swipeable.js"],"names":["DRAG_TOSS","Math","sign","x","Swipeable","props","_updateAnimatedEvent","state","friction","useNativeAnimations","dragX","rowTranslation","leftWidth","rowWidth","rightOffset","rightWidth","max","overshootLeft","overshootRight","transX","Animated","add","interpolate","inputRange","outputRange","_transX","_showLeftAction","extrapolate","Value","_leftActionTranslate","Number","MIN_VALUE","_showRightAction","_rightActionTranslate","_onTapHandlerStateChange","nativeEvent","oldState","State","ACTIVE","close","_onHandlerStateChange","_handleRelease","velocityX","translationX","rowState","leftThreshold","rightThreshold","startOffsetX","_currentOffset","toValue","_animateRow","fromValue","setValue","setState","spring","restSpeedThreshold","restDisplacementThreshold","velocity","bounciness","useNativeDriver","animationOptions","start","finished","onSwipeableLeftOpen","onSwipeableRightOpen","onSwipeableClose","onSwipeableOpen","onSwipeableLeftWillOpen","onSwipeableRightWillOpen","onSwipeableWillClose","onSwipeableWillOpen","_onRowLayout","layout","width","openLeft","openRight","undefined","_onGestureEvent","event","children","renderLeftActions","renderRightActions","left","styles","leftActions","transform","translateX","right","rightActions","container","Component","defaultProps","StyleSheet","create","overflow","absoluteFillObject","flexDirection"],"mappings":"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","sourcesContent":["// @flow\n\n// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. ALthough, keeping it here for the time being will allow us\n// to move faster and fix possible issues quicker\n\nimport React, { Component } from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { AnimatedEvent } from 'react-native/Libraries/Animated/src/AnimatedEvent';\n\nimport {\n  PanGestureHandler,\n  TapGestureHandler,\n  State,\n} from 'react-native-gesture-handler';\n\nconst DRAG_TOSS = 0.05;\n\n// Math.sign polyfill for iOS 8.x\nif (!Math.sign) {\n  Math.sign = function(x) {\n    return (x > 0) - (x < 0) || +x;\n  };\n}\n\nexport type PropType = {\n  children: any,\n  friction: number,\n  leftThreshold?: number,\n  rightThreshold?: number,\n  overshootLeft?: boolean,\n  overshootRight?: boolean,\n  onSwipeableLeftOpen?: Function,\n  onSwipeableRightOpen?: Function,\n  onSwipeableOpen?: Function,\n  onSwipeableClose?: Function,\n  onSwipeableLeftWillOpen?: Function,\n  onSwipeableRightWillOpen?: Function,\n  onSwipeableWillOpen?: Function,\n  onSwipeableWillClose?: Function,\n  renderLeftActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  renderRightActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  useNativeAnimations: boolean,\n  animationOptions?: object,\n};\ntype StateType = {\n  dragX: Animated.Value,\n  rowTranslation: Animated.Value,\n  rowState: number,\n  leftWidth: number | typeof undefined,\n  rightOffset: number | typeof undefined,\n  rowWidth: number | typeof undefined,\n};\n\nexport default class Swipeable extends Component<PropType, StateType> {\n  static defaultProps = {\n    friction: 1,\n    useNativeAnimations: true,\n  };\n  _onGestureEvent: ?AnimatedEvent;\n  _transX: ?Animated.Interpolation;\n  _showLeftAction: ?Animated.Interpolation;\n  _leftActionTranslate: ?Animated.Interpolation;\n  _showRightAction: ?Animated.Interpolation;\n  _rightActionTranslate: ?Animated.Interpolation;\n\n  constructor(props: PropType) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this._updateAnimatedEvent(props, this.state);\n\n    this._onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations }\n    );\n  }\n\n  componentWillUpdate(props: PropType, state: StateType) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this._updateAnimatedEvent(props, state);\n    }\n  }\n\n  _updateAnimatedEvent = (props: PropType, state: StateType) => {\n    const { friction, useNativeAnimations } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const {\n      overshootLeft = leftWidth > 0,\n      overshootRight = rightWidth > 0,\n    } = props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [-rightWidth - 1, -rightWidth, leftWidth, leftWidth + 1],\n      outputRange: [\n        -rightWidth - (overshootRight ? 1 : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 : 0),\n      ],\n    });\n    this._transX = transX;\n    this._showLeftAction = leftWidth > 0 \n      ? transX.interpolate({\n          inputRange: [-1, 0, leftWidth],\n          outputRange: [0, 0, 1],\n          extrapolate: 'clamp',\n        })\n      : new Animated.Value(0);\n    this._leftActionTranslate = this._showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this._showRightAction = rightWidth > 0 \n      ? transX.interpolate({\n          inputRange: [-rightWidth, 0, 1],\n          outputRange: [1, 0, 0],\n          extrapolate: 'clamp',\n        })\n      : new Animated.Value(0);\n    this._rightActionTranslate = this._showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  _onTapHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  _onHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this._handleRelease(nativeEvent);\n    }\n  };\n\n  _handleRelease = nativeEvent => {\n    const { velocityX, translationX: dragX } = nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this._currentOffset() + dragX / friction;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this._animateRow(startOffsetX, toValue, velocityX / friction);\n  };\n\n  _animateRow = (fromValue, toValue, velocityX) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0 && this.props.onSwipeableLeftOpen) {\n          this.props.onSwipeableLeftOpen();\n        } else if (toValue < 0 && this.props.onSwipeableRightOpen) {\n          this.props.onSwipeableRightOpen();\n        }\n\n        if (toValue === 0) {\n          this.props.onSwipeableClose && this.props.onSwipeableClose();\n        } else {\n          this.props.onSwipeableOpen && this.props.onSwipeableOpen();\n        }\n      }\n    });\n    if (toValue > 0 && this.props.onSwipeableLeftWillOpen) {\n      this.props.onSwipeableLeftWillOpen();\n    } else if (toValue < 0 && this.props.onSwipeableRightWillOpen) {\n      this.props.onSwipeableRightWillOpen();\n    }\n\n    if (toValue === 0) {\n      this.props.onSwipeableWillClose && this.props.onSwipeableWillClose();\n    } else {\n      this.props.onSwipeableWillOpen && this.props.onSwipeableWillOpen();\n    }\n  };\n\n  _onRowLayout = ({ nativeEvent }) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  _currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this._animateRow(this._currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this._animateRow(this._currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this._animateRow(this._currentOffset(), -rightWidth);\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const { children, renderLeftActions, renderRightActions } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          { transform: [{ translateX: this._leftActionTranslate }] },\n        ]}>\n        {renderLeftActions(this._showLeftAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this._rightActionTranslate }] },\n        ]}>\n        {renderRightActions(this._showRightAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        {...this.props}\n        minDeltaX={10}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}>\n        <Animated.View onLayout={this._onRowLayout} style={styles.container}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            onHandlerStateChange={this._onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={{\n                transform: [{ translateX: this._transX }],\n              }}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'row-reverse',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}