{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.notification=notification;exports.impact=impact;exports.selection=selection;exports.ImpactFeedbackStyle=exports.NotificationFeedbackType=void 0;var _reactNative=require(\"react-native\");var VIBRATION_DURATION_MS=100;var NotificationFeedbackType;exports.NotificationFeedbackType=NotificationFeedbackType;(function(NotificationFeedbackType){NotificationFeedbackType[\"Success\"]=\"success\";NotificationFeedbackType[\"Warning\"]=\"warning\";NotificationFeedbackType[\"Error\"]=\"error\";})(NotificationFeedbackType||(exports.NotificationFeedbackType=NotificationFeedbackType={}));var ImpactFeedbackStyle;exports.ImpactFeedbackStyle=ImpactFeedbackStyle;(function(ImpactFeedbackStyle){ImpactFeedbackStyle[\"Light\"]=\"light\";ImpactFeedbackStyle[\"Medium\"]=\"medium\";ImpactFeedbackStyle[\"Heavy\"]=\"heavy\";})(ImpactFeedbackStyle||(exports.ImpactFeedbackStyle=ImpactFeedbackStyle={}));function notification(){var type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:NotificationFeedbackType.Success;if(_reactNative.Platform.OS==='ios'){_reactNative.NativeModules.ExponentHaptic.notification(type);}else{console.warn('`Expo.Haptic` is only available on iOS');_reactNative.Vibration.vibrate(VIBRATION_DURATION_MS,false);}}function impact(){var style=arguments.length>0&&arguments[0]!==undefined?arguments[0]:ImpactFeedbackStyle.Medium;if(_reactNative.Platform.OS==='ios'){_reactNative.NativeModules.ExponentHaptic.impact(style);}else{console.warn('`Expo.Haptic` is only available on iOS');_reactNative.Vibration.vibrate(VIBRATION_DURATION_MS,false);}}function selection(){if(_reactNative.Platform.OS==='ios'){_reactNative.NativeModules.ExponentHaptic.selection();}else{console.warn('`Expo.Haptic` is only available on iOS');_reactNative.Vibration.vibrate(VIBRATION_DURATION_MS,false);}}","map":{"version":3,"sources":["../src/Haptic.ts"],"names":[],"mappings":"iNAAA,yCAEA,GAAM,CAAA,qBAAqB,CAAG,GAA9B,CAOA,GAAY,CAAA,wBAAZ,C,0DAAA,CAAA,SAAY,wBAAZ,CAAoC,CAIlC,wBAAA,CAAA,SAAA,CAAA,CAAA,SAAA,CAIA,wBAAA,CAAA,SAAA,CAAA,CAAA,SAAA,CAIA,wBAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CACD,CAbD,EAAY,wBAAwB,oCAAxB,wBAAwB,CAAA,EAAA,CAApC,EAoBA,GAAY,CAAA,mBAAZ,C,gDAAA,CAAA,SAAY,mBAAZ,CAA+B,CAI7B,mBAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAIA,mBAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAIA,mBAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CACD,CAbD,EAAY,mBAAmB,+BAAnB,mBAAmB,CAAA,EAAA,CAA/B,EAkBM,QAAU,CAAA,YAAV,EAAwF,IAAjE,CAAA,IAAiE,2DAAhC,wBAAwB,CAAC,OAAO,CAC5F,GAAI,sBAAS,EAAT,GAAgB,KAApB,CAA2B,CACzB,2BAAc,cAAd,CAA6B,YAA7B,CAA0C,IAA1C,EACD,CAFD,IAEO,CACL,OAAO,CAAC,IAAR,CAAa,wCAAb,EACA,uBAAU,OAAV,CAAkB,qBAAlB,CAAyC,KAAzC,EACD,CACF,CAKK,QAAU,CAAA,MAAV,EAAwE,IAAvD,CAAA,KAAuD,2DAA1B,mBAAmB,CAAC,MAAM,CAC5E,GAAI,sBAAS,EAAT,GAAgB,KAApB,CAA2B,CACzB,2BAAc,cAAd,CAA6B,MAA7B,CAAoC,KAApC,EACD,CAFD,IAEO,CACL,OAAO,CAAC,IAAR,CAAa,wCAAb,EACA,uBAAU,OAAV,CAAkB,qBAAlB,CAAyC,KAAzC,EACD,CACF,CAKK,QAAU,CAAA,SAAV,EAAmB,CACvB,GAAI,sBAAS,EAAT,GAAgB,KAApB,CAA2B,CACzB,2BAAc,cAAd,CAA6B,SAA7B,GACD,CAFD,IAEO,CACL,OAAO,CAAC,IAAR,CAAa,wCAAb,EACA,uBAAU,OAAV,CAAkB,qBAAlB,CAAyC,KAAzC,EACD,CACF","sourcesContent":["import { NativeModules, Platform, Vibration } from 'react-native';\n\nconst VIBRATION_DURATION_MS = 100;\n\n/**\n * Notification Feedback Type\n * The type of notification feedback generated by a UINotificationFeedbackGenerator object.\n * https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype\n */\nexport enum NotificationFeedbackType {\n  /**\n   * A notification feedback type indicating that a task has completed successfully\n   */\n  Success = 'success',\n  /**\n   * A notification feedback type indicating that a task has produced a warning\n   */\n  Warning = 'warning',\n  /**\n   * A notification feedback type indicating that a task has failed\n   */\n  Error = 'error',\n}\n\n/**\n * Impact Feedback Style\n * The mass of the objects in the collision simulated by a UIImpactFeedbackGenerator object.\n * https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle\n */\nexport enum ImpactFeedbackStyle {\n  /**\n   * A collision between small, light user interface elements\n   */\n  Light = 'light',\n  /**\n   * A collision between moderately sized user interface elements\n   */\n  Medium = 'medium',\n  /**\n   * A collision between large, heavy user interface elements\n   */\n  Heavy = 'heavy',\n}\n\n/**\n * Triggers notification feedback.\n */\nexport function notification(type: NotificationFeedbackType = NotificationFeedbackType.Success) {\n  if (Platform.OS === 'ios') {\n    NativeModules.ExponentHaptic.notification(type);\n  } else {\n    console.warn('`Expo.Haptic` is only available on iOS');\n    Vibration.vibrate(VIBRATION_DURATION_MS, false);\n  }\n}\n\n/**\n * Triggers impact feedback.\n */\nexport function impact(style: ImpactFeedbackStyle = ImpactFeedbackStyle.Medium) {\n  if (Platform.OS === 'ios') {\n    NativeModules.ExponentHaptic.impact(style);\n  } else {\n    console.warn('`Expo.Haptic` is only available on iOS');\n    Vibration.vibrate(VIBRATION_DURATION_MS, false);\n  }\n}\n\n/**\n * Triggers selection feedback.\n */\nexport function selection() {\n  if (Platform.OS === 'ios') {\n    NativeModules.ExponentHaptic.selection();\n  } else {\n    console.warn('`Expo.Haptic` is only available on iOS');\n    Vibration.vibrate(VIBRATION_DURATION_MS, false);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}