{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var React=_interopRequireWildcard(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _reactNative=require(\"react-native\");var LOLLIPOP=21;var TouchableItem=function(_React$Component){(0,_inherits2.default)(TouchableItem,_React$Component);function TouchableItem(){(0,_classCallCheck2.default)(this,TouchableItem);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(TouchableItem).apply(this,arguments));}(0,_createClass2.default)(TouchableItem,[{key:\"render\",value:function render(){var _this$props=this.props,style=_this$props.style,pressOpacity=_this$props.pressOpacity,pressColor=_this$props.pressColor,borderless=_this$props.borderless,rest=(0,_objectWithoutProperties2.default)(_this$props,[\"style\",\"pressOpacity\",\"pressColor\",\"borderless\"]);if(_reactNative.Platform.OS==='android'&&_reactNative.Platform.Version>=LOLLIPOP){return React.createElement(_reactNative.TouchableNativeFeedback,(0,_extends2.default)({},rest,{background:_reactNative.TouchableNativeFeedback.Ripple(pressColor,borderless)}),React.createElement(_reactNative.View,{style:style},React.Children.only(this.props.children)));}else{return React.createElement(_reactNative.TouchableOpacity,(0,_extends2.default)({},rest,{style:style,activeOpacity:pressOpacity}),this.props.children);}}}]);return TouchableItem;}(React.Component);exports.default=TouchableItem;TouchableItem.propTypes={onPress:_propTypes.default.func.isRequired,delayPressIn:_propTypes.default.number,borderless:_propTypes.default.bool,pressColor:_propTypes.default.string,pressOpacity:_propTypes.default.number,children:_propTypes.default.node.isRequired};TouchableItem.defaultProps={pressColor:'rgba(255, 255, 255, .4)'};","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native-tab-view/src/TouchableItem.js"],"names":["LOLLIPOP","TouchableItem","props","style","pressOpacity","pressColor","borderless","rest","Platform","OS","Version","TouchableNativeFeedback","Ripple","React","Children","only","children","Component","propTypes","onPress","PropTypes","func","isRequired","delayPressIn","number","bool","string","node","defaultProps"],"mappings":"k5BAEA,oDACA,6DACA,yCAQA,GAAMA,CAAAA,QAAQ,CAAG,EAAjB,C,GAYqBC,CAAAA,a,kWAcV,iBAC0D,KAAKC,KAD/D,CACCC,KADD,aACCA,KADD,CACQC,YADR,aACQA,YADR,CACsBC,UADtB,aACsBA,UADtB,CACkCC,UADlC,aACkCA,UADlC,CACiDC,IADjD,uGAGP,GAAIC,sBAASC,EAAT,GAAgB,SAAhB,EAA6BD,sBAASE,OAAT,EAAoBV,QAArD,CAA+D,CAC7D,MACE,qBAAC,oCAAD,0BACMO,IADN,EAEE,UAAU,CAAEI,qCAAwBC,MAAxB,CAA+BP,UAA/B,CAA2CC,UAA3C,CAFd,GAIE,oBAAC,iBAAD,EAAM,KAAK,CAAEH,KAAb,EAAqBU,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoB,KAAKb,KAAL,CAAWc,QAA/B,CAArB,CAJF,CADF,CAQD,CATD,IASO,CACL,MACE,qBAAC,6BAAD,0BAAsBT,IAAtB,EAA4B,KAAK,CAAEJ,KAAnC,CAA0C,aAAa,CAAEC,YAAzD,GACG,KAAKF,KAAL,CAAWc,QADd,CADF,CAKD,CACF,C,2BAjCwCH,KAAK,CAACI,S,gCAA5BhB,a,CACZiB,S,CAAY,CACjBC,OAAO,CAAEC,mBAAUC,IAAV,CAAeC,UADP,CAEjBC,YAAY,CAAEH,mBAAUI,MAFP,CAGjBlB,UAAU,CAAEc,mBAAUK,IAHL,CAIjBpB,UAAU,CAAEe,mBAAUM,MAJL,CAKjBtB,YAAY,CAAEgB,mBAAUI,MALP,CAMjBR,QAAQ,CAAEI,mBAAUO,IAAV,CAAeL,UANR,C,CADArB,a,CAUZ2B,Y,CAAe,CACpBvB,UAAU,CAAE,yBADQ,C","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  Platform,\n  View,\n} from 'react-native';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\nconst LOLLIPOP = 21;\n\ntype Props = {\n  onPress: () => mixed,\n  delayPressIn?: number,\n  borderless?: boolean,\n  pressColor?: string,\n  pressOpacity?: number,\n  children?: React.Node,\n  style?: ViewStyleProp,\n};\n\nexport default class TouchableItem extends React.Component<Props> {\n  static propTypes = {\n    onPress: PropTypes.func.isRequired,\n    delayPressIn: PropTypes.number,\n    borderless: PropTypes.bool,\n    pressColor: PropTypes.string,\n    pressOpacity: PropTypes.number,\n    children: PropTypes.node.isRequired,\n  };\n\n  static defaultProps = {\n    pressColor: 'rgba(255, 255, 255, .4)',\n  };\n\n  render() {\n    const { style, pressOpacity, pressColor, borderless, ...rest } = this.props;\n\n    if (Platform.OS === 'android' && Platform.Version >= LOLLIPOP) {\n      return (\n        <TouchableNativeFeedback\n          {...rest}\n          background={TouchableNativeFeedback.Ripple(pressColor, borderless)}\n        >\n          <View style={style}>{React.Children.only(this.props.children)}</View>\n        </TouchableNativeFeedback>\n      );\n    } else {\n      return (\n        <TouchableOpacity {...rest} style={style} activeOpacity={pressOpacity}>\n          {this.props.children}\n        </TouchableOpacity>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}