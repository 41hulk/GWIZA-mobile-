{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _reactNative=require(\"react-native\");var RNBranch=_reactNative.NativeModules.RNBranch;var BranchEvent=function(){function BranchEvent(name){var contentItems=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var params=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};(0,_classCallCheck2.default)(this,BranchEvent);this.name=null;this.contentItems=[];this.transactionID=null;this.currency=null;this.revenue=null;this.shipping=null;this.tax=null;this.coupon=null;this.affiliation=null;this.description=null;this.searchQuery=null;this.customData=null;this.name=name;if(Array.isArray(contentItems)){this.contentItems=contentItems;}else if(contentItems){this.contentItems=[contentItems];}if(params.transactionID)this.transactionID=params.transactionID;if(params.currency)this.currency=params.currency;if(params.revenue)this.revenue=params.revenue;if(params.shipping)this.shipping=params.shipping;if(params.tax)this.tax=params.tax;if(params.coupon)this.coupon=params.coupon;if(params.affiliation)this.affiliation=params.affiliation;if(params.description)this.description=params.description;if(params.searchQuery)this.searchQuery=params.searchQuery;if(params.customData)this.customData=params.customData;}(0,_createClass2.default)(BranchEvent,[{key:\"logEvent\",value:function logEvent(){var idents,ident,buo;return _regenerator.default.async(function logEvent$(_context){while(1){switch(_context.prev=_context.next){case 0:idents=this.contentItems.map(function(b){return b.ident;});_context.prev=1;_context.next=4;return _regenerator.default.awrap(RNBranch.logEvent(idents,this.name,this._convertParams()));case 4:return _context.abrupt(\"return\",_context.sent);case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);if(!(_context.t0.code!='RNBranch::Error::BUONotFound')){_context.next=11;break;}throw _context.t0;case 11:ident=this._identFromMessage(_context.t0.message);buo=this.contentItems.find(function(b){return b.ident==ident;});_context.next=15;return _regenerator.default.awrap(buo._newIdent());case 15:_context.next=17;return _regenerator.default.awrap(this.logEvent());case 17:return _context.abrupt(\"return\",_context.sent);case 18:case\"end\":return _context.stop();}}},null,this,[[1,7]]);}},{key:\"_identFromMessage\",value:function _identFromMessage(message){var match=/^.*ident\\s([A-Fa-f0-9-]+).*$/.exec(message);if(match)return match[1];return null;}},{key:\"_convertParams\",value:function _convertParams(){var params={};if(this.transactionID)params.transactionID=this.transactionID;if(this.currency)params.currency=this.currency;if(this.revenue)params.revenue=''+this.revenue;if(this.shipping)params.shipping=''+this.shipping;if(this.tax)params.tax=''+this.tax;if(this.coupon)params.coupon=this.coupon;if(this.affiliation)params.affiliation=this.affiliation;if(this.description)params.description=this.description;if(this.searchQuery)params.searchQuery=this.searchQuery;if(this.customData){params.customData=this.customData;for(var key in params.customData){var valueType=typeof params.customData[key];if(valueType=='string')continue;console.warn('[Branch] customMetadata values must be strings. Value for property '+key+' has type '+valueType+'.');}}return params;}}]);return BranchEvent;}();exports.default=BranchEvent;BranchEvent.AddToCart=RNBranch.STANDARD_EVENT_ADD_TO_CART;BranchEvent.AddToWishlist=RNBranch.STANDARD_EVENT_ADD_TO_WISHLIST;BranchEvent.ViewCart=RNBranch.STANDARD_EVENT_VIEW_CART;BranchEvent.InitiatePurchase=RNBranch.STANDARD_EVENT_INITIATE_PURCHASE;BranchEvent.AddPaymentInfo=RNBranch.STANDARD_EVENT_ADD_PAYMENT_INFO;BranchEvent.Purchase=RNBranch.STANDARD_EVENT_PURCHASE;BranchEvent.SpendCredits=RNBranch.STANDARD_EVENT_SPEND_CREDITS;BranchEvent.Search=RNBranch.STANDARD_EVENT_SEARCH;BranchEvent.ViewItem=RNBranch.STANDARD_EVENT_VIEW_ITEM;BranchEvent.ViewItems=RNBranch.STANDARD_EVENT_VIEW_ITEMS;BranchEvent.Rate=RNBranch.STANDARD_EVENT_RATE;BranchEvent.Share=RNBranch.STANDARD_EVENT_SHARE;BranchEvent.CompleteRegistration=RNBranch.STANDARD_EVENT_COMPLETE_REGISTRATION;BranchEvent.CompleteTutorial=RNBranch.STANDARD_EVENT_COMPLETE_TUTORIAL;BranchEvent.AchieveLevel=RNBranch.STANDARD_EVENT_ACHIEVE_LEVEL;BranchEvent.UnlockAchievement=RNBranch.STANDARD_EVENT_UNLOCK_ACHIEVEMENT;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native-branch/src/BranchEvent.js"],"names":["RNBranch","NativeModules","BranchEvent","name","contentItems","params","transactionID","currency","revenue","shipping","tax","coupon","affiliation","description","searchQuery","customData","Array","isArray","idents","map","b","ident","logEvent","_convertParams","code","_identFromMessage","message","buo","find","_newIdent","match","exec","key","valueType","console","warn","AddToCart","STANDARD_EVENT_ADD_TO_CART","AddToWishlist","STANDARD_EVENT_ADD_TO_WISHLIST","ViewCart","STANDARD_EVENT_VIEW_CART","InitiatePurchase","STANDARD_EVENT_INITIATE_PURCHASE","AddPaymentInfo","STANDARD_EVENT_ADD_PAYMENT_INFO","Purchase","STANDARD_EVENT_PURCHASE","SpendCredits","STANDARD_EVENT_SPEND_CREDITS","Search","STANDARD_EVENT_SEARCH","ViewItem","STANDARD_EVENT_VIEW_ITEM","ViewItems","STANDARD_EVENT_VIEW_ITEMS","Rate","STANDARD_EVENT_RATE","Share","STANDARD_EVENT_SHARE","CompleteRegistration","STANDARD_EVENT_COMPLETE_REGISTRATION","CompleteTutorial","STANDARD_EVENT_COMPLETE_TUTORIAL","AchieveLevel","STANDARD_EVENT_ACHIEVE_LEVEL","UnlockAchievement","STANDARD_EVENT_UNLOCK_ACHIEVEMENT"],"mappings":"waAAA,yC,GACQA,CAAAA,Q,CAAaC,0B,CAAbD,Q,IAOaE,CAAAA,W,YA4FnB,qBAAYC,IAAZ,CAAoD,IAAlCC,CAAAA,YAAkC,2DAAnB,IAAmB,IAAbC,CAAAA,MAAa,2DAAJ,EAAI,qDAvFpDF,IAuFoD,CAvF7C,IAuF6C,MAjFpDC,YAiFoD,CAjFrC,EAiFqC,MA3EpDE,aA2EoD,CA3EpC,IA2EoC,MArEpDC,QAqEoD,CArEzC,IAqEyC,MA/DpDC,OA+DoD,CA/D1C,IA+D0C,MAzDpDC,QAyDoD,CAzDzC,IAyDyC,MAnDpDC,GAmDoD,CAnD9C,IAmD8C,MA7CpDC,MA6CoD,CA7C3C,IA6C2C,MAvCpDC,WAuCoD,CAvCtC,IAuCsC,MAjCpDC,WAiCoD,CAjCtC,IAiCsC,MA3BpDC,WA2BoD,CA3BtC,IA2BsC,MApBpDC,UAoBoD,CApBvC,IAoBuC,CAClD,KAAKZ,IAAL,CAAYA,IAAZ,CAEA,GAAIa,KAAK,CAACC,OAAN,CAAcb,YAAd,CAAJ,CAAiC,CAC/B,KAAKA,YAAL,CAAoBA,YAApB,CACD,CAFD,IAGK,IAAIA,YAAJ,CAAkB,CACrB,KAAKA,YAAL,CAAoB,CAACA,YAAD,CAApB,CACD,CAED,GAAIC,MAAM,CAACC,aAAX,CAA0B,KAAKA,aAAL,CAAqBD,MAAM,CAACC,aAA5B,CAC1B,GAAID,MAAM,CAACE,QAAX,CAAqB,KAAKA,QAAL,CAAgBF,MAAM,CAACE,QAAvB,CACrB,GAAIF,MAAM,CAACG,OAAX,CAAoB,KAAKA,OAAL,CAAeH,MAAM,CAACG,OAAtB,CACpB,GAAIH,MAAM,CAACI,QAAX,CAAqB,KAAKA,QAAL,CAAgBJ,MAAM,CAACI,QAAvB,CACrB,GAAIJ,MAAM,CAACK,GAAX,CAAgB,KAAKA,GAAL,CAAWL,MAAM,CAACK,GAAlB,CAChB,GAAIL,MAAM,CAACM,MAAX,CAAmB,KAAKA,MAAL,CAAcN,MAAM,CAACM,MAArB,CACnB,GAAIN,MAAM,CAACO,WAAX,CAAwB,KAAKA,WAAL,CAAmBP,MAAM,CAACO,WAA1B,CACxB,GAAIP,MAAM,CAACQ,WAAX,CAAwB,KAAKA,WAAL,CAAmBR,MAAM,CAACQ,WAA1B,CACxB,GAAIR,MAAM,CAACS,WAAX,CAAwB,KAAKA,WAAL,CAAmBT,MAAM,CAACS,WAA1B,CACxB,GAAIT,MAAM,CAACU,UAAX,CAAuB,KAAKA,UAAL,CAAkBV,MAAM,CAACU,UAAzB,CACxB,C,yNAWOG,M,CAAS,KAAKd,YAAL,CAAkBe,GAAlB,CAAsB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,KAAT,EAAtB,C,mEAGArB,QAAQ,CAACsB,QAAT,CAAkBJ,MAAlB,CAA0B,KAAKf,IAA/B,CAAqC,KAAKoB,cAAL,EAArC,C,qHAGT,YAAMC,IAAN,EAAc,8B,qDASZH,K,CAAQ,KAAKI,iBAAL,CAAuB,YAAMC,OAA7B,C,CACRC,G,CAAM,KAAKvB,YAAL,CAAkBwB,IAAlB,CAAuB,SAACR,CAAD,QAAOA,CAAAA,CAAC,CAACC,KAAF,EAAWA,KAAlB,EAAvB,C,oDACNM,GAAG,CAACE,SAAJ,E,6DAGO,KAAKP,QAAL,E,sLAKCI,O,CAAS,CACzB,GAAMI,CAAAA,KAAK,CAAG,+BAA+BC,IAA/B,CAAoCL,OAApC,CAAd,CACA,GAAII,KAAJ,CAAW,MAAOA,CAAAA,KAAK,CAAC,CAAD,CAAZ,CACX,MAAO,KAAP,CACD,C,uDAEgB,CACf,GAAIzB,CAAAA,MAAM,CAAG,EAAb,CAEA,GAAI,KAAKC,aAAT,CAAwBD,MAAM,CAACC,aAAP,CAAuB,KAAKA,aAA5B,CACxB,GAAI,KAAKC,QAAT,CAAmBF,MAAM,CAACE,QAAP,CAAkB,KAAKA,QAAvB,CAGnB,GAAI,KAAKC,OAAT,CAAkBH,MAAM,CAACG,OAAP,CAAiB,GAAK,KAAKA,OAA3B,CAClB,GAAI,KAAKC,QAAT,CAAmBJ,MAAM,CAACI,QAAP,CAAkB,GAAK,KAAKA,QAA5B,CACnB,GAAI,KAAKC,GAAT,CAAcL,MAAM,CAACK,GAAP,CAAa,GAAK,KAAKA,GAAvB,CAEd,GAAI,KAAKC,MAAT,CAAiBN,MAAM,CAACM,MAAP,CAAgB,KAAKA,MAArB,CACjB,GAAI,KAAKC,WAAT,CAAsBP,MAAM,CAACO,WAAP,CAAqB,KAAKA,WAA1B,CACtB,GAAI,KAAKC,WAAT,CAAsBR,MAAM,CAACQ,WAAP,CAAqB,KAAKA,WAA1B,CACtB,GAAI,KAAKC,WAAT,CAAsBT,MAAM,CAACS,WAAP,CAAqB,KAAKA,WAA1B,CACtB,GAAI,KAAKC,UAAT,CAAqB,CACnBV,MAAM,CAACU,UAAP,CAAoB,KAAKA,UAAzB,CACA,IAAK,GAAMiB,CAAAA,GAAX,GAAkB3B,CAAAA,MAAM,CAACU,UAAzB,CAAqC,CACnC,GAAMkB,CAAAA,SAAS,CAAG,MAAO5B,CAAAA,MAAM,CAACU,UAAP,CAAkBiB,GAAlB,CAAzB,CACA,GAAIC,SAAS,EAAI,QAAjB,CAA2B,SAC3BC,OAAO,CAACC,IAAR,CAAa,sEAAwEH,GAAxE,CAA8E,YAA9E,CAA6FC,SAA7F,CAAyG,GAAtH,EAED,CACF,CAED,MAAO5B,CAAAA,MAAP,CACD,C,uDAWHH,WAAW,CAACkC,SAAZ,CAAwBpC,QAAQ,CAACqC,0BAAjC,CAMAnC,WAAW,CAACoC,aAAZ,CAA4BtC,QAAQ,CAACuC,8BAArC,CAMArC,WAAW,CAACsC,QAAZ,CAAuBxC,QAAQ,CAACyC,wBAAhC,CAMAvC,WAAW,CAACwC,gBAAZ,CAA+B1C,QAAQ,CAAC2C,gCAAxC,CAMAzC,WAAW,CAAC0C,cAAZ,CAA6B5C,QAAQ,CAAC6C,+BAAtC,CAMA3C,WAAW,CAAC4C,QAAZ,CAAuB9C,QAAQ,CAAC+C,uBAAhC,CAMA7C,WAAW,CAAC8C,YAAZ,CAA2BhD,QAAQ,CAACiD,4BAApC,CAQA/C,WAAW,CAACgD,MAAZ,CAAqBlD,QAAQ,CAACmD,qBAA9B,CAMAjD,WAAW,CAACkD,QAAZ,CAAuBpD,QAAQ,CAACqD,wBAAhC,CAMAnD,WAAW,CAACoD,SAAZ,CAAwBtD,QAAQ,CAACuD,yBAAjC,CAMArD,WAAW,CAACsD,IAAZ,CAAmBxD,QAAQ,CAACyD,mBAA5B,CAMAvD,WAAW,CAACwD,KAAZ,CAAoB1D,QAAQ,CAAC2D,oBAA7B,CAQAzD,WAAW,CAAC0D,oBAAZ,CAAmC5D,QAAQ,CAAC6D,oCAA5C,CAMA3D,WAAW,CAAC4D,gBAAZ,CAA+B9D,QAAQ,CAAC+D,gCAAxC,CAMA7D,WAAW,CAAC8D,YAAZ,CAA2BhE,QAAQ,CAACiE,4BAApC,CAMA/D,WAAW,CAACgE,iBAAZ,CAAgClE,QAAQ,CAACmE,iCAAzC","sourcesContent":["import { NativeModules } from 'react-native'\nconst { RNBranch } = NativeModules\n\n/**\n * Class for generating standard and custom events with the Branch SDK.\n * @example\n * new BranchEvent(BranchEvent.ViewEvent, buo).logEvent()\n */\nexport default class BranchEvent {\n  /**\n   * The event name. May be a standard event name or a custom event name.\n   * @type {string}\n   */\n  name = null\n\n  /**\n   * Array containing any Branch Universal Objects associated with this event.\n   * @type {Object[]}\n   */\n  contentItems = []\n\n  /**\n   * Transaction ID associated with this event\n   * @type {?string}\n   */\n  transactionID = null\n\n  /**\n   * ISO currency identifier associated with this event\n   * @type {?string}\n   */\n  currency = null\n\n  /**\n   * Revenue associated with this event\n   * @type {?(string|number)}\n   */\n  revenue = null\n\n  /**\n   * Shipping cost associated with this event\n   * @type {?(string|number)}\n   */\n  shipping = null\n\n  /**\n   * Tax associated with this event\n   * @type {?(string|number)}\n   */\n  tax = null\n\n  /**\n   * Coupon associated with this event\n   * @type {?string}\n   */\n  coupon = null\n\n  /**\n   * Affiliation associated with this event\n   * @type {?string}\n   */\n  affiliation = null\n\n  /**\n   * Description of this event\n   * @type {?string}\n   */\n  description = null\n\n  /**\n   * Search query associated with this event\n   * @type {?string}\n   */\n  searchQuery = null\n\n  /**\n   * Optional object containing custom data to associate with this event.\n   * Values must be strings.\n   * @type {?Object}\n   */\n  customData = null\n\n  /**\n   * Constructs a new BranchEvent from arguments\n   *\n   * @param {!string} name - The name of the event. May be a standard Branch event\n   *   or a custom event name.\n   * @param {?(Object|Object[])} contentItems - One or more Branch Universal Objects associated with this event, or null.\n   * @param {?Object} params - Object containing params to be set in the constructor\n   * @param {?string} params.transactionID - Initial value for the transactionID property\n   * @param {?string} params.currency - Initial value for the currency property\n   * @param {?(string|number)} params.revenue - Initial value for the revenue property\n   * @param {?(string|number)} params.shipping - Initial value for the shipping property\n   * @param {?(string|number)} params.tax - Initial value for the tax property\n   * @param {?string} params.coupon - Initial value for the coupon property\n   * @param {?string} params.affiliation - Initial value for the affiliation property\n   * @param {?string} params.description - Initial value for the description property\n   * @param {?string} params.searchQuery - Initial value for the searchQuery property\n   * @param {?Object} params.customData - Initial value for the customData property\n   */\n  constructor(name, contentItems = null, params = {}) {\n    this.name = name\n\n    if (Array.isArray(contentItems)) {\n      this.contentItems = contentItems\n    }\n    else if (contentItems) {\n      this.contentItems = [contentItems]\n    }\n\n    if (params.transactionID) this.transactionID = params.transactionID\n    if (params.currency) this.currency = params.currency\n    if (params.revenue) this.revenue = params.revenue\n    if (params.shipping) this.shipping = params.shipping\n    if (params.tax) this.tax = params.tax\n    if (params.coupon) this.coupon = params.coupon\n    if (params.affiliation) this.affiliation = params.affiliation\n    if (params.description) this.description = params.description\n    if (params.searchQuery) this.searchQuery = params.searchQuery\n    if (params.customData) this.customData = params.customData\n  }\n\n  /**\n   * Log this event. This method is always successful. It queues events to be\n   * transmitted whenever the service is available. It returns a promise that\n   * is resolved once the native logEvent call is complete. The promise always\n   * returns null.\n   *\n   * @return {null} Always returns null\n   */\n  async logEvent() {\n    const idents = this.contentItems.map((b) => b.ident)\n\n    try {\n      return await RNBranch.logEvent(idents, this.name, this._convertParams())\n    }\n    catch (error) {\n      if (error.code != 'RNBranch::Error::BUONotFound') {\n        // This is the only reason this promise should ever be rejected,\n        // but in case anything else is ever thrown, throw it out to the\n        // caller.\n        throw error\n      }\n\n      // Native BUO not found (expired from cache). Find the JS instance and\n      // have it create a new native instance with a new ident.\n      const ident = this._identFromMessage(error.message)\n      const buo = this.contentItems.find((b) => b.ident == ident)\n      await buo._newIdent()\n\n      // Now that a fresh BUO has been created, call this method again.\n      return await this.logEvent()\n    }\n  }\n\n  // Parse the ident of the missing BUO out of the error text.\n  _identFromMessage(message) {\n    const match = /^.*ident\\s([A-Fa-f0-9-]+).*$/.exec(message)\n    if (match) return match[1]\n    return null\n  }\n\n  _convertParams() {\n    let params = {}\n\n    if (this.transactionID) params.transactionID = this.transactionID\n    if (this.currency) params.currency = this.currency\n\n    // for the benefit of the NSDecimalNumber on iOS\n    if (this.revenue) params.revenue = '' + this.revenue\n    if (this.shipping) params.shipping = '' + this.shipping\n    if (this.tax) params.tax = '' + this.tax\n\n    if (this.coupon) params.coupon = this.coupon\n    if (this.affiliation) params.affiliation = this.affiliation\n    if (this.description) params.description = this.description\n    if (this.searchQuery) params.searchQuery = this.searchQuery\n    if (this.customData) {\n      params.customData = this.customData\n      for (const key in params.customData) {\n        const valueType = typeof params.customData[key]\n        if (valueType == 'string') continue\n        console.warn('[Branch] customMetadata values must be strings. Value for property ' + key + ' has type ' + valueType + '.')\n        // TODO: throw?\n      }\n    }\n\n    return params\n  }\n}\n\n// --- Standard event definitions ---\n\n// Commerce events\n\n/**\n * Standard Add to Cart event\n * @type {string}\n */\nBranchEvent.AddToCart = RNBranch.STANDARD_EVENT_ADD_TO_CART\n\n/**\n * Standard Add to Wishlist event\n * @type {string}\n */\nBranchEvent.AddToWishlist = RNBranch.STANDARD_EVENT_ADD_TO_WISHLIST\n\n/**\n * Standard View Cart event\n * @type {string}\n */\nBranchEvent.ViewCart = RNBranch.STANDARD_EVENT_VIEW_CART\n\n/**\n * Standard Initiate Purchase event\n * @type {string}\n */\nBranchEvent.InitiatePurchase = RNBranch.STANDARD_EVENT_INITIATE_PURCHASE\n\n/**\n * Standard Add Payment Info event\n * @type {string}\n */\nBranchEvent.AddPaymentInfo = RNBranch.STANDARD_EVENT_ADD_PAYMENT_INFO\n\n/**\n * Standard Purchase event\n * @type {string}\n */\nBranchEvent.Purchase = RNBranch.STANDARD_EVENT_PURCHASE\n\n/**\n * Standard Spend Credits event\n * @type {string}\n */\nBranchEvent.SpendCredits = RNBranch.STANDARD_EVENT_SPEND_CREDITS\n\n// Content events\n\n/**\n * Standard Search event\n * @type {string}\n */\nBranchEvent.Search = RNBranch.STANDARD_EVENT_SEARCH\n\n/**\n * Standard View Item event for a single Branch Universal Object\n * @type {string}\n */\nBranchEvent.ViewItem = RNBranch.STANDARD_EVENT_VIEW_ITEM\n\n/**\n * Standard View Items event for multiple Branch Universal Objects\n * @type {string}\n */\nBranchEvent.ViewItems = RNBranch.STANDARD_EVENT_VIEW_ITEMS\n\n/**\n * Standard Rate event\n * @type {string}\n */\nBranchEvent.Rate = RNBranch.STANDARD_EVENT_RATE\n\n/**\n * Standard Share event\n * @type {string}\n */\nBranchEvent.Share = RNBranch.STANDARD_EVENT_SHARE\n\n// User Lifecycle Events\n\n/**\n * Standard Complete Registration event\n * @type {string}\n */\nBranchEvent.CompleteRegistration = RNBranch.STANDARD_EVENT_COMPLETE_REGISTRATION\n\n/**\n * Standard Complete Tutorial event\n * @type {string}\n */\nBranchEvent.CompleteTutorial = RNBranch.STANDARD_EVENT_COMPLETE_TUTORIAL\n\n/**\n * Standard Achieve Level event\n * @type {string}\n */\nBranchEvent.AchieveLevel = RNBranch.STANDARD_EVENT_ACHIEVE_LEVEL\n\n/**\n * Standard Unlock Achievement event\n * @type {string}\n */\nBranchEvent.UnlockAchievement = RNBranch.STANDARD_EVENT_UNLOCK_ACHIEVEMENT\n"]},"metadata":{},"sourceType":"script"}