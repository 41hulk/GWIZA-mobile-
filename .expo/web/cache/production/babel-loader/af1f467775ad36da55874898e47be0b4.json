{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _reactNative=require(\"react-native\");var _expoCore=require(\"expo-core\");var ExponentSegment=_expoCore.NativeModulesProxy.ExponentSegment;var _default={initialize:function initialize(options){if(_reactNative.Platform.OS==='android'){ExponentSegment.initializeAndroid(options.androidWriteKey);}else if(_reactNative.Platform.OS==='ios'){ExponentSegment.initializeIOS(options.iosWriteKey);}else{throw new Error(\"Unable to initialize Segment on `\"+_reactNative.Platform.OS+\"`\");}},identify:function identify(userId){ExponentSegment.identify(userId);},identifyWithTraits:function identifyWithTraits(userId,traits){ExponentSegment.identifyWithTraits(userId,traits);},group:function group(groupId){ExponentSegment.group(groupId);},groupWithTraits:function groupWithTraits(groupId,traits){ExponentSegment.groupWithTraits(groupId,traits);},alias:function alias(newId,options){return ExponentSegment.alias(newId,options);},reset:function reset(){ExponentSegment.reset();},track:function track(event){ExponentSegment.track(event);},trackWithProperties:function trackWithProperties(event,properties){ExponentSegment.trackWithProperties(event,properties);},screen:function screen(screenName){ExponentSegment.screen(screenName);},screenWithProperties:function screenWithProperties(event,properties){ExponentSegment.screenWithProperties(event,properties);},flush:function flush(){ExponentSegment.flush();},getEnabledAsync:function getEnabledAsync(){return new Promise(function(resolve,reject){return ExponentSegment.getEnabledAsync().then(function(isEnabledNumber){return resolve(!!isEnabledNumber);}).catch(reject);});},setEnabledAsync:function setEnabledAsync(enabled){return ExponentSegment.setEnabledAsync(enabled);}};exports.default=_default;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/expo-analytics-segment/src/Segment.js"],"names":["ExponentSegment","NativeModulesProxy","initialize","options","Platform","OS","initializeAndroid","androidWriteKey","initializeIOS","iosWriteKey","Error","identify","userId","identifyWithTraits","traits","group","groupId","groupWithTraits","alias","newId","reset","track","event","trackWithProperties","properties","screen","screenName","screenWithProperties","flush","getEnabledAsync","Promise","resolve","reject","then","isEnabledNumber","catch","setEnabledAsync","enabled"],"mappings":"gFAEA,yCACA,mC,GAEQA,CAAAA,e,CAAoBC,4B,CAApBD,e,cAEO,CACbE,UADa,qBACFC,OADE,CACiE,CAC5E,GAAIC,sBAASC,EAAT,GAAgB,SAApB,CAA+B,CAC7BL,eAAe,CAACM,iBAAhB,CAAkCH,OAAO,CAACI,eAA1C,EACD,CAFD,IAEO,IAAIH,sBAASC,EAAT,GAAgB,KAApB,CAA2B,CAChCL,eAAe,CAACQ,aAAhB,CAA8BL,OAAO,CAACM,WAAtC,EACD,CAFM,IAEA,CACL,KAAM,IAAIC,CAAAA,KAAJ,qCAA+CN,sBAASC,EAAxD,KAAN,CACD,CACF,CATY,CAWbM,QAXa,mBAWJC,MAXI,CAWkB,CAC7BZ,eAAe,CAACW,QAAhB,CAAyBC,MAAzB,EACD,CAbY,CAebC,kBAfa,6BAeMD,MAfN,CAesBE,MAftB,CAeuD,CAClEd,eAAe,CAACa,kBAAhB,CAAmCD,MAAnC,CAA2CE,MAA3C,EACD,CAjBY,CAmBbC,KAnBa,gBAmBPC,OAnBO,CAmBgB,CAC3BhB,eAAe,CAACe,KAAhB,CAAsBC,OAAtB,EACD,CArBY,CAuBbC,eAvBa,0BAuBGD,OAvBH,CAuBoBF,MAvBpB,CAuBqD,CAChEd,eAAe,CAACiB,eAAhB,CAAgCD,OAAhC,CAAyCF,MAAzC,EACD,CAzBY,CA2BbI,KA3Ba,gBA2BPC,KA3BO,CA2BQhB,OA3BR,CA2BuD,CAClE,MAAOH,CAAAA,eAAe,CAACkB,KAAhB,CAAsBC,KAAtB,CAA6BhB,OAA7B,CAAP,CACD,CA7BY,CA+BbiB,KA/Ba,iBA+BC,CACZpB,eAAe,CAACoB,KAAhB,GACD,CAjCY,CAmCbC,KAnCa,gBAmCPC,KAnCO,CAmCc,CACzBtB,eAAe,CAACqB,KAAhB,CAAsBC,KAAtB,EACD,CArCY,CAuCbC,mBAvCa,8BAuCOD,KAvCP,CAuCsBE,UAvCtB,CAuC2D,CACtExB,eAAe,CAACuB,mBAAhB,CAAoCD,KAApC,CAA2CE,UAA3C,EACD,CAzCY,CA2CbC,MA3Ca,iBA2CNC,UA3CM,CA2CoB,CAC/B1B,eAAe,CAACyB,MAAhB,CAAuBC,UAAvB,EACD,CA7CY,CA+CbC,oBA/Ca,+BA+CQL,KA/CR,CA+CuBE,UA/CvB,CA+CiD,CAC5DxB,eAAe,CAAC2B,oBAAhB,CAAqCL,KAArC,CAA4CE,UAA5C,EACD,CAjDY,CAmDbI,KAnDa,iBAmDC,CACZ5B,eAAe,CAAC4B,KAAhB,GACD,CArDY,CAuDbC,eAvDa,2BAuDuB,CAClC,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,QACjBhC,CAAAA,eAAe,CAAC6B,eAAhB,GACGI,IADH,CACQ,SAAAC,eAAe,QAAIH,CAAAA,OAAO,CAAC,CAAC,CAACG,eAAH,CAAX,EADvB,EAEGC,KAFH,CAESH,MAFT,CADiB,EAAZ,CAAP,CAKD,CA7DY,CA+DbI,eA/Da,0BA+DGC,OA/DH,CA+DoC,CAC/C,MAAOrC,CAAAA,eAAe,CAACoC,eAAhB,CAAgCC,OAAhC,CAAP,CACD,CAjEY,C","sourcesContent":["// @flow\n\nimport { Platform } from 'react-native';\nimport { NativeModulesProxy } from 'expo-core';\n\nconst { ExponentSegment } = NativeModulesProxy;\n\nexport default {\n  initialize(options: { androidWriteKey?: string, iosWriteKey?: string }): void {\n    if (Platform.OS === 'android') {\n      ExponentSegment.initializeAndroid(options.androidWriteKey);\n    } else if (Platform.OS === 'ios') {\n      ExponentSegment.initializeIOS(options.iosWriteKey);\n    } else {\n      throw new Error(`Unable to initialize Segment on \\`${Platform.OS}\\``);\n    }\n  },\n\n  identify(userId: string): void {\n    ExponentSegment.identify(userId);\n  },\n\n  identifyWithTraits(userId: string, traits: { [string]: any }): void {\n    ExponentSegment.identifyWithTraits(userId, traits);\n  },\n\n  group(groupId: string): void {\n    ExponentSegment.group(groupId);\n  },\n\n  groupWithTraits(groupId: string, traits: { [string]: any }): void {\n    ExponentSegment.groupWithTraits(groupId, traits);\n  },\n\n  alias(newId: string, options: ?{ [string]: any }): Promise<boolean> {\n    return ExponentSegment.alias(newId, options);\n  },\n\n  reset(): void {\n    ExponentSegment.reset();\n  },\n\n  track(event: string): void {\n    ExponentSegment.track(event);\n  },\n\n  trackWithProperties(event: string, properties: { [string]: any }): void {\n    ExponentSegment.trackWithProperties(event, properties);\n  },\n\n  screen(screenName: string): void {\n    ExponentSegment.screen(screenName);\n  },\n\n  screenWithProperties(event: string, properties: string): void {\n    ExponentSegment.screenWithProperties(event, properties);\n  },\n\n  flush(): void {\n    ExponentSegment.flush();\n  },\n\n  getEnabledAsync(): Promise<boolean> {\n    return new Promise((resolve, reject) =>\n      ExponentSegment.getEnabledAsync()\n        .then(isEnabledNumber => resolve(!!isEnabledNumber))\n        .catch(reject)\n    );\n  },\n\n  setEnabledAsync(enabled: boolean): Promise<void> {\n    return ExponentSegment.setEnabledAsync(enabled);\n  },\n};\n"]},"metadata":{},"sourceType":"script"}