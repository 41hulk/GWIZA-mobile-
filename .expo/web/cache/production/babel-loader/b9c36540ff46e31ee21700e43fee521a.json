{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=_default;var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=require(\"react\");var _lodash=_interopRequireDefault(require(\"lodash\"));var _color=_interopRequireDefault(require(\"color\"));var _extractOpacity=_interopRequireDefault(require(\"./extractOpacity\"));var _extractTransform=_interopRequireDefault(require(\"./extractTransform\"));var _units=_interopRequireDefault(require(\"../units\"));var percentReg=/^([+\\-]?\\d+(?:\\.\\d+)?(?:[eE][+\\-]?\\d+)?)(%?)$/;function percentToFloat(percent){var matched=percent.match(percentReg);if(!matched){console.warn(\"`\"+percent+\"` is not a valid number or percentage string.\");return 0;}return matched[2]?matched[1]/100:+matched[1];}function _default(props){if(!props.id){return null;}var stops={};_react.Children.forEach(props.children,function(child){if(child.props.stopColor&&child.props.offset){var offset=percentToFloat(child.props.offset);stops[offset]=(0,_color.default)(child.props.stopColor).alpha((0,_extractOpacity.default)(child.props.stopOpacity));}});var sorted=_lodash.default.sortBy(_lodash.default.map(stops,function(stop,offset){return{stop:stop,offset:offset};}),\"offset\");var gradient=[];sorted.forEach(function(_ref){var stop=_ref.stop;var _stop$rgb$array=stop.rgb().array(),_stop$rgb$array2=(0,_slicedToArray2.default)(_stop$rgb$array,4),r=_stop$rgb$array2[0],g=_stop$rgb$array2[1],b=_stop$rgb$array2[2],_stop$rgb$array2$=_stop$rgb$array2[3],a=_stop$rgb$array2$===void 0?1:_stop$rgb$array2$;gradient.push(r/255);gradient.push(g/255);gradient.push(b/255);gradient.push(a);});gradient.push.apply(gradient,(0,_toConsumableArray2.default)(sorted.map(function(_ref2){var offset=_ref2.offset;return+offset;})));var gradientTransform;if(props.gradientTransform){gradientTransform=(0,_extractTransform.default)(props.gradientTransform);}else if(props.transform){gradientTransform=(0,_extractTransform.default)(props.transform);}else{gradientTransform=(0,_extractTransform.default)(props);}return{gradient:gradient,name:props.id,gradientTransform:gradientTransform,gradientUnits:_units.default[props.gradientUnits]||0};}","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/expo/node_modules/react-native-svg/lib/extract/extractGradient.js"],"names":["percentReg","percentToFloat","percent","matched","match","console","warn","props","id","stops","Children","forEach","children","child","stopColor","offset","alpha","stopOpacity","sorted","_","sortBy","map","stop","gradient","rgb","array","r","g","b","a","push","gradientTransform","transform","name","gradientUnits","units"],"mappings":"qWAAA,4BACA,sDACA,oDAEA,wEACA,4EACA,uDAEA,GAAMA,CAAAA,UAAU,CAAG,+CAAnB,CAEA,QAASC,CAAAA,cAAT,CAAwBC,OAAxB,CAAiC,CAC7B,GAAMC,CAAAA,OAAO,CAAGD,OAAO,CAACE,KAAR,CAAcJ,UAAd,CAAhB,CACA,GAAI,CAACG,OAAL,CAAc,CACVE,OAAO,CAACC,IAAR,KACSJ,OADT,kDAGA,MAAO,EAAP,CACH,CAED,MAAOC,CAAAA,OAAO,CAAC,CAAD,CAAP,CAAaA,OAAO,CAAC,CAAD,CAAP,CAAa,GAA1B,CAAgC,CAACA,OAAO,CAAC,CAAD,CAA/C,CACH,CAEc,kBAASI,KAAT,CAAgB,CAC3B,GAAI,CAACA,KAAK,CAACC,EAAX,CAAe,CACX,MAAO,KAAP,CACH,CAED,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACAC,gBAASC,OAAT,CAAiBJ,KAAK,CAACK,QAAvB,CAAiC,SAAAC,KAAK,CAAI,CACtC,GAAIA,KAAK,CAACN,KAAN,CAAYO,SAAZ,EAAyBD,KAAK,CAACN,KAAN,CAAYQ,MAAzC,CAAiD,CAE7C,GAAMA,CAAAA,MAAM,CAAGd,cAAc,CAACY,KAAK,CAACN,KAAN,CAAYQ,MAAb,CAA7B,CAIAN,KAAK,CAACM,MAAD,CAAL,CAAgB,mBAAMF,KAAK,CAACN,KAAN,CAAYO,SAAlB,EAA6BE,KAA7B,CACZ,4BAAeH,KAAK,CAACN,KAAN,CAAYU,WAA3B,CADY,CAAhB,CAGH,CACJ,CAXD,EAaA,GAAMC,CAAAA,MAAM,CAAGC,gBAAEC,MAAF,CACXD,gBAAEE,GAAF,CAAMZ,KAAN,CAAa,SAACa,IAAD,CAAOP,MAAP,CAAkB,CAC3B,MAAO,CAAEO,IAAI,CAAJA,IAAF,CAAQP,MAAM,CAANA,MAAR,CAAP,CACH,CAFD,CADW,CAIX,QAJW,CAAf,CAOA,GAAMQ,CAAAA,QAAQ,CAAG,EAAjB,CAEAL,MAAM,CAACP,OAAP,CAAe,cAAc,IAAXW,CAAAA,IAAW,MAAXA,IAAW,qBACAA,IAAI,CAACE,GAAL,GAAWC,KAAX,EADA,iEAClBC,CADkB,qBACfC,CADe,qBACZC,CADY,2DACTC,CADS,4BACL,CADK,mBAEzBN,QAAQ,CAACO,IAAT,CAAcJ,CAAC,CAAG,GAAlB,EACAH,QAAQ,CAACO,IAAT,CAAcH,CAAC,CAAG,GAAlB,EACAJ,QAAQ,CAACO,IAAT,CAAcF,CAAC,CAAG,GAAlB,EACAL,QAAQ,CAACO,IAAT,CAAcD,CAAd,EACH,CAND,EAQAN,QAAQ,CAACO,IAAT,OAAAP,QAAQ,iCAASL,MAAM,CAACG,GAAP,CAAW,mBAAGN,CAAAA,MAAH,OAAGA,MAAH,OAAgB,CAACA,MAAjB,EAAX,CAAT,EAAR,CAEA,GAAIgB,CAAAA,iBAAJ,CACA,GAAIxB,KAAK,CAACwB,iBAAV,CAA6B,CACzBA,iBAAiB,CAAG,8BAAiBxB,KAAK,CAACwB,iBAAvB,CAApB,CACH,CAFD,IAEO,IAAIxB,KAAK,CAACyB,SAAV,CAAqB,CACxBD,iBAAiB,CAAG,8BAAiBxB,KAAK,CAACyB,SAAvB,CAApB,CACH,CAFM,IAEA,CACHD,iBAAiB,CAAG,8BAAiBxB,KAAjB,CAApB,CACH,CAED,MAAO,CACHgB,QAAQ,CAARA,QADG,CAEHU,IAAI,CAAE1B,KAAK,CAACC,EAFT,CAGHuB,iBAAiB,CAAjBA,iBAHG,CAIHG,aAAa,CAAEC,eAAM5B,KAAK,CAAC2B,aAAZ,GAA8B,CAJ1C,CAAP,CAMH","sourcesContent":["import { Children } from \"react\";\nimport _ from \"lodash\";\nimport Color from \"color\";\n\nimport extractOpacity from \"./extractOpacity\";\nimport extractTransform from \"./extractTransform\";\nimport units from \"../units\";\n\nconst percentReg = /^([+\\-]?\\d+(?:\\.\\d+)?(?:[eE][+\\-]?\\d+)?)(%?)$/;\n\nfunction percentToFloat(percent) {\n    const matched = percent.match(percentReg);\n    if (!matched) {\n        console.warn(\n            `\\`${percent}\\` is not a valid number or percentage string.`,\n        );\n        return 0;\n    }\n\n    return matched[2] ? matched[1] / 100 : +matched[1];\n}\n\nexport default function(props) {\n    if (!props.id) {\n        return null;\n    }\n\n    const stops = {};\n    Children.forEach(props.children, child => {\n        if (child.props.stopColor && child.props.offset) {\n            // convert percent to float.\n            const offset = percentToFloat(child.props.offset);\n\n            // add stop\n            //noinspection JSUnresolvedFunction\n            stops[offset] = Color(child.props.stopColor).alpha(\n                extractOpacity(child.props.stopOpacity),\n            );\n        }\n    });\n\n    const sorted = _.sortBy(\n        _.map(stops, (stop, offset) => {\n            return { stop, offset };\n        }),\n        \"offset\",\n    );\n\n    const gradient = [];\n\n    sorted.forEach(({ stop }) => {\n        const [r, g, b, a = 1] = stop.rgb().array();\n        gradient.push(r / 255);\n        gradient.push(g / 255);\n        gradient.push(b / 255);\n        gradient.push(a);\n    });\n\n    gradient.push(...sorted.map(({ offset }) => +offset));\n\n    let gradientTransform;\n    if (props.gradientTransform) {\n        gradientTransform = extractTransform(props.gradientTransform);\n    } else if (props.transform) {\n        gradientTransform = extractTransform(props.transform);\n    } else {\n        gradientTransform = extractTransform(props);\n    }\n\n    return {\n        gradient,\n        name: props.id,\n        gradientTransform,\n        gradientUnits: units[props.gradientUnits] || 0,\n    };\n}\n"]},"metadata":{},"sourceType":"script"}