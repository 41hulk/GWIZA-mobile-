{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.Card=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName=\"src/basic/Card.js\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require(\"react\");var _react2=_interopRequireDefault(_react);var _propTypes=require(\"prop-types\");var _propTypes2=_interopRequireDefault(_propTypes);var _reactNative=require(\"react-native\");var _nativeBaseShoutemTheme=require(\"native-base-shoutem-theme\");var _mapPropsToStyleNames=require(\"../utils/mapPropsToStyleNames\");var _mapPropsToStyleNames2=_interopRequireDefault(_mapPropsToStyleNames);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Card=function(_Component){_inherits(Card,_Component);function Card(){_classCallCheck(this,Card);return _possibleConstructorReturn(this,(Card.__proto__||Object.getPrototypeOf(Card)).apply(this,arguments));}_createClass(Card,[{key:\"render\",value:function render(){var _this2=this;if(this.props.dataArray&&this.props.renderRow){var ds=new _reactNative.ListView.DataSource({rowHasChanged:function rowHasChanged(r1,r2){return r1!==r2;}});var dataSource=ds.cloneWithRows(this.props.dataArray);return _react2.default.createElement(_reactNative.ListView,_extends({},this.props,{enableEmptySections:true,dataSource:dataSource,renderRow:this.props.renderRow,__source:{fileName:_jsxFileName,lineNumber:16}}));}return _react2.default.createElement(_reactNative.View,_extends({ref:function ref(c){return _this2._root=c;}},this.props,{__source:{fileName:_jsxFileName,lineNumber:25}}),this.props.children);}}]);return Card;}(_react.Component);Card.propTypes=_extends({},_reactNative.ViewPropTypes,{style:_propTypes2.default.oneOfType([_propTypes2.default.object,_propTypes2.default.number,_propTypes2.default.array]),dataArray:_propTypes2.default.array,renderRow:_propTypes2.default.func});var StyledCard=(0,_nativeBaseShoutemTheme.connectStyle)(\"NativeBase.Card\",{},_mapPropsToStyleNames2.default)(Card);exports.Card=StyledCard;","map":{"version":3,"sources":["../../../src/basic/Card.js"],"names":["Card","Component","ds","ListView","rowHasChanged","r1","dataSource","ViewPropTypes","style","PropTypes","dataArray","renderRow","StyledCard","mapPropsToStyleNames"],"mappings":"m1BAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,C,2CACA,GAAA,CAAA,UAAA,CAAA,OAAA,CAAA,YAAA,CAAA,C,mDACA,GAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAEA,GAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,CACA,GAAA,CAAA,qBAAA,CAAA,OAAA,iCAAA,C,y8BAEMA,IAAAA,CAAAA,I,iQACK,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CACP,GAAI,KAAA,KAAA,CAAA,SAAA,EAAwB,KAAA,KAAA,CAA5B,SAAA,CAAkD,CAChD,GAAME,CAAAA,EAAAA,CAAK,GAAIC,CAAAA,YAAAA,CAAAA,QAAAA,CAAJ,UAAA,CAAwB,CACjCC,aAAAA,CAAe,QAAA,CAAA,aAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,MAAYC,CAAAA,EAAAA,GAAZ,EAAA,CADjB,CAAmC,CAAxB,CAAX,CAGA,GAAMC,CAAAA,UAAAA,CAAaJ,EAAAA,CAAAA,aAAAA,CAAiB,KAAA,KAAA,CAApC,SAAmBA,CAAnB,CACA,MACE,CAAA,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,QAAA,CAAA,QAAA,CAAA,EAAA,CACM,KADN,KAAA,CAAA,CAEE,mBAAA,CAFF,IAAA,CAGE,UAAA,CAHF,UAAA,CAIE,SAAA,CAAW,KAAA,KAAA,CAJb,SAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADF,EACE,CAAA,CAAA,CAAA,CADF,CASF,OACE,CAAA,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,QAAA,CAAA,CAAM,GAAA,CAAK,QAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,MAAM,CAAA,MAAA,CAAA,KAAA,CAAN,CAAA,CAAX,CAAA,CAAA,CAAsC,KAAtC,KAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CACG,KAAA,KAAA,CAFL,QACE,CADF,C,mBAhBeD,MAAAA,CAAAA,S,CAAbD,CAwBNA,IAAAA,CAAAA,SAAAA,CAAAA,QAAAA,CAAAA,EAAAA,CACKO,YAAAA,CADLP,aAAAA,CAAAA,CAEEQ,KAAAA,CAAOC,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CACzBA,WAAAA,CAAAA,OAAAA,CADyB,MAAA,CAEzBA,WAAAA,CAAAA,OAAAA,CAFyB,MAAA,CAGzBA,WAAAA,CAAAA,OAAAA,CALJT,KAE6B,CAApBS,CAFTT,CAOEU,SAAAA,CAAWD,WAAAA,CAAAA,OAAAA,CAPbT,KAAAA,CAQEW,SAAAA,CAAWF,WAAAA,CAAAA,OAAAA,CARbT,IAAAA,CAAAA,CAAAA,CAWA,GAAMY,CAAAA,UAAAA,CAAa,CAAA,EAAA,uBAAA,CAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,CAAoCC,sBAAAA,CAApC,OAAA,EAAnB,IAAmB,CAAnB,C,QAIuBb,I,CAAdY,U","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View, ListView, ViewPropTypes } from \"react-native\";\n\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass Card extends Component {\n  render() {\n    if (this.props.dataArray && this.props.renderRow) {\n      const ds = new ListView.DataSource({\n        rowHasChanged: (r1, r2) => r1 !== r2\n      });\n      const dataSource = ds.cloneWithRows(this.props.dataArray);\n      return (\n        <ListView\n          {...this.props}\n          enableEmptySections\n          dataSource={dataSource}\n          renderRow={this.props.renderRow}\n        />\n      );\n    }\n    return (\n      <View ref={c => (this._root = c)} {...this.props}>\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nCard.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  dataArray: PropTypes.array,\n  renderRow: PropTypes.func\n};\n\nconst StyledCard = connectStyle(\"NativeBase.Card\", {}, mapPropsToStyleNames)(\n  Card\n);\n\nexport { StyledCard as Card };\n"]},"metadata":{},"sourceType":"script"}