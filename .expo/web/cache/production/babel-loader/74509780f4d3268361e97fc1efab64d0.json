{"ast":null,"code":"'use strict';var Platform=require(\"../Utilities/Platform\");var normalizeColor=require(\"../Color/normalizeColor\");function processColor(color){if(color===undefined||color===null){return color;}var int32Color=normalizeColor(color);if(int32Color===null||int32Color===undefined){return undefined;}int32Color=(int32Color<<24|int32Color>>>8)>>>0;if(Platform.OS==='android'){int32Color=int32Color|0x0;}return int32Color;}module.exports=processColor;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native/Libraries/StyleSheet/processColor.js"],"names":["Platform","require","normalizeColor","processColor","color","undefined","int32Color","OS","module","exports"],"mappings":"AAUA,aAEA,GAAMA,CAAAA,QAAQ,CAAGC,OAAO,yBAAxB,CAEA,GAAMC,CAAAA,cAAc,CAAGD,OAAO,2BAA9B,CAGA,QAASE,CAAAA,YAAT,CAAsBC,KAAtB,CAA2D,CACzD,GAAIA,KAAK,GAAKC,SAAV,EAAuBD,KAAK,GAAK,IAArC,CAA2C,CACzC,MAAOA,CAAAA,KAAP,CACD,CAED,GAAIE,CAAAA,UAAU,CAAGJ,cAAc,CAACE,KAAD,CAA/B,CACA,GAAIE,UAAU,GAAK,IAAf,EAAuBA,UAAU,GAAKD,SAA1C,CAAqD,CACnD,MAAOA,CAAAA,SAAP,CACD,CAGDC,UAAU,CAAG,CAAEA,UAAU,EAAI,EAAf,CAAsBA,UAAU,GAAK,CAAtC,IAA8C,CAA3D,CAEA,GAAIN,QAAQ,CAACO,EAAT,GAAgB,SAApB,CAA+B,CAK7BD,UAAU,CAAGA,UAAU,CAAG,GAA1B,CACD,CACD,MAAOA,CAAAA,UAAP,CACD,CAEDE,MAAM,CAACC,OAAP,CAAiBN,YAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst Platform = require('../Utilities/Platform');\n\nconst normalizeColor = require('../Color/normalizeColor');\n\n/* eslint no-bitwise: 0 */\nfunction processColor(color?: ?(string | number)): ?number {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  let int32Color = normalizeColor(color);\n  if (int32Color === null || int32Color === undefined) {\n    return undefined;\n  }\n\n  // Converts 0xrrggbbaa into 0xaarrggbb\n  int32Color = ((int32Color << 24) | (int32Color >>> 8)) >>> 0;\n\n  if (Platform.OS === 'android') {\n    // Android use 32 bit *signed* integer to represent the color\n    // We utilize the fact that bitwise operations in JS also operates on\n    // signed 32 bit integers, so that we can use those to convert from\n    // *unsigned* to *signed* 32bit int that way.\n    int32Color = int32Color | 0x0;\n  }\n  return int32Color;\n}\n\nmodule.exports = processColor;\n"]},"metadata":{},"sourceType":"script"}