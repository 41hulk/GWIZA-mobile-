{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});var _exportNames={INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS:true,INTERRUPTION_MODE_IOS_DO_NOT_MIX:true,INTERRUPTION_MODE_IOS_DUCK_OTHERS:true,INTERRUPTION_MODE_ANDROID_DO_NOT_MIX:true,INTERRUPTION_MODE_ANDROID_DUCK_OTHERS:true,setAudioModeAsync:true,setIsEnabledAsync:true};exports.setAudioModeAsync=setAudioModeAsync;Object.defineProperty(exports,\"setIsEnabledAsync\",{enumerable:true,get:function get(){return _AudioAvailability.setIsEnabledAsync;}});exports.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS=exports.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX=exports.INTERRUPTION_MODE_IOS_DUCK_OTHERS=exports.INTERRUPTION_MODE_IOS_DO_NOT_MIX=exports.INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _reactNative=require(\"react-native\");var _Recording=require(\"./Audio/Recording\");Object.keys(_Recording).forEach(function(key){if(key===\"default\"||key===\"__esModule\")return;if(Object.prototype.hasOwnProperty.call(_exportNames,key))return;Object.defineProperty(exports,key,{enumerable:true,get:function get(){return _Recording[key];}});});var _Sound=require(\"./Audio/Sound\");Object.keys(_Sound).forEach(function(key){if(key===\"default\"||key===\"__esModule\")return;if(Object.prototype.hasOwnProperty.call(_exportNames,key))return;Object.defineProperty(exports,key,{enumerable:true,get:function get(){return _Sound[key];}});});var _AudioAvailability=require(\"./Audio/AudioAvailability\");var INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS=0;exports.INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS=INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS;var INTERRUPTION_MODE_IOS_DO_NOT_MIX=1;exports.INTERRUPTION_MODE_IOS_DO_NOT_MIX=INTERRUPTION_MODE_IOS_DO_NOT_MIX;var INTERRUPTION_MODE_IOS_DUCK_OTHERS=2;exports.INTERRUPTION_MODE_IOS_DUCK_OTHERS=INTERRUPTION_MODE_IOS_DUCK_OTHERS;var INTERRUPTION_MODE_ANDROID_DO_NOT_MIX=1;exports.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX=INTERRUPTION_MODE_ANDROID_DO_NOT_MIX;var INTERRUPTION_MODE_ANDROID_DUCK_OTHERS=2;exports.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS=INTERRUPTION_MODE_ANDROID_DUCK_OTHERS;var _isValueValid=function _isValueValid(value,validValues){return validValues.filter(function(validValue){return validValue===value;}).length>0;};var _findMissingKeys=function _findMissingKeys(object,requiredKeys){return requiredKeys.filter(function(requiredKey){return!(requiredKey in object);});};function setAudioModeAsync(mode){var missingKeys;return _regenerator.default.async(function setAudioModeAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:missingKeys=_findMissingKeys(mode,['allowsRecordingIOS','interruptionModeIOS','playsInSilentModeIOS','interruptionModeAndroid','shouldDuckAndroid','playThroughEarpieceAndroid']);if(!(missingKeys.length>0)){_context.next=3;break;}throw new Error(\"Audio mode attempted to be set without the required keys: \"+JSON.stringify(missingKeys));case 3:if(_isValueValid(mode.interruptionModeIOS,[INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS,INTERRUPTION_MODE_IOS_DO_NOT_MIX,INTERRUPTION_MODE_IOS_DUCK_OTHERS])){_context.next=5;break;}throw new Error(\"\\\"interruptionModeIOS\\\" was set to an invalid value.\");case 5:if(_isValueValid(mode.interruptionModeAndroid,[INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,INTERRUPTION_MODE_ANDROID_DUCK_OTHERS])){_context.next=7;break;}throw new Error(\"\\\"interruptionModeAndroid\\\" was set to an invalid value.\");case 7:if(!(typeof mode.allowsRecordingIOS!=='boolean'||typeof mode.playsInSilentModeIOS!=='boolean'||typeof mode.shouldDuckAndroid!=='boolean'||typeof mode.playThroughEarpieceAndroid!=='boolean')){_context.next=9;break;}throw new Error('\"allowsRecordingIOS\", \"playsInSilentModeIOS\", \"playThroughEarpieceAndroid\", and \"shouldDuckAndroid\" must be booleans.');case 9:_context.next=11;return _regenerator.default.awrap(_reactNative.NativeModules.ExponentAV.setAudioMode(mode));case 11:return _context.abrupt(\"return\",_context.sent);case 12:case\"end\":return _context.stop();}}},null,this);}","map":{"version":3,"sources":["../../src/av/Audio.ts"],"names":[],"mappings":"83BAAA,yCAEA,6SACA,6RACA,4DAWO,GAAM,CAAA,qCAAqC,CAAG,CAA9C,C,oFACA,GAAM,CAAA,gCAAgC,CAAG,CAAzC,C,0EACA,GAAM,CAAA,iCAAiC,CAAG,CAA1C,C,4EAEA,GAAM,CAAA,oCAAoC,CAAG,CAA7C,C,kFACA,GAAM,CAAA,qCAAqC,CAAG,CAA9C,C,oFAGP,GAAM,CAAA,aAAa,CAAG,QAAhB,CAAA,aAAgB,CAAC,KAAD,CAAa,WAAb,CAA4C,CAChE,MAAO,CAAA,WAAW,CAAC,MAAZ,CAAmB,SAAA,UAAU,QAAI,CAAA,UAAU,GAAK,KAAnB,EAA7B,EAAuD,MAAvD,CAAgE,CAAvE,CACD,CAFD,CAKA,GAAM,CAAA,gBAAgB,CAAG,QAAnB,CAAA,gBAAmB,CAAC,MAAD,CAAiB,YAAjB,CAA+C,CACtE,MAAO,CAAA,YAAY,CAAC,MAAb,CAAoB,SAAA,WAAW,QAAI,EAAE,WAAW,GAAI,CAAA,MAAjB,CAAJ,EAA/B,CAAP,CACD,CAFD,CAIO,QAAe,CAAA,iBAAf,CAAiC,IAAjC,8IACC,WADD,CACe,gBAAgB,CAAC,IAAD,CAAO,CACzC,oBADyC,CAEzC,qBAFyC,CAGzC,sBAHyC,CAIzC,yBAJyC,CAKzC,mBALyC,CAMzC,4BANyC,CAAP,CAD/B,MASD,WAAW,CAAC,MAAZ,CAAqB,CATpB,+BAUG,IAAI,CAAA,KAAJ,8DACyD,IAAI,CAAC,SAAL,CAAe,WAAf,CADzD,CAVH,WAeF,aAAa,CAAC,IAAI,CAAC,mBAAN,CAA2B,CACvC,qCADuC,CAEvC,gCAFuC,CAGvC,iCAHuC,CAA3B,CAfX,8BAqBG,IAAI,CAAA,KAAJ,wDArBH,WAwBF,aAAa,CAAC,IAAI,CAAC,uBAAN,CAA+B,CAC3C,oCAD2C,CAE3C,qCAF2C,CAA/B,CAxBX,8BA6BG,IAAI,CAAA,KAAJ,4DA7BH,aAgCH,MAAO,CAAA,IAAI,CAAC,kBAAZ,GAAmC,SAAnC,EACA,MAAO,CAAA,IAAI,CAAC,oBAAZ,GAAqC,SADrC,EAEA,MAAO,CAAA,IAAI,CAAC,iBAAZ,GAAkC,SAFlC,EAGA,MAAO,CAAA,IAAI,CAAC,0BAAZ,GAA2C,SAnCxC,+BAqCG,IAAI,CAAA,KAAJ,CACJ,uHADI,CArCH,2DAyCQ,2BAAc,UAAd,CAAyB,YAAzB,CAAsC,IAAtC,CAzCR","sourcesContent":["import { NativeModules } from 'react-native';\n\nexport * from './Audio/Recording';\nexport * from './Audio/Sound';\nexport { setIsEnabledAsync } from './Audio/AudioAvailability';\n\nexport type AudioMode = {\n  allowsRecordingIOS: boolean;\n  interruptionModeIOS: number;\n  playsInSilentModeIOS: boolean;\n  interruptionModeAndroid: boolean;\n  shouldDuckAndroid: boolean;\n  playThroughEarpieceAndroid: boolean;\n};\n\nexport const INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS = 0;\nexport const INTERRUPTION_MODE_IOS_DO_NOT_MIX = 1;\nexport const INTERRUPTION_MODE_IOS_DUCK_OTHERS = 2;\n\nexport const INTERRUPTION_MODE_ANDROID_DO_NOT_MIX = 1;\nexport const INTERRUPTION_MODE_ANDROID_DUCK_OTHERS = 2;\n\n// Returns true if value is in validValues, and false if not.\nconst _isValueValid = (value: any, validValues: any[]): boolean => {\n  return validValues.filter(validValue => validValue === value).length > 0;\n};\n\n// Returns array of missing keys in object. Returns an empty array if no missing keys are found.\nconst _findMissingKeys = (object: Object, requiredKeys: any[]): any[] => {\n  return requiredKeys.filter(requiredKey => !(requiredKey in object));\n};\n\nexport async function setAudioModeAsync(mode: AudioMode): Promise<void> {\n  const missingKeys = _findMissingKeys(mode, [\n    'allowsRecordingIOS',\n    'interruptionModeIOS',\n    'playsInSilentModeIOS',\n    'interruptionModeAndroid',\n    'shouldDuckAndroid',\n    'playThroughEarpieceAndroid',\n  ]);\n  if (missingKeys.length > 0) {\n    throw new Error(\n      `Audio mode attempted to be set without the required keys: ${JSON.stringify(missingKeys)}`\n    );\n  }\n  if (\n    !_isValueValid(mode.interruptionModeIOS, [\n      INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS,\n      INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n      INTERRUPTION_MODE_IOS_DUCK_OTHERS,\n    ])\n  ) {\n    throw new Error(`\"interruptionModeIOS\" was set to an invalid value.`);\n  }\n  if (\n    !_isValueValid(mode.interruptionModeAndroid, [\n      INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n      INTERRUPTION_MODE_ANDROID_DUCK_OTHERS,\n    ])\n  ) {\n    throw new Error(`\"interruptionModeAndroid\" was set to an invalid value.`);\n  }\n  if (\n    typeof mode.allowsRecordingIOS !== 'boolean' ||\n    typeof mode.playsInSilentModeIOS !== 'boolean' ||\n    typeof mode.shouldDuckAndroid !== 'boolean' ||\n    typeof mode.playThroughEarpieceAndroid !== 'boolean'\n  ) {\n    throw new Error(\n      '\"allowsRecordingIOS\", \"playsInSilentModeIOS\", \"playThroughEarpieceAndroid\", and \"shouldDuckAndroid\" must be booleans.'\n    );\n  }\n  return await NativeModules.ExponentAV.setAudioMode(mode);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}