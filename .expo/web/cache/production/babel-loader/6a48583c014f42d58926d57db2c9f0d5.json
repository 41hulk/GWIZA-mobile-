{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.speak=speak;exports.isSpeakingAsync=isSpeakingAsync;exports.stop=stop;exports.pause=pause;exports.resume=resume;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _reactNative=require(\"react-native\");var ExponentSpeech=_reactNative.NativeModules.ExponentSpeech;var SpeechEventEmitter=new _reactNative.NativeEventEmitter(ExponentSpeech);var _CALLBACKS={};var _nextCallbackId=1;var _didSetListeners=false;function _unregisterListenersIfNeeded(){if(Object.keys(_CALLBACKS).length===0){removeSpeakingListener('Exponent.speakingStarted');removeSpeakingListener('Exponent.speakingDone');removeSpeakingListener('Exponent.speakingStopped');removeSpeakingListener('Exponent.speakingError');_didSetListeners=false;}}function _registerListenersIfNeeded(){if(_didSetListeners)return;_didSetListeners=true;setSpeakingListener('Exponent.speakingStarted',function(_ref){var id=_ref.id;var options=_CALLBACKS[id];if(options&&options.onStart){options.onStart();}});setSpeakingListener('Exponent.speakingDone',function(_ref2){var id=_ref2.id;var options=_CALLBACKS[id];if(options&&options.onDone){options.onDone();}delete _CALLBACKS[id];_unregisterListenersIfNeeded();});setSpeakingListener('Exponent.speakingStopped',function(_ref3){var id=_ref3.id;var options=_CALLBACKS[id];if(options&&options.onStopped){options.onStopped();}delete _CALLBACKS[id];_unregisterListenersIfNeeded();});setSpeakingListener('Exponent.speakingError',function(_ref4){var id=_ref4.id,error=_ref4.error;var options=_CALLBACKS[id];if(options&&options.onError){options.onError(new Error(error));}delete _CALLBACKS[id];_unregisterListenersIfNeeded();});}function speak(text){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var id=_nextCallbackId++;_CALLBACKS[id]=options;_registerListenersIfNeeded();ExponentSpeech.speak(String(id),text,options);}function isSpeakingAsync(){return _regenerator.default.async(function isSpeakingAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regenerator.default.awrap(ExponentSpeech.isSpeaking());case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},null,this);}function stop(){ExponentSpeech.stop();}function pause(){if(_reactNative.Platform.OS==='ios'){ExponentSpeech.pause();}else{throw new Error('Speech.pause is not available on Android');}}function resume(){if(_reactNative.Platform.OS==='ios'){ExponentSpeech.resume();}else{throw new Error('Speech.resume is not available on Android');}}function setSpeakingListener(eventName,callback){if(SpeechEventEmitter.listeners(eventName).length>0){SpeechEventEmitter.removeAllListeners(eventName);}SpeechEventEmitter.addListener(eventName,callback);}function removeSpeakingListener(eventName){SpeechEventEmitter.removeAllListeners(eventName);}","map":{"version":3,"sources":["../src/Speech.ts"],"names":[],"mappings":"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","sourcesContent":["import { NativeModules, NativeEventEmitter, Platform } from 'react-native';\n\nconst { ExponentSpeech } = NativeModules;\nconst SpeechEventEmitter = new NativeEventEmitter(ExponentSpeech);\n\ntype Options = {\n  language?: string;\n  pitch?: number;\n  rate?: number;\n  onStart?: () => void;\n  onStopped?: () => void;\n  onDone?: () => void;\n  onError?: (error: Error) => void;\n};\n\nconst _CALLBACKS = {};\nlet _nextCallbackId = 1;\nlet _didSetListeners = false;\n\nfunction _unregisterListenersIfNeeded() {\n  if (Object.keys(_CALLBACKS).length === 0) {\n    removeSpeakingListener('Exponent.speakingStarted');\n    removeSpeakingListener('Exponent.speakingDone');\n    removeSpeakingListener('Exponent.speakingStopped');\n    removeSpeakingListener('Exponent.speakingError');\n    _didSetListeners = false;\n  }\n}\n\nfunction _registerListenersIfNeeded() {\n  if (_didSetListeners) return;\n  _didSetListeners = true;\n  setSpeakingListener('Exponent.speakingStarted', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStart) {\n      options.onStart();\n    }\n  });\n  setSpeakingListener('Exponent.speakingDone', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onDone) {\n      options.onDone();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingStopped', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStopped) {\n      options.onStopped();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingError', ({ id, error }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onError) {\n      options.onError(new Error(error));\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n}\n\nexport function speak(text: string, options: Options = {}) {\n  const id = _nextCallbackId++;\n  _CALLBACKS[id] = options;\n  _registerListenersIfNeeded();\n  ExponentSpeech.speak(String(id), text, options);\n}\n\nexport async function isSpeakingAsync(): Promise<boolean> {\n  return await ExponentSpeech.isSpeaking();\n}\n\nexport function stop() {\n  ExponentSpeech.stop();\n}\n\nexport function pause() {\n  if (Platform.OS === 'ios') {\n    ExponentSpeech.pause();\n  } else {\n    throw new Error('Speech.pause is not available on Android');\n  }\n}\n\nexport function resume() {\n  if (Platform.OS === 'ios') {\n    ExponentSpeech.resume();\n  } else {\n    throw new Error('Speech.resume is not available on Android');\n  }\n}\n\nfunction setSpeakingListener(eventName, callback) {\n  if (SpeechEventEmitter.listeners(eventName).length > 0) {\n    SpeechEventEmitter.removeAllListeners(eventName);\n  }\n  SpeechEventEmitter.addListener(eventName, callback);\n}\n\nfunction removeSpeakingListener(eventName) {\n  SpeechEventEmitter.removeAllListeners(eventName);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}