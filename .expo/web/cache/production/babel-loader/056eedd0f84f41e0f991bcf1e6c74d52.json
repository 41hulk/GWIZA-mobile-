{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireWildcard(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _Theme=_interopRequireWildcard(require(\"./Theme\"));var _normalizeStyle=_interopRequireDefault(require(\"./StyleNormalizer/normalizeStyle\"));var StyleProvider=function(_React$Component){(0,_inherits2.default)(StyleProvider,_React$Component);function StyleProvider(props,context){var _this;(0,_classCallCheck2.default)(this,StyleProvider);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(StyleProvider).call(this,props,context));_this.state={theme:_this.createTheme(props)};return _this;}(0,_createClass2.default)(StyleProvider,[{key:\"getChildContext\",value:function getChildContext(){return{theme:this.state.theme};}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(nextProps.style!==this.props.style){this.setState({theme:this.createTheme(nextProps)});}}},{key:\"createTheme\",value:function createTheme(props){return new _Theme.default(props.style);}},{key:\"render\",value:function render(){var children=this.props.children;return _react.Children.only(children);}}]);return StyleProvider;}(_react.default.Component);exports.default=StyleProvider;StyleProvider.propTypes={children:_propTypes.default.element.isRequired,style:_propTypes.default.object};StyleProvider.defaultProps={style:{}};StyleProvider.childContextTypes={theme:_Theme.ThemeShape.isRequired};","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/native-base-shoutem-theme/src/StyleProvider.js"],"names":["StyleProvider","props","context","state","theme","createTheme","nextProps","style","setState","Theme","children","Children","only","React","Component","propTypes","PropTypes","element","isRequired","object","defaultProps","childContextTypes","ThemeShape"],"mappings":"ktBAAA,qDACA,6DACA,uDACA,wF,GAKqBA,CAAAA,a,mFAcnB,uBAAYC,KAAZ,CAAmBC,OAAnB,CAA4B,4DAC1B,yGAAMD,KAAN,CAAaC,OAAb,GACA,MAAKC,KAAL,CAAa,CACXC,KAAK,CAAE,MAAKC,WAAL,CAAiBJ,KAAjB,CADI,CAAb,CAF0B,aAK3B,C,gGAEiB,CAChB,MAAO,CACLG,KAAK,CAAE,KAAKD,KAAL,CAAWC,KADb,CAAP,CAGD,C,4EAEyBE,S,CAAW,CACnC,GAAIA,SAAS,CAACC,KAAV,GAAoB,KAAKN,KAAL,CAAWM,KAAnC,CAA0C,CACxC,KAAKC,QAAL,CAAc,CACZJ,KAAK,CAAE,KAAKC,WAAL,CAAiBC,SAAjB,CADK,CAAd,EAGD,CACF,C,gDAEWL,K,CAAO,CACjB,MAAO,IAAIQ,eAAJ,CAAUR,KAAK,CAACM,KAAhB,CAAP,CACD,C,uCAEQ,IACCG,CAAAA,QADD,CACc,KAAKT,KADnB,CACCS,QADD,CAGP,MAAOC,iBAASC,IAAT,CAAcF,QAAd,CAAP,CACD,C,2BA3CwCG,eAAMC,S,gCAA5Bd,a,CACZe,S,CAAY,CACjBL,QAAQ,CAAEM,mBAAUC,OAAV,CAAkBC,UADX,CAEjBX,KAAK,CAAES,mBAAUG,MAFA,C,CADAnB,a,CAMZoB,Y,CAAe,CACpBb,KAAK,CAAE,EADa,C,CANHP,a,CAUZqB,iB,CAAoB,CACzBjB,KAAK,CAAEkB,kBAAWJ,UADO,C","sourcesContent":["import React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport Theme, { ThemeShape } from './Theme';\nimport normalizeStyle from './StyleNormalizer/normalizeStyle';\n\n/**\n *  Provides a theme to child components trough context.\n */\nexport default class StyleProvider extends React.Component {\n  static propTypes = {\n    children: PropTypes.element.isRequired,\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    style: {},\n  };\n\n  static childContextTypes = {\n    theme: ThemeShape.isRequired,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      theme: this.createTheme(props),\n    };\n  }\n\n  getChildContext() {\n    return {\n      theme: this.state.theme,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.style !== this.props.style) {\n      this.setState({\n        theme: this.createTheme(nextProps),\n      });\n    }\n  }\n\n  createTheme(props) {\n    return new Theme(props.style);\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return Children.only(children);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}