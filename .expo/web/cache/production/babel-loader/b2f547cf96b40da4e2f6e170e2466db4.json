{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});var _reactIs=require('react-is');var _invariant=require(\"../utils/invariant\");var _invariant2=_interopRequireDefault(_invariant);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function validateRouteConfigMap(routeConfigs){var routeNames=Object.keys(routeConfigs);(0,_invariant2.default)(routeNames.length>0,'Please specify at least one route when configuring a navigator.');routeNames.forEach(function(routeName){var routeConfig=routeConfigs[routeName];var screenComponent=getScreenComponent(routeConfig);if(!screenComponent||!(0,_reactIs.isValidElementType)(screenComponent)&&!routeConfig.getScreen){throw new Error(\"The component for route '\"+routeName+\"' must be a React component. For example:\\n\\nimport MyScreen from './MyScreen';\\n...\\n\"+routeName+\": MyScreen,\\n}\\n\\nYou can also use a navigator:\\n\\nimport MyNavigator from './MyNavigator';\\n...\\n\"+routeName+\": MyNavigator,\\n}\");}if(routeConfig.screen&&routeConfig.getScreen){throw new Error(\"Route '\"+routeName+\"' should declare a screen or a getScreen, not both.\");}});}function getScreenComponent(routeConfig){if(!routeConfig){return null;}return routeConfig.screen?routeConfig.screen:routeConfig;}exports.default=validateRouteConfigMap;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js"],"names":["Object","defineProperty","exports","value","_reactIs","require","_invariant","_invariant2","_interopRequireDefault","obj","__esModule","default","validateRouteConfigMap","routeConfigs","routeNames","keys","length","forEach","routeName","routeConfig","screenComponent","getScreenComponent","isValidElementType","getScreen","Error","screen"],"mappings":"AAAA,aAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CC,KAAK,CAAE,IADoC,CAA7C,EAIA,GAAIC,CAAAA,QAAQ,CAAGC,OAAO,CAAC,UAAD,CAAtB,CAEA,GAAIC,CAAAA,UAAU,CAAGD,OAAO,sBAAxB,CAEA,GAAIE,CAAAA,WAAW,CAAGC,sBAAsB,CAACF,UAAD,CAAxC,CAEA,QAASE,CAAAA,sBAAT,CAAgCC,GAAhC,CAAqC,CAAE,MAAOA,CAAAA,GAAG,EAAIA,GAAG,CAACC,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,OAAO,CAAEF,GAAX,CAArC,CAAwD,CAM/F,QAASG,CAAAA,sBAAT,CAAgCC,YAAhC,CAA8C,CAC5C,GAAIC,CAAAA,UAAU,CAAGd,MAAM,CAACe,IAAP,CAAYF,YAAZ,CAAjB,CACA,CAAC,EAAGN,WAAW,CAACI,OAAhB,EAAyBG,UAAU,CAACE,MAAX,CAAoB,CAA7C,CAAgD,iEAAhD,EAEAF,UAAU,CAACG,OAAX,CAAmB,SAAAC,SAAS,CAAI,CAC9B,GAAIC,CAAAA,WAAW,CAAGN,YAAY,CAACK,SAAD,CAA9B,CACA,GAAIE,CAAAA,eAAe,CAAGC,kBAAkB,CAACF,WAAD,CAAxC,CAEA,GAAI,CAACC,eAAD,EAAoB,CAAC,CAAC,EAAGhB,QAAQ,CAACkB,kBAAb,EAAiCF,eAAjC,CAAD,EAAsD,CAACD,WAAW,CAACI,SAA3F,CAAsG,CACpG,KAAM,IAAIC,CAAAA,KAAJ,6BAAsCN,SAAtC,0FAIVA,SAJU,sGAWVA,SAXU,qBAAN,CAaD,CAED,GAAIC,WAAW,CAACM,MAAZ,EAAsBN,WAAW,CAACI,SAAtC,CAAiD,CAC/C,KAAM,IAAIC,CAAAA,KAAJ,WAAoBN,SAApB,uDAAN,CACD,CACF,CAvBD,EAwBD,CAED,QAASG,CAAAA,kBAAT,CAA4BF,WAA5B,CAAyC,CACvC,GAAI,CAACA,WAAL,CAAkB,CAChB,MAAO,KAAP,CACD,CAED,MAAOA,CAAAA,WAAW,CAACM,MAAZ,CAAqBN,WAAW,CAACM,MAAjC,CAA0CN,WAAjD,CACD,CAEDjB,OAAO,CAACS,OAAR,CAAkBC,sBAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reactIs = require('react-is');\n\nvar _invariant = require('../utils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Make sure the config passed e.g. to StackRouter, TabRouter has\n * the correct format, and throw a clear error if it doesn't.\n */\nfunction validateRouteConfigMap(routeConfigs) {\n  var routeNames = Object.keys(routeConfigs);\n  (0, _invariant2.default)(routeNames.length > 0, 'Please specify at least one route when configuring a navigator.');\n\n  routeNames.forEach(routeName => {\n    var routeConfig = routeConfigs[routeName];\n    var screenComponent = getScreenComponent(routeConfig);\n\n    if (!screenComponent || !(0, _reactIs.isValidElementType)(screenComponent) && !routeConfig.getScreen) {\n      throw new Error(`The component for route '${routeName}' must be a React component. For example:\n\nimport MyScreen from './MyScreen';\n...\n${routeName}: MyScreen,\n}\n\nYou can also use a navigator:\n\nimport MyNavigator from './MyNavigator';\n...\n${routeName}: MyNavigator,\n}`);\n    }\n\n    if (routeConfig.screen && routeConfig.getScreen) {\n      throw new Error(`Route '${routeName}' should declare a screen or a getScreen, not both.`);\n    }\n  });\n}\n\nfunction getScreenComponent(routeConfig) {\n  if (!routeConfig) {\n    return null;\n  }\n\n  return routeConfig.screen ? routeConfig.screen : routeConfig;\n}\n\nexports.default = validateRouteConfigMap;"]},"metadata":{},"sourceType":"script"}