{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _decorateMapComponent=_interopRequireWildcard(require(\"./decorateMapComponent\"));var viewPropTypes=_reactNative.ViewPropTypes||_reactNative.View.propTypes;var propTypes=(0,_objectSpread2.default)({},viewPropTypes,{urlTemplate:_propTypes.default.string.isRequired,zIndex:_propTypes.default.number,maximumZ:_propTypes.default.number,minimumZ:_propTypes.default.number,shouldReplaceMapContent:_propTypes.default.bool});var MapUrlTile=function(_React$Component){(0,_inherits2.default)(MapUrlTile,_React$Component);function MapUrlTile(){(0,_classCallCheck2.default)(this,MapUrlTile);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(MapUrlTile).apply(this,arguments));}(0,_createClass2.default)(MapUrlTile,[{key:\"render\",value:function render(){var AIRMapUrlTile=this.getAirComponent();return _react.default.createElement(AIRMapUrlTile,this.props);}}]);return MapUrlTile;}(_react.default.Component);MapUrlTile.propTypes=propTypes;var _default=(0,_decorateMapComponent.default)(MapUrlTile,{componentType:'UrlTile',providers:{google:{ios:_decorateMapComponent.SUPPORTED,android:_decorateMapComponent.USES_DEFAULT_IMPLEMENTATION}}});exports.default=_default;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native-maps/lib/components/MapUrlTile.js"],"names":["viewPropTypes","ViewPropTypes","View","propTypes","urlTemplate","PropTypes","string","isRequired","zIndex","number","maximumZ","minimumZ","shouldReplaceMapContent","bool","MapUrlTile","AIRMapUrlTile","getAirComponent","props","React","Component","componentType","providers","google","ios","SUPPORTED","android","USES_DEFAULT_IMPLEMENTATION"],"mappings":"4yBAAA,6DACA,oDAEA,yCAKA,qFAMA,GAAMA,CAAAA,aAAa,CAAGC,4BAAiBC,kBAAKC,SAA5C,CAEA,GAAMA,CAAAA,SAAS,+BACVH,aADU,EAObI,WAAW,CAAEC,mBAAUC,MAAV,CAAiBC,UAPjB,CAgBbC,MAAM,CAAEH,mBAAUI,MAhBL,CAqBbC,QAAQ,CAAEL,mBAAUI,MArBP,CA2BbE,QAAQ,CAAEN,mBAAUI,MA3BP,CAkCbG,uBAAuB,CAAEP,mBAAUQ,IAlCtB,EAAf,C,GAqCMC,CAAAA,U,mVACK,CACP,GAAMC,CAAAA,aAAa,CAAG,KAAKC,eAAL,EAAtB,CACA,MACE,8BAAC,aAAD,CACM,KAAKC,KADX,CADF,CAKD,C,wBARsBC,eAAMC,S,EAW/BL,UAAU,CAACX,SAAX,CAAuBA,SAAvB,C,aAEe,kCAAqBW,UAArB,CAAiC,CAC9CM,aAAa,CAAE,SAD+B,CAE9CC,SAAS,CAAE,CACTC,MAAM,CAAE,CACNC,GAAG,CAAEC,+BADC,CAENC,OAAO,CAAEC,iDAFH,CADC,CAFmC,CAAjC,C","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  ViewPropTypes,\n  View,\n} from 'react-native';\n\nimport decorateMapComponent, {\n  USES_DEFAULT_IMPLEMENTATION,\n  SUPPORTED,\n} from './decorateMapComponent';\n\n// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)\nconst viewPropTypes = ViewPropTypes || View.propTypes;\n\nconst propTypes = {\n  ...viewPropTypes,\n\n  /**\n   * The url template of the tile server. The patterns {x} {y} {z} will be replaced at runtime\n   * For example, http://c.tile.openstreetmap.org/{z}/{x}/{y}.png\n   */\n  urlTemplate: PropTypes.string.isRequired,\n\n  /**\n   * The order in which this tile overlay is drawn with respect to other overlays. An overlay\n   * with a larger z-index is drawn over overlays with smaller z-indices. The order of overlays\n   * with the same z-index is arbitrary. The default zIndex is -1.\n   *\n   * @platform android\n   */\n  zIndex: PropTypes.number,\n  /**\n   * The maximum zoom level for this tile overlay.\n   *\n   */\n  maximumZ: PropTypes.number,\n\n  /**\n   * The minimum zoom level for this tile overlay.\n   *\n   */\n  minimumZ: PropTypes.number,\n\n  /**\n   * Corresponds to MKTileOverlay canReplaceMapContent.\n   *\n   * @platform ios\n   */\n  shouldReplaceMapContent: PropTypes.bool,\n};\n\nclass MapUrlTile extends React.Component {\n  render() {\n    const AIRMapUrlTile = this.getAirComponent();\n    return (\n      <AIRMapUrlTile\n        {...this.props}\n      />\n    );\n  }\n}\n\nMapUrlTile.propTypes = propTypes;\n\nexport default decorateMapComponent(MapUrlTile, {\n  componentType: 'UrlTile',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"script"}