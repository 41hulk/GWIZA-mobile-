{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _invariant=_interopRequireDefault(require(\"../utils/invariant\"));var _ScenesReducer=_interopRequireDefault(require(\"./ScenesReducer\"));var DefaultTransitionSpec={duration:250,easing:_reactNative.Easing.inOut(_reactNative.Easing.ease),timing:_reactNative.Animated.timing};var Transitioner=function(_React$Component){(0,_inherits2.default)(Transitioner,_React$Component);function Transitioner(_props,context){var _this;(0,_classCallCheck2.default)(this,Transitioner);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(Transitioner).call(this,_props,context));_this._computeScenes=function(props,nextProps){var nextScenes=(0,_ScenesReducer.default)(_this.state.scenes,nextProps.navigation.state,props.navigation.state,nextProps.descriptors);if(!nextProps.navigation.state.isTransitioning){nextScenes=filterStale(nextScenes);}if(nextProps.screenProps!==_this.props.screenProps){_this.setState({nextScenes:nextScenes});}if(nextScenes===_this.state.scenes){return;}return nextScenes;};_this._onLayout=function(event){var _event$nativeEvent$la=event.nativeEvent.layout,height=_event$nativeEvent$la.height,width=_event$nativeEvent$la.width;if(_this.state.layout.initWidth===width&&_this.state.layout.initHeight===height){return;}var layout=(0,_objectSpread2.default)({},_this.state.layout,{initHeight:height,initWidth:width,isMeasured:true});layout.height.setValue(height);layout.width.setValue(width);var nextState=(0,_objectSpread2.default)({},_this.state,{layout:layout});_this._transitionProps=buildTransitionProps(_this.props,nextState);_this.setState(nextState);};_this._onTransitionEnd=function(){if(!_this._isMounted){return;}var prevTransitionProps=_this._prevTransitionProps;_this._prevTransitionProps=null;var scenes=filterStale(_this.state.scenes);var nextState=(0,_objectSpread2.default)({},_this.state,{scenes:scenes});_this._transitionProps=buildTransitionProps(_this.props,nextState);_this.setState(nextState,function _callee(){var result,prevProps;return _regenerator.default.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!_this.props.onTransitionEnd){_context.next=5;break;}result=_this.props.onTransitionEnd(_this._transitionProps,prevTransitionProps);if(!(result instanceof Promise)){_context.next=5;break;}_context.next=5;return _regenerator.default.awrap(result);case 5:if(_this._queuedTransition){prevProps=_this._queuedTransition.prevProps;_this._queuedTransition=null;_this._startTransition(prevProps,_this.props);}else{_this._isTransitionRunning=false;}case 6:case\"end\":return _context.stop();}}},null,this);});};var _layout={height:new _reactNative.Animated.Value(0),initHeight:0,initWidth:0,isMeasured:false,width:new _reactNative.Animated.Value(0)};var position=new _reactNative.Animated.Value(_this.props.navigation.state.index);_this._positionListener=position.addListener(function(){});_this.state={layout:_layout,position:position,scenes:(0,_ScenesReducer.default)([],_this.props.navigation.state,null,_this.props.descriptors)};_this._prevTransitionProps=null;_this._transitionProps=buildTransitionProps(_props,_this.state);_this._isMounted=false;_this._isTransitionRunning=false;_this._queuedTransition=null;return _this;}(0,_createClass2.default)(Transitioner,[{key:\"componentDidMount\",value:function componentDidMount(){this._isMounted=true;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._isMounted=false;this._positionListener&&this.state.position.removeListener(this._positionListener);}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(this._isTransitionRunning){if(!this._queuedTransition){this._queuedTransition={prevProps:this.props};}return;}this._startTransition(this.props,nextProps);}},{key:\"_startTransition\",value:function _startTransition(props,nextProps){var _this2=this;var indexHasChanged=props.navigation.state.index!==nextProps.navigation.state.index;var nextScenes=this._computeScenes(props,nextProps);if(!nextScenes){this._prevTransitionProps=this._transitionProps;this.state.position.setValue(props.navigation.state.index);this._onTransitionEnd();return;}var nextState=(0,_objectSpread2.default)({},this.state,{scenes:nextScenes});var position=nextState.position;var toValue=nextProps.navigation.state.index;this._prevTransitionProps=this._transitionProps;this._transitionProps=buildTransitionProps(nextProps,nextState);var isTransitioning=this._transitionProps.navigation.state.isTransitioning;if(!isTransitioning||!indexHasChanged){this.setState(nextState,function _callee2(){var result;return _regenerator.default.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!nextProps.onTransitionStart){_context2.next=5;break;}result=nextProps.onTransitionStart(_this2._transitionProps,_this2._prevTransitionProps);if(!(result instanceof Promise)){_context2.next=5;break;}_context2.next=5;return _regenerator.default.awrap(result);case 5:indexHasChanged&&position.setValue(toValue);_this2._onTransitionEnd();case 7:case\"end\":return _context2.stop();}}},null,this);});}else if(isTransitioning){this._isTransitionRunning=true;this.setState(nextState,function _callee3(){var result;return _regenerator.default.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!nextProps.onTransitionStart){_context3.next=5;break;}result=nextProps.onTransitionStart(_this2._transitionProps,_this2._prevTransitionProps);if(!(result instanceof Promise)){_context3.next=5;break;}_context3.next=5;return _regenerator.default.awrap(result);case 5:case\"end\":return _context3.stop();}}},null,this);});var transitionUserSpec=nextProps.configureTransition?nextProps.configureTransition(this._transitionProps,this._prevTransitionProps):null;var transitionSpec=(0,_objectSpread2.default)({},DefaultTransitionSpec,transitionUserSpec);var timing=transitionSpec.timing;delete transitionSpec.timing;var positionHasChanged=position.__getValue()!==toValue;if(indexHasChanged&&positionHasChanged){timing(position,(0,_objectSpread2.default)({},transitionSpec,{toValue:nextProps.navigation.state.index})).start(function(){requestAnimationFrame(_this2._onTransitionEnd);});}else{this._onTransitionEnd();}}}},{key:\"render\",value:function render(){return _react.default.createElement(_reactNative.View,{onLayout:this._onLayout,style:styles.main},this.props.render(this._transitionProps,this._prevTransitionProps));}}]);return Transitioner;}(_react.default.Component);function buildTransitionProps(props,state){var navigation=props.navigation,options=props.options;var layout=state.layout,position=state.position,scenes=state.scenes;var scene=scenes.find(isSceneActive);(0,_invariant.default)(scene,'Could not find active scene');return{layout:layout,navigation:navigation,position:position,scenes:scenes,scene:scene,options:options,index:scene.index};}function isSceneNotStale(scene){return!scene.isStale;}function filterStale(scenes){var filtered=scenes.filter(isSceneNotStale);if(filtered.length===scenes.length){return scenes;}return filtered;}function isSceneActive(scene){return scene.isActive;}var styles=_reactNative.StyleSheet.create({main:{flex:1}});var _default=Transitioner;exports.default=_default;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-navigation-stack/dist/views/Transitioner.js"],"names":["DefaultTransitionSpec","duration","easing","Easing","inOut","ease","timing","Animated","Transitioner","props","context","_computeScenes","nextProps","nextScenes","state","scenes","navigation","descriptors","isTransitioning","filterStale","screenProps","setState","_onLayout","event","nativeEvent","layout","height","width","initWidth","initHeight","isMeasured","setValue","nextState","_transitionProps","buildTransitionProps","_onTransitionEnd","_isMounted","prevTransitionProps","_prevTransitionProps","onTransitionEnd","result","Promise","_queuedTransition","prevProps","_startTransition","_isTransitionRunning","Value","position","index","_positionListener","addListener","removeListener","indexHasChanged","toValue","onTransitionStart","transitionUserSpec","configureTransition","transitionSpec","positionHasChanged","__getValue","start","requestAnimationFrame","styles","main","render","React","Component","options","scene","find","isSceneActive","isSceneNotStale","isStale","filtered","filter","length","isActive","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Animated, Easing, StyleSheet, View } from 'react-native';\nimport invariant from '../utils/invariant';\n\nimport NavigationScenesReducer from './ScenesReducer';\n\n// Used for all animations unless overriden\nconst DefaultTransitionSpec = {\n  duration: 250,\n  easing: Easing.inOut(Easing.ease),\n  timing: Animated.timing\n};\n\nclass Transitioner extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    // The initial layout isn't measured. Measured layout will be only available\n    // when the component is mounted.\n    const layout = {\n      height: new Animated.Value(0),\n      initHeight: 0,\n      initWidth: 0,\n      isMeasured: false,\n      width: new Animated.Value(0)\n    };\n\n    const position = new Animated.Value(this.props.navigation.state.index);\n    this._positionListener = position.addListener(() => /* { value } */{\n      // This should work until we detach position from a view! so we have to be\n      // careful to not ever detach it, thus the gymnastics in _getPosition in\n      // StackViewLayout\n      // This should log each frame when releasing the gesture or when pressing\n      // the back button! If not, something has gone wrong with the animated\n      // value subscription\n      // console.log(value);\n    });\n\n    this.state = {\n      layout,\n      position,\n      scenes: NavigationScenesReducer([], this.props.navigation.state, null, this.props.descriptors)\n    };\n\n    this._prevTransitionProps = null;\n    this._transitionProps = buildTransitionProps(props, this.state);\n\n    this._isMounted = false;\n    this._isTransitionRunning = false;\n    this._queuedTransition = null;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this._positionListener && this.state.position.removeListener(this._positionListener);\n  }\n\n  // eslint-disable-next-line react/no-deprecated\n  componentWillReceiveProps(nextProps) {\n    if (this._isTransitionRunning) {\n      if (!this._queuedTransition) {\n        this._queuedTransition = { prevProps: this.props };\n      }\n      return;\n    }\n\n    this._startTransition(this.props, nextProps);\n  }\n\n  _computeScenes = (props, nextProps) => {\n    let nextScenes = NavigationScenesReducer(this.state.scenes, nextProps.navigation.state, props.navigation.state, nextProps.descriptors);\n\n    if (!nextProps.navigation.state.isTransitioning) {\n      nextScenes = filterStale(nextScenes);\n    }\n\n    // Update nextScenes when we change screenProps\n    // This is a workaround for https://github.com/react-navigation/react-navigation/issues/4271\n    if (nextProps.screenProps !== this.props.screenProps) {\n      this.setState({ nextScenes });\n    }\n\n    if (nextScenes === this.state.scenes) {\n      return;\n    }\n\n    return nextScenes;\n  };\n\n  _startTransition(props, nextProps) {\n    const indexHasChanged = props.navigation.state.index !== nextProps.navigation.state.index;\n    let nextScenes = this._computeScenes(props, nextProps);\n\n    if (!nextScenes) {\n      // prevTransitionProps are the same as transitionProps in this case\n      // because nothing changed\n      this._prevTransitionProps = this._transitionProps;\n\n      // Unsure if this is actually a good idea... Also related to\n      // https://github.com/react-navigation/react-navigation/issues/5247\n      // - the animation is interrupted before completion so this ensures\n      // that it is properly set to the final position before firing\n      // onTransitionEnd\n      this.state.position.setValue(props.navigation.state.index);\n\n      this._onTransitionEnd();\n      return;\n    }\n\n    const nextState = {\n      ...this.state,\n      scenes: nextScenes\n    };\n\n    // grab the position animated value\n    const { position } = nextState;\n\n    // determine where we are meant to transition to\n    const toValue = nextProps.navigation.state.index;\n\n    // compute transitionProps\n    this._prevTransitionProps = this._transitionProps;\n    this._transitionProps = buildTransitionProps(nextProps, nextState);\n    let { isTransitioning } = this._transitionProps.navigation.state;\n\n    // if the state isn't transitioning that is meant to signal that we should\n    // transition immediately to the new index. if the index hasn't changed, do\n    // the same thing here. it's not clear to me why we ever start a transition\n    // when the index hasn't changed, this requires further investigation.\n    if (!isTransitioning || !indexHasChanged) {\n      this.setState(nextState, async () => {\n        if (nextProps.onTransitionStart) {\n          const result = nextProps.onTransitionStart(this._transitionProps, this._prevTransitionProps);\n          if (result instanceof Promise) {\n            // why do we bother awaiting the result here?\n            await result;\n          }\n        }\n        // jump immediately to the new value\n        indexHasChanged && position.setValue(toValue);\n        // end the transition\n        this._onTransitionEnd();\n      });\n    } else if (isTransitioning) {\n      this._isTransitionRunning = true;\n      this.setState(nextState, async () => {\n        if (nextProps.onTransitionStart) {\n          const result = nextProps.onTransitionStart(this._transitionProps, this._prevTransitionProps);\n\n          // why do we bother awaiting the result here?\n          if (result instanceof Promise) {\n            await result;\n          }\n        }\n      });\n\n      // get the transition spec.\n      const transitionUserSpec = nextProps.configureTransition ? nextProps.configureTransition(this._transitionProps, this._prevTransitionProps) : null;\n\n      const transitionSpec = {\n        ...DefaultTransitionSpec,\n        ...transitionUserSpec\n      };\n\n      const { timing } = transitionSpec;\n      delete transitionSpec.timing;\n\n      // if swiped back, indexHasChanged == true && positionHasChanged == false\n      const positionHasChanged = position.__getValue() !== toValue;\n      if (indexHasChanged && positionHasChanged) {\n        timing(position, {\n          ...transitionSpec,\n          toValue: nextProps.navigation.state.index\n        }).start(() => {\n          // In case the animation is immediately interrupted for some reason,\n          // we move this to the next frame so that onTransitionStart can fire\n          // first (https://github.com/react-navigation/react-navigation/issues/5247)\n          requestAnimationFrame(this._onTransitionEnd);\n        });\n      } else {\n        this._onTransitionEnd();\n      }\n    }\n  }\n\n  render() {\n    return <View onLayout={this._onLayout} style={styles.main}>\n        {this.props.render(this._transitionProps, this._prevTransitionProps)}\n      </View>;\n  }\n\n  _onLayout = event => {\n    const { height, width } = event.nativeEvent.layout;\n    if (this.state.layout.initWidth === width && this.state.layout.initHeight === height) {\n      return;\n    }\n    const layout = {\n      ...this.state.layout,\n      initHeight: height,\n      initWidth: width,\n      isMeasured: true\n    };\n\n    layout.height.setValue(height);\n    layout.width.setValue(width);\n\n    const nextState = {\n      ...this.state,\n      layout\n    };\n\n    this._transitionProps = buildTransitionProps(this.props, nextState);\n    this.setState(nextState);\n  };\n\n  _onTransitionEnd = () => {\n    if (!this._isMounted) {\n      return;\n    }\n    const prevTransitionProps = this._prevTransitionProps;\n    this._prevTransitionProps = null;\n\n    const scenes = filterStale(this.state.scenes);\n\n    const nextState = {\n      ...this.state,\n      scenes\n    };\n\n    this._transitionProps = buildTransitionProps(this.props, nextState);\n\n    this.setState(nextState, async () => {\n      if (this.props.onTransitionEnd) {\n        const result = this.props.onTransitionEnd(this._transitionProps, prevTransitionProps);\n\n        if (result instanceof Promise) {\n          await result;\n        }\n      }\n\n      if (this._queuedTransition) {\n        let { prevProps } = this._queuedTransition;\n        this._queuedTransition = null;\n        this._startTransition(prevProps, this.props);\n      } else {\n        this._isTransitionRunning = false;\n      }\n    });\n  };\n}\n\nfunction buildTransitionProps(props, state) {\n  const { navigation, options } = props;\n\n  const { layout, position, scenes } = state;\n\n  const scene = scenes.find(isSceneActive);\n\n  invariant(scene, 'Could not find active scene');\n\n  return {\n    layout,\n    navigation,\n    position,\n    scenes,\n    scene,\n    options,\n    index: scene.index\n  };\n}\n\nfunction isSceneNotStale(scene) {\n  return !scene.isStale;\n}\n\nfunction filterStale(scenes) {\n  const filtered = scenes.filter(isSceneNotStale);\n  if (filtered.length === scenes.length) {\n    return scenes;\n  }\n  return filtered;\n}\n\nfunction isSceneActive(scene) {\n  return scene.isActive;\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1\n  }\n});\n\nexport default Transitioner;"]},"metadata":{},"sourceType":"script"}