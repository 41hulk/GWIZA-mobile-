{"ast":null,"code":"'use strict';var noop=require('noop-fn');var Queue=require('tiny-queue');var immediate=require('immediate');var WebSQLResultSet=require(\"./WebSQLResultSet\");function errorUnhandled(){return true;}function massageSQLResult(sql,insertId,rowsAffected,rows){if(/^\\s*UPDATE\\b/i.test(sql)){insertId=void 0;}else if(/^\\s*CREATE\\s+TABLE\\b/i.test(sql)){insertId=0;rowsAffected=0;}else if(/^\\s*DROP\\s+TABLE\\b/i.test(sql)){insertId=void 0;rowsAffected=0;}else if(!/^\\s*INSERT\\b/i.test(sql)){insertId=void 0;}return new WebSQLResultSet(insertId,rowsAffected,rows);}function SQLTask(sql,args,sqlCallback,sqlErrorCallback){this.sql=sql;this.args=args;this.sqlCallback=sqlCallback;this.sqlErrorCallback=sqlErrorCallback;}function runBatch(self,batch){function onDone(){self._running=false;runAllSql(self);}var readOnly=self._websqlDatabase._currentTask.readOnly;self._websqlDatabase._db.exec(batch,readOnly,function(err,results){if(err){self._error=err;return onDone();}for(var i=0;i<results.length;i++){var res=results[i];var batchTask=batch[i];if(res.error){if(batchTask.sqlErrorCallback(self,res.error)){self._error=res.error;return onDone();}}else{batchTask.sqlCallback(self,massageSQLResult(batch[i].sql,res.insertId,res.rowsAffected,res.rows));}}onDone();});}function runAllSql(self){if(self._running||self._complete){return;}if(self._error||!self._sqlQueue.length){self._complete=true;return self._websqlDatabase._onTransactionComplete(self._error);}self._running=true;var batch=[];var task;while(task=self._sqlQueue.shift()){batch.push(task);}runBatch(self,batch);}function executeSql(self,sql,args,sqlCallback,sqlErrorCallback){self._sqlQueue.push(new SQLTask(sql,args,sqlCallback,sqlErrorCallback));if(self._runningTimeout){return;}self._runningTimeout=true;immediate(function(){self._runningTimeout=false;runAllSql(self);});}function WebSQLTransaction(websqlDatabase){this._websqlDatabase=websqlDatabase;this._error=null;this._complete=false;this._runningTimeout=false;this._sqlQueue=new Queue();if(!websqlDatabase._currentTask.readOnly){this._sqlQueue.push(new SQLTask('BEGIN;',[],noop,noop));}}WebSQLTransaction.prototype.executeSql=function(sql,args,sqlCallback,sqlErrorCallback){args=Array.isArray(args)?args:[];sqlCallback=typeof sqlCallback==='function'?sqlCallback:noop;sqlErrorCallback=typeof sqlErrorCallback==='function'?sqlErrorCallback:errorUnhandled;executeSql(this,sql,args,sqlCallback,sqlErrorCallback);};WebSQLTransaction.prototype._checkDone=function(){runAllSql(this);};module.exports=WebSQLTransaction;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/@expo/websql/lib/websql/WebSQLTransaction.js"],"names":["noop","require","Queue","immediate","WebSQLResultSet","errorUnhandled","massageSQLResult","sql","insertId","rowsAffected","rows","test","SQLTask","args","sqlCallback","sqlErrorCallback","runBatch","self","batch","onDone","_running","runAllSql","readOnly","_websqlDatabase","_currentTask","_db","exec","err","results","_error","i","length","res","batchTask","error","_complete","_sqlQueue","_onTransactionComplete","task","shift","push","executeSql","_runningTimeout","WebSQLTransaction","websqlDatabase","prototype","Array","isArray","_checkDone","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar noop = require('noop-fn');\nvar Queue = require('tiny-queue');\nvar immediate = require('immediate');\nvar WebSQLResultSet = require('./WebSQLResultSet');\n\nfunction errorUnhandled() {\n  return true; // a non-truthy return indicates error was handled\n}\n\n// WebSQL has some bizarre behavior regarding insertId/rowsAffected. To try\n// to match the observed behavior of Chrome/Safari as much as possible, we\n// sniff the SQL message to try to massage the returned insertId/rowsAffected.\n// This helps us pass the tests, although it's error-prone and should\n// probably be revised.\nfunction massageSQLResult(sql, insertId, rowsAffected, rows) {\n  if (/^\\s*UPDATE\\b/i.test(sql)) {\n    // insertId is always undefined for \"UPDATE\" statements\n    insertId = void 0;\n  } else if (/^\\s*CREATE\\s+TABLE\\b/i.test(sql)) {\n    // WebSQL always returns an insertId of 0 for \"CREATE TABLE\" statements\n    insertId = 0;\n    rowsAffected = 0;\n  } else if (/^\\s*DROP\\s+TABLE\\b/i.test(sql)) {\n    // WebSQL always returns insertId=undefined and rowsAffected=0\n    // for \"DROP TABLE\" statements. Go figure.\n    insertId = void 0;\n    rowsAffected = 0;\n  } else if (!/^\\s*INSERT\\b/i.test(sql)) {\n    // for all non-inserts (deletes, etc.) insertId is always undefined\n    // ¯\\_(ツ)_/¯\n    insertId = void 0;\n  }\n  return new WebSQLResultSet(insertId, rowsAffected, rows);\n}\n\nfunction SQLTask(sql, args, sqlCallback, sqlErrorCallback) {\n  this.sql = sql;\n  this.args = args;\n  this.sqlCallback = sqlCallback;\n  this.sqlErrorCallback = sqlErrorCallback;\n}\n\nfunction runBatch(self, batch) {\n\n  function onDone() {\n    self._running = false;\n    runAllSql(self);\n  }\n\n  var readOnly = self._websqlDatabase._currentTask.readOnly;\n\n  self._websqlDatabase._db.exec(batch, readOnly, function (err, results) {\n    /* istanbul ignore next */\n    if (err) {\n      self._error = err;\n      return onDone();\n    }\n    for (var i = 0; i < results.length; i++) {\n      var res = results[i];\n      var batchTask = batch[i];\n      if (res.error) {\n        if (batchTask.sqlErrorCallback(self, res.error)) {\n          // user didn't handle the error\n          self._error = res.error;\n          return onDone();\n        }\n      } else {\n        batchTask.sqlCallback(self, massageSQLResult(\n          batch[i].sql, res.insertId, res.rowsAffected, res.rows));\n      }\n    }\n    onDone();\n  });\n}\n\nfunction runAllSql(self) {\n  if (self._running || self._complete) {\n    return;\n  }\n  if (self._error || !self._sqlQueue.length) {\n    self._complete = true;\n    return self._websqlDatabase._onTransactionComplete(self._error);\n  }\n  self._running = true;\n  var batch = [];\n  var task;\n  while ((task = self._sqlQueue.shift())) {\n    batch.push(task);\n  }\n  runBatch(self, batch);\n}\n\nfunction executeSql(self, sql, args, sqlCallback, sqlErrorCallback) {\n  self._sqlQueue.push(new SQLTask(sql, args, sqlCallback, sqlErrorCallback));\n  if (self._runningTimeout) {\n    return;\n  }\n  self._runningTimeout = true;\n  immediate(function () {\n    self._runningTimeout = false;\n    runAllSql(self);\n  });\n}\n\nfunction WebSQLTransaction(websqlDatabase) {\n  this._websqlDatabase = websqlDatabase;\n  this._error = null;\n  this._complete = false;\n  this._runningTimeout = false;\n  this._sqlQueue = new Queue();\n  if (!websqlDatabase._currentTask.readOnly) {\n    // Since we serialize all access to the database, there is no need to\n    // run read-only tasks in a transaction. This is a perf boost.\n    this._sqlQueue.push(new SQLTask('BEGIN;', [], noop, noop));\n  }\n}\n\nWebSQLTransaction.prototype.executeSql = function (sql, args, sqlCallback, sqlErrorCallback) {\n  args = Array.isArray(args) ? args : [];\n  sqlCallback = typeof sqlCallback === 'function' ? sqlCallback : noop;\n  sqlErrorCallback = typeof sqlErrorCallback === 'function' ? sqlErrorCallback : errorUnhandled;\n\n  executeSql(this, sql, args, sqlCallback, sqlErrorCallback);\n};\n\nWebSQLTransaction.prototype._checkDone = function () {\n  runAllSql(this);\n};\n\nmodule.exports = WebSQLTransaction;"]},"metadata":{},"sourceType":"script"}