{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _expoCore=require(\"expo-core\");var ExpoLocalization=_expoCore.NativeModulesProxy.ExpoLocalization;var isObject=function isObject(obj){return obj&&obj.constructor&&obj.constructor===Object;};var LocaleStore=function LocaleStore(locales){(0,_classCallCheck2.default)(this,LocaleStore);if(isObject(locales)===false||Object.keys(locales).length<=1){throw new Error('Locales input must be an object and non-empty');}var copy=(0,_objectSpread2.default)({},locales);var allGivenLocales=new Set(Object.keys(copy));var currentLocaleName=(0,_toConsumableArray2.default)(allGivenLocales)[0];var defaultLocale=copy[currentLocaleName];var defaultLocaleName=currentLocaleName;var defaultLocalePhrases=new Set(Object.keys(defaultLocale));var currentLocale=defaultLocale;var setLocaleHelper=function setLocaleHelper(newLocaleName,cb){if(allGivenLocales.has(newLocaleName)===false){if(__DEV__){var s=newLocaleName+\" is not a valid locale, known locales are \"+(0,_toConsumableArray2.default)(allGivenLocales);console.error(s);}}if(newLocaleName===currentLocaleName){if(__DEV__){console.warn('New Locale is the same as last, locale not changed');}return;}currentLocale=copy[newLocaleName];currentLocaleName=newLocaleName;cb&&cb();};var localizationValueHelper=function localizationValueHelper(name){if(defaultLocalePhrases.has(name)){var result=currentLocale[name];if(result!==undefined){return result!==undefined?result:defaultLocale[name];}else{var fallback=defaultLocale[name];if(fallback===undefined){if(__DEV__){var s=\"Fallback locale \"+defaultLocaleName+\" is missing a string value for \"+name;console.error(s);}return'';}return fallback;}}};if(_expoCore.Platform.OS==='android'){var _ret=function(){var localizedValues=new Set();var _arr=Object.values(copy);for(var _i=0;_i<_arr.length;_i++){var values=_arr[_i];Object.keys(values).forEach(function(s){return localizedValues.add(s);});}var proxy={};Object.defineProperty(proxy,'setLocale',{get:function get(){return setLocaleHelper;}});var methods=new Set(['setLocale']);var _loop=function _loop(name){if(methods.has(name)){throw new Error(\"Cannot use \"+name+\" as a locale name\");}Object.defineProperty(proxy,name,{get:function get(){return localizationValueHelper(name);}});};for(var _iterator=localizedValues.keys(),_isArray=Array.isArray(_iterator),_i2=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref;if(_isArray){if(_i2>=_iterator.length)break;_ref=_iterator[_i2++];}else{_i2=_iterator.next();if(_i2.done)break;_ref=_i2.value;}var name=_ref;_loop(name);}return{v:proxy};}();if(typeof _ret===\"object\")return _ret.v;}else if(_expoCore.Platform.OS==='ios'){var handlers={setLocale:setLocaleHelper};var methods=new Set(Object.keys(handlers));return new Proxy(this,{set:function set(){if(__DEV__){console.warn('Setting anything directly on the localization store is a no op');}return false;},get:function get(target,name){if(typeof name!=='string'){return target[name];}else{if(defaultLocalePhrases.has(name)){return localizationValueHelper(name);}else if(methods.has(name)){return handlers[name];}else{return target[name];}}}});}else{throw new Error(\"Unsupported platform at moment for localization: \"+_expoCore.Platform.OS);}};function warnDeprecated(deprecated,replacement){console.warn(\"Expo.DangerZone.Localization.\"+deprecated+\" is deprecated. Use `Expo.Localization.\"+replacement+\"` instead.\");}var _default=(0,_objectSpread2.default)({},ExpoLocalization,{getCurrentDeviceCountryAsync:function getCurrentDeviceCountryAsync(){warnDeprecated('getCurrentDeviceCountryAsync()','country');return ExpoLocalization.country;},getCurrentLocaleAsync:function getCurrentLocaleAsync(){warnDeprecated('getCurrentLocaleAsync()','locale');return ExpoLocalization.locale.replace('-','_');},getCurrentTimeZoneAsync:function getCurrentTimeZoneAsync(){warnDeprecated('getCurrentTimeZoneAsync()','timezone');return ExpoLocalization.timezone;},getPreferredLocalesAsync:function getPreferredLocalesAsync(){warnDeprecated('getPreferredLocalesAsync()','locales');return ExpoLocalization.locales;},getISOCurrencyCodesAsync:function getISOCurrencyCodesAsync(){warnDeprecated('getISOCurrencyCodesAsync()','isoCurrencyCodes');return ExpoLocalization.isoCurrencyCodes;},LocaleStore:LocaleStore});exports.default=_default;","map":{"version":3,"sources":["../src/Localization.ts"],"names":[],"mappings":"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","sourcesContent":["import { NativeModulesProxy, Platform } from 'expo-core';\nconst { ExpoLocalization } = NativeModulesProxy;\n\nconst isObject = obj => obj && obj.constructor && obj.constructor === Object;\n\nclass LocaleStore {\n  constructor(locales) {\n    if (isObject(locales) === false || Object.keys(locales).length <= 1) {\n      throw new Error('Locales input must be an object and non-empty');\n    }\n    const copy = { ...locales };\n    const allGivenLocales = new Set(Object.keys(copy));\n    let currentLocaleName = [...allGivenLocales][0];\n    const defaultLocale = copy[currentLocaleName];\n    const defaultLocaleName = currentLocaleName;\n    const defaultLocalePhrases = new Set(Object.keys(defaultLocale));\n    let currentLocale = defaultLocale;\n\n    const setLocaleHelper = (newLocaleName, cb) => {\n      if (allGivenLocales.has(newLocaleName) === false) {\n        if (__DEV__) {\n          const s = `${newLocaleName} is not a valid locale, known locales are ${[\n            ...allGivenLocales,\n          ]}`;\n          console.error(s);\n        }\n      }\n      if (newLocaleName === currentLocaleName) {\n        if (__DEV__) {\n          console.warn('New Locale is the same as last, locale not changed');\n        }\n        return;\n      }\n      currentLocale = copy[newLocaleName];\n      currentLocaleName = newLocaleName;\n      cb && cb();\n    };\n    const localizationValueHelper = name => {\n      if (defaultLocalePhrases.has(name)) {\n        const result = currentLocale[name];\n        if (result !== undefined) {\n          return result !== undefined ? result : defaultLocale[name];\n        } else {\n          const fallback = defaultLocale[name];\n          if (fallback === undefined) {\n            if (__DEV__) {\n              let s = `Fallback locale ${defaultLocaleName} is missing a string value for ${name}`;\n              console.error(s);\n            }\n            return '';\n          }\n          return fallback;\n        }\n      }\n    };\n\n    if (Platform.OS === 'android') {\n      let localizedValues = new Set<string>();\n      for (const values of Object.values(copy)) {\n        Object.keys(values).forEach(s => localizedValues.add(s));\n      }\n      const proxy = {};\n      Object.defineProperty(proxy, 'setLocale', {\n        get() {\n          return setLocaleHelper;\n        },\n      });\n\n      const methods = new Set(['setLocale']);\n      for (const name of localizedValues.keys()) {\n        if (methods.has(name)) {\n          throw new Error(`Cannot use ${name} as a locale name`);\n        }\n        Object.defineProperty(proxy, name, {\n          get() {\n            return localizationValueHelper(name);\n          },\n        });\n      }\n      return proxy;\n    } else if (Platform.OS === 'ios') {\n      const handlers = { setLocale: setLocaleHelper };\n      const methods = new Set(Object.keys(handlers));\n      return new Proxy(this, {\n        set() {\n          if (__DEV__) {\n            console.warn('Setting anything directly on the localization store is a no op');\n          }\n          return false;\n        },\n        get(target, name) {\n          if (typeof name !== 'string') {\n            return target[name];\n          } else {\n            if (defaultLocalePhrases.has(name)) {\n              return localizationValueHelper(name);\n            } else if (methods.has(name)) {\n              return handlers[name];\n            } else {\n              return target[name];\n            }\n          }\n        },\n      });\n    } else {\n      throw new Error(`Unsupported platform at moment for localization: ${Platform.OS}`);\n    }\n  }\n}\n\nfunction warnDeprecated(deprecated, replacement) {\n  console.warn(\n    `Expo.DangerZone.Localization.${deprecated} is deprecated. Use \\`Expo.Localization.${replacement}\\` instead.`\n  );\n}\n\nexport default {\n  ...ExpoLocalization,\n  getCurrentDeviceCountryAsync() {\n    warnDeprecated('getCurrentDeviceCountryAsync()', 'country');\n    return ExpoLocalization.country;\n  },\n  getCurrentLocaleAsync() {\n    warnDeprecated('getCurrentLocaleAsync()', 'locale');\n    return ExpoLocalization.locale.replace('-', '_');\n  },\n  getCurrentTimeZoneAsync() {\n    warnDeprecated('getCurrentTimeZoneAsync()', 'timezone');\n    return ExpoLocalization.timezone;\n  },\n  getPreferredLocalesAsync() {\n    warnDeprecated('getPreferredLocalesAsync()', 'locales');\n    return ExpoLocalization.locales;\n  },\n  getISOCurrencyCodesAsync() {\n    warnDeprecated('getISOCurrencyCodesAsync()', 'isoCurrencyCodes');\n    return ExpoLocalization.isoCurrencyCodes;\n  },\n  LocaleStore,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}