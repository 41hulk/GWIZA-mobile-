{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=_default;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectSpread2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));var _extractFill=_interopRequireDefault(require(\"./extractFill\"));var _extractStroke=_interopRequireDefault(require(\"./extractStroke\"));var _extractTransform=_interopRequireWildcard(require(\"./extractTransform\"));var _extractClipPath=_interopRequireDefault(require(\"./extractClipPath\"));var _extractResponder=_interopRequireDefault(require(\"./extractResponder\"));var _extractOpacity=_interopRequireDefault(require(\"./extractOpacity\"));var _patternReg=_interopRequireDefault(require(\"./patternReg\"));function _default(prop,ref){var props=(0,_objectSpread2.default)({},prop.style,prop);var opacity=props.opacity,onLayout=props.onLayout,id=props.id,clipPath=props.clipPath,mask=props.mask;var styleProperties=[];var extractedProps={opacity:(0,_extractOpacity.default)(opacity),propList:styleProperties,onLayout:onLayout};if(id){extractedProps.name=id;}if(clipPath){(0,_extends2.default)(extractedProps,(0,_extractClipPath.default)(props));}if(mask){var matched=mask.match(_patternReg.default);if(matched){extractedProps.mask=matched[1];}else{console.warn('Invalid `mask` prop, expected a mask like `\"#id\"`, but got: \"'+mask+'\"');}}(0,_extends2.default)(extractedProps,(0,_extractStroke.default)(props,styleProperties));(0,_extends2.default)(extractedProps,(0,_extractFill.default)(props,styleProperties));extractedProps.matrix=(0,_extractTransform.default)(props);(0,_extends2.default)(extractedProps,(0,_extractTransform.props2transform)(props));(0,_extends2.default)(extractedProps,(0,_extractResponder.default)(props,ref));return extractedProps;}","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/expo/node_modules/react-native-svg/lib/extract/extractProps.js"],"names":["prop","ref","props","style","opacity","onLayout","id","clipPath","mask","styleProperties","extractedProps","propList","name","matched","match","urlRegex","console","warn","matrix"],"mappings":"oaAAA,kEACA,sEACA,6EACA,0EACA,4EACA,wEACA,gEAEe,kBAASA,IAAT,CAAeC,GAAf,CAAoB,CAC/B,GAAMC,CAAAA,KAAK,+BAAQF,IAAI,CAACG,KAAb,CAAuBH,IAAvB,CAAX,CAD+B,GAEvBI,CAAAA,OAFuB,CAEmBF,KAFnB,CAEvBE,OAFuB,CAEdC,QAFc,CAEmBH,KAFnB,CAEdG,QAFc,CAEJC,EAFI,CAEmBJ,KAFnB,CAEJI,EAFI,CAEAC,QAFA,CAEmBL,KAFnB,CAEAK,QAFA,CAEUC,IAFV,CAEmBN,KAFnB,CAEUM,IAFV,CAG/B,GAAMC,CAAAA,eAAe,CAAG,EAAxB,CAEA,GAAMC,CAAAA,cAAc,CAAG,CACnBN,OAAO,CAAE,4BAAeA,OAAf,CADU,CAEnBO,QAAQ,CAAEF,eAFS,CAGnBJ,QAAQ,CAARA,QAHmB,CAAvB,CAMA,GAAIC,EAAJ,CAAQ,CACJI,cAAc,CAACE,IAAf,CAAsBN,EAAtB,CACH,CAED,GAAIC,QAAJ,CAAc,CACV,sBAAcG,cAAd,CAA8B,6BAAgBR,KAAhB,CAA9B,EACH,CAED,GAAIM,IAAJ,CAAU,CACN,GAAMK,CAAAA,OAAO,CAAGL,IAAI,CAACM,KAAL,CAAWC,mBAAX,CAAhB,CAEA,GAAIF,OAAJ,CAAa,CACTH,cAAc,CAACF,IAAf,CAAsBK,OAAO,CAAC,CAAD,CAA7B,CACH,CAFD,IAEO,CACHG,OAAO,CAACC,IAAR,CACI,gEACIT,IADJ,CAEI,GAHR,EAKH,CACJ,CAED,sBAAcE,cAAd,CAA8B,2BAAcR,KAAd,CAAqBO,eAArB,CAA9B,EACA,sBAAcC,cAAd,CAA8B,yBAAYR,KAAZ,CAAmBO,eAAnB,CAA9B,EAEAC,cAAc,CAACQ,MAAf,CAAwB,8BAAiBhB,KAAjB,CAAxB,CAEA,sBAAcQ,cAAd,CAA8B,sCAAgBR,KAAhB,CAA9B,EAEA,sBAAcQ,cAAd,CAA8B,8BAAiBR,KAAjB,CAAwBD,GAAxB,CAA9B,EAEA,MAAOS,CAAAA,cAAP,CACH","sourcesContent":["import extractFill from \"./extractFill\";\nimport extractStroke from \"./extractStroke\";\nimport extractTransform, { props2transform } from \"./extractTransform\";\nimport extractClipPath from \"./extractClipPath\";\nimport extractResponder from \"./extractResponder\";\nimport extractOpacity from \"./extractOpacity\";\nimport urlRegex from \"./patternReg\";\n\nexport default function(prop, ref) {\n    const props = { ...prop.style, ...prop };\n    const { opacity, onLayout, id, clipPath, mask } = props;\n    const styleProperties = [];\n\n    const extractedProps = {\n        opacity: extractOpacity(opacity),\n        propList: styleProperties,\n        onLayout,\n    };\n\n    if (id) {\n        extractedProps.name = id;\n    }\n\n    if (clipPath) {\n        Object.assign(extractedProps, extractClipPath(props));\n    }\n\n    if (mask) {\n        const matched = mask.match(urlRegex);\n\n        if (matched) {\n            extractedProps.mask = matched[1];\n        } else {\n            console.warn(\n                'Invalid `mask` prop, expected a mask like `\"#id\"`, but got: \"' +\n                    mask +\n                    '\"',\n            );\n        }\n    }\n\n    Object.assign(extractedProps, extractStroke(props, styleProperties));\n    Object.assign(extractedProps, extractFill(props, styleProperties));\n\n    extractedProps.matrix = extractTransform(props);\n\n    Object.assign(extractedProps, props2transform(props));\n\n    Object.assign(extractedProps, extractResponder(props, ref));\n\n    return extractedProps;\n}\n"]},"metadata":{},"sourceType":"script"}