{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.deleteItemAsync=deleteItemAsync;exports.getItemAsync=getItemAsync;exports.setItemAsync=setItemAsync;exports.WHEN_UNLOCKED_THIS_DEVICE_ONLY=exports.WHEN_UNLOCKED=exports.ALWAYS_THIS_DEVICE_ONLY=exports.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY=exports.ALWAYS=exports.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY=exports.AFTER_FIRST_UNLOCK=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _reactNative=require(\"react-native\");var ExponentSecureStore=_reactNative.NativeModules.ExponentSecureStore;var AFTER_FIRST_UNLOCK=ExponentSecureStore.AFTER_FIRST_UNLOCK;exports.AFTER_FIRST_UNLOCK=AFTER_FIRST_UNLOCK;var AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY=ExponentSecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY;exports.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY=AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY;var ALWAYS=ExponentSecureStore.ALWAYS;exports.ALWAYS=ALWAYS;var WHEN_PASSCODE_SET_THIS_DEVICE_ONLY=ExponentSecureStore.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY;exports.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY=WHEN_PASSCODE_SET_THIS_DEVICE_ONLY;var ALWAYS_THIS_DEVICE_ONLY=ExponentSecureStore.ALWAYS_THIS_DEVICE_ONLY;exports.ALWAYS_THIS_DEVICE_ONLY=ALWAYS_THIS_DEVICE_ONLY;var WHEN_UNLOCKED=ExponentSecureStore.WHEN_UNLOCKED;exports.WHEN_UNLOCKED=WHEN_UNLOCKED;var WHEN_UNLOCKED_THIS_DEVICE_ONLY=ExponentSecureStore.WHEN_UNLOCKED_THIS_DEVICE_ONLY;exports.WHEN_UNLOCKED_THIS_DEVICE_ONLY=WHEN_UNLOCKED_THIS_DEVICE_ONLY;function deleteItemAsync(key){var options,_args=arguments;return _regenerator.default.async(function deleteItemAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:options=_args.length>1&&_args[1]!==undefined?_args[1]:{};_ensureValidKey(key);_context.next=4;return _regenerator.default.awrap(ExponentSecureStore.deleteValueWithKeyAsync(key,options));case 4:case\"end\":return _context.stop();}}},null,this);}function getItemAsync(key){var options,_args2=arguments;return _regenerator.default.async(function getItemAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:options=_args2.length>1&&_args2[1]!==undefined?_args2[1]:{};_ensureValidKey(key);_context2.next=4;return _regenerator.default.awrap(ExponentSecureStore.getValueWithKeyAsync(key,options));case 4:return _context2.abrupt(\"return\",_context2.sent);case 5:case\"end\":return _context2.stop();}}},null,this);}function setItemAsync(key,value){var options,_args3=arguments;return _regenerator.default.async(function setItemAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:options=_args3.length>2&&_args3[2]!==undefined?_args3[2]:{};_ensureValidKey(key);if(_isValidValue(value)){_context3.next=4;break;}throw new Error(\"Invalid value provided to SecureStore. Values must be strings; consider JSON-encoding your values if they are serializable.\");case 4:_context3.next=6;return _regenerator.default.awrap(ExponentSecureStore.setValueWithKeyAsync(value,key,options));case 6:case\"end\":return _context3.stop();}}},null,this);}function _ensureValidKey(key){if(!_isValidKey(key)){throw new Error(\"Invalid key provided to SecureStore. Keys must not be empty and contain only alphanumeric characters, \\\".\\\", \\\"-\\\", and \\\"_\\\".\");}}function _isValidKey(key){return typeof key==='string'&&/^[\\w.-]+$/.test(key);}function _isValidValue(value){return typeof value==='string';}","map":{"version":3,"sources":["../src/SecureStore.ts"],"names":[],"mappings":"4iBAAA,yC,GAEQ,CAAA,mB,CAAwB,0B,CAAxB,mB,CAID,GAAM,CAAA,kBAAkB,CAC7B,mBAAmB,CAAC,kBADf,C,8CAEA,GAAM,CAAA,mCAAmC,CAC9C,mBAAmB,CAAC,mCADf,C,gFAEA,GAAM,CAAA,MAAM,CAAkC,mBAAmB,CAAC,MAAlE,C,sBACA,GAAM,CAAA,kCAAkC,CAC7C,mBAAmB,CAAC,kCADf,C,8EAEA,GAAM,CAAA,uBAAuB,CAClC,mBAAmB,CAAC,uBADf,C,wDAEA,GAAM,CAAA,aAAa,CAAkC,mBAAmB,CAAC,aAAzE,C,oCACA,GAAM,CAAA,8BAA8B,CACzC,mBAAmB,CAAC,8BADf,C,sEAQA,QAAe,CAAA,eAAf,CACL,GADK,wJAEL,OAFK,+CAEyB,EAFzB,CAIL,eAAe,CAAC,GAAD,CAAf,CAJK,kDAKC,mBAAmB,CAAC,uBAApB,CAA4C,GAA5C,CAAiD,OAAjD,CALD,0DAQA,QAAe,CAAA,YAAf,CACL,GADK,yJAEL,OAFK,kDAEyB,EAFzB,CAIL,eAAe,CAAC,GAAD,CAAf,CAJK,mDAKQ,mBAAmB,CAAC,oBAApB,CAAyC,GAAzC,CAA8C,OAA9C,CALR,mHAQA,QAAe,CAAA,YAAf,CACL,GADK,CAEL,KAFK,yJAGL,OAHK,kDAGyB,EAHzB,CAKL,eAAe,CAAC,GAAD,CAAf,CALK,GAMA,aAAa,CAAC,KAAD,CANb,+BAOG,IAAI,CAAA,KAAJ,+HAPH,2DAWC,mBAAmB,CAAC,oBAApB,CAAyC,KAAzC,CAAgD,GAAhD,CAAqD,OAArD,CAXD,2DAcP,QAAS,CAAA,eAAT,CAAyB,GAAzB,CAAoC,CAClC,GAAI,CAAC,WAAW,CAAC,GAAD,CAAhB,CAAuB,CACrB,KAAM,IAAI,CAAA,KAAJ,kIAAN,CAGD,CACF,CAED,QAAS,CAAA,WAAT,CAAqB,GAArB,CAAgC,CAC9B,MAAO,OAAO,CAAA,GAAP,GAAe,QAAf,EAA2B,YAAY,IAAZ,CAAiB,GAAjB,CAAlC,CACD,CAED,QAAS,CAAA,aAAT,CAAuB,KAAvB,CAAoC,CAClC,MAAO,OAAO,CAAA,KAAP,GAAiB,QAAxB,CACD","sourcesContent":["import { NativeModules } from 'react-native';\n\nconst { ExponentSecureStore } = NativeModules;\n\nexport type KeychainAccessibilityConstant = number;\n\nexport const AFTER_FIRST_UNLOCK: KeychainAccessibilityConstant =\n  ExponentSecureStore.AFTER_FIRST_UNLOCK;\nexport const AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY: KeychainAccessibilityConstant =\n  ExponentSecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY;\nexport const ALWAYS: KeychainAccessibilityConstant = ExponentSecureStore.ALWAYS;\nexport const WHEN_PASSCODE_SET_THIS_DEVICE_ONLY: KeychainAccessibilityConstant =\n  ExponentSecureStore.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY;\nexport const ALWAYS_THIS_DEVICE_ONLY: KeychainAccessibilityConstant =\n  ExponentSecureStore.ALWAYS_THIS_DEVICE_ONLY;\nexport const WHEN_UNLOCKED: KeychainAccessibilityConstant = ExponentSecureStore.WHEN_UNLOCKED;\nexport const WHEN_UNLOCKED_THIS_DEVICE_ONLY: KeychainAccessibilityConstant =\n  ExponentSecureStore.WHEN_UNLOCKED_THIS_DEVICE_ONLY;\n\nexport type SecureStoreOptions = {\n  keychainService?: string;\n  keychainAccessible?: KeychainAccessibilityConstant;\n};\n\nexport async function deleteItemAsync(\n  key: string,\n  options: SecureStoreOptions = {}\n): Promise<void> {\n  _ensureValidKey(key);\n  await ExponentSecureStore.deleteValueWithKeyAsync(key, options);\n}\n\nexport async function getItemAsync(\n  key: string,\n  options: SecureStoreOptions = {}\n): Promise<string | null> {\n  _ensureValidKey(key);\n  return await ExponentSecureStore.getValueWithKeyAsync(key, options);\n}\n\nexport async function setItemAsync(\n  key: string,\n  value: string,\n  options: SecureStoreOptions = {}\n): Promise<void> {\n  _ensureValidKey(key);\n  if (!_isValidValue(value)) {\n    throw new Error(\n      `Invalid value provided to SecureStore. Values must be strings; consider JSON-encoding your values if they are serializable.`\n    );\n  }\n  await ExponentSecureStore.setValueWithKeyAsync(value, key, options);\n}\n\nfunction _ensureValidKey(key: string) {\n  if (!_isValidKey(key)) {\n    throw new Error(\n      `Invalid key provided to SecureStore. Keys must not be empty and contain only alphanumeric characters, \".\", \"-\", and \"_\".`\n    );\n  }\n}\n\nfunction _isValidKey(key: string) {\n  return typeof key === 'string' && /^[\\w.-]+$/.test(key);\n}\n\nfunction _isValidValue(value: string) {\n  return typeof value === 'string';\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}