{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _country=_interopRequireDefault(require(\"./country\"));var _flags=_interopRequireDefault(require(\"./resources/flags\"));var _phoneNumber=_interopRequireDefault(require(\"./phoneNumber\"));var _styles=_interopRequireDefault(require(\"./styles\"));var _countryPicker=_interopRequireDefault(require(\"./countryPicker\"));var PhoneInput=function(_Component){(0,_inherits2.default)(PhoneInput,_Component);(0,_createClass2.default)(PhoneInput,null,[{key:\"setCustomCountriesData\",value:function setCustomCountriesData(json){_country.default.setCustomCountriesData(json);}}]);function PhoneInput(props,context){var _this;(0,_classCallCheck2.default)(this,PhoneInput);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(PhoneInput).call(this,props,context));_this.onChangePhoneNumber=_this.onChangePhoneNumber.bind((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this)));_this.onPressFlag=_this.onPressFlag.bind((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this)));_this.selectCountry=_this.selectCountry.bind((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this)));_this.getFlag=_this.getFlag.bind((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this)));_this.getISOCode=_this.getISOCode.bind((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this)));var _this$props=_this.props,countriesList=_this$props.countriesList,disabled=_this$props.disabled,initialCountry=_this$props.initialCountry;if(countriesList){_country.default.setCustomCountriesData(countriesList);}var countryData=_phoneNumber.default.getCountryDataByCode(initialCountry);_this.state={iso2:initialCountry,disabled:disabled,formattedNumber:countryData?\"+\"+countryData.dialCode:\"\",value:null};return _this;}(0,_createClass2.default)(PhoneInput,[{key:\"componentWillMount\",value:function componentWillMount(){if(this.props.value){this.updateFlagAndFormatNumber(this.props.value);}}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){var value=nextProps.value,disabled=nextProps.disabled;this.setState({disabled:disabled});if(value&&value!==this.state.value){this.setState({value:value});this.updateFlagAndFormatNumber(value);}}},{key:\"onChangePhoneNumber\",value:function onChangePhoneNumber(number){var _this2=this;var actionAfterSetState=this.props.onChangePhoneNumber?function(){_this2.props.onChangePhoneNumber(number);}:null;this.updateFlagAndFormatNumber(number,actionAfterSetState);}},{key:\"onPressFlag\",value:function onPressFlag(){if(this.props.onPressFlag){this.props.onPressFlag();}else{if(this.state.iso2)this.picker.selectCountry(this.state.iso2);this.picker.show();}}},{key:\"getPickerData\",value:function getPickerData(){return _phoneNumber.default.getAllCountries().map(function(country,index){return{key:index,image:_flags.default.get(country.iso2),label:country.name,dialCode:\"+\"+country.dialCode,iso2:country.iso2};});}},{key:\"getCountryCode\",value:function getCountryCode(){var countryData=_phoneNumber.default.getCountryDataByCode(this.state.iso2);return countryData.dialCode;}},{key:\"getAllCountries\",value:function getAllCountries(){return _phoneNumber.default.getAllCountries();}},{key:\"getFlag\",value:function getFlag(iso2){return _flags.default.get(iso2);}},{key:\"getDialCode\",value:function getDialCode(){return _phoneNumber.default.getDialCode(this.state.formattedNumber);}},{key:\"getValue\",value:function getValue(){return this.state.formattedNumber;}},{key:\"getNumberType\",value:function getNumberType(){return _phoneNumber.default.getNumberType(this.state.formattedNumber,this.state.iso2);}},{key:\"getISOCode\",value:function getISOCode(){return this.state.iso2;}},{key:\"selectCountry\",value:function selectCountry(iso2){var _this3=this;if(this.state.iso2!==iso2){var countryData=_phoneNumber.default.getCountryDataByCode(iso2);if(countryData){this.setState({iso2:iso2,formattedNumber:\"+\"+countryData.dialCode},function(){if(_this3.props.onSelectCountry)_this3.props.onSelectCountry(iso2);});}}}},{key:\"isValidNumber\",value:function isValidNumber(){return _phoneNumber.default.isValidNumber(this.state.formattedNumber,this.state.iso2);}},{key:\"updateFlagAndFormatNumber\",value:function updateFlagAndFormatNumber(number){var actionAfterSetState=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var _this$props2=this.props,allowZeroAfterCountryCode=_this$props2.allowZeroAfterCountryCode,initialCountry=_this$props2.initialCountry;var iso2=initialCountry;var phoneNumber=number;if(number){if(phoneNumber[0]!==\"+\")phoneNumber=\"+\"+phoneNumber;phoneNumber=allowZeroAfterCountryCode?phoneNumber:this.possiblyEliminateZeroAfterCountryCode(phoneNumber);iso2=_phoneNumber.default.getCountryCodeOfNumber(phoneNumber);}this.setState({iso2:iso2,formattedNumber:phoneNumber},actionAfterSetState);}},{key:\"possiblyEliminateZeroAfterCountryCode\",value:function possiblyEliminateZeroAfterCountryCode(number){var dialCode=_phoneNumber.default.getDialCode(number);return number.startsWith(dialCode+\"0\")?dialCode+number.substr(dialCode.length+1):number;}},{key:\"focus\",value:function focus(){this.inputPhone.focus();}},{key:\"render\",value:function render(){var _this4=this;var _this$state=this.state,iso2=_this$state.iso2,formattedNumber=_this$state.formattedNumber,disabled=_this$state.disabled;var TextComponent=this.props.textComponent||_reactNative.TextInput;return _react.default.createElement(_reactNative.View,{style:[_styles.default.container,this.props.style]},_react.default.createElement(_reactNative.TouchableWithoutFeedback,{onPress:this.onPressFlag,disabled:disabled},_react.default.createElement(_reactNative.Image,{source:_flags.default.get(iso2),style:[_styles.default.flag,this.props.flagStyle],onPress:this.onPressFlag})),_react.default.createElement(_reactNative.View,{style:{flex:1,marginLeft:this.props.offset||10}},_react.default.createElement(TextComponent,(0,_extends2.default)({ref:function ref(_ref){_this4.inputPhone=_ref;},editable:!disabled,autoCorrect:false,style:[_styles.default.text,this.props.textStyle],onChangeText:function onChangeText(text){_this4.onChangePhoneNumber(text);},keyboardType:\"phone-pad\",underlineColorAndroid:\"rgba(0,0,0,0)\",value:formattedNumber},this.props.textProps))),_react.default.createElement(_countryPicker.default,{ref:function ref(_ref2){_this4.picker=_ref2;},selectedCountry:iso2,onSubmit:this.selectCountry,buttonColor:this.props.pickerButtonColor,buttonTextStyle:this.props.pickerButtonTextStyle,itemStyle:this.props.itemStyle,cancelText:this.props.cancelText,cancelTextStyle:this.props.cancelTextStyle,confirmText:this.props.confirmText,confirmTextStyle:this.props.confirmTextStyle,pickerBackgroundColor:this.props.pickerBackgroundColor,itemStyle:this.props.pickerItemStyle}));}}]);return PhoneInput;}(_react.Component);exports.default=PhoneInput;PhoneInput.propTypes={textComponent:_propTypes.default.func,initialCountry:_propTypes.default.string,onChangePhoneNumber:_propTypes.default.func,value:_propTypes.default.string,style:_propTypes.default.object,flagStyle:_propTypes.default.object,textStyle:_propTypes.default.object,offset:_propTypes.default.number,textProps:_propTypes.default.object,onSelectCountry:_propTypes.default.func,pickerButtonColor:_propTypes.default.string,pickerBackgroundColor:_propTypes.default.string,pickerItemStyle:_propTypes.default.object,countriesList:_propTypes.default.arrayOf(_propTypes.default.shape({name:_propTypes.default.string,iso2:_propTypes.default.string,dialCode:_propTypes.default.string,priority:_propTypes.default.number,areaCodes:_propTypes.default.arrayOf(_propTypes.default.string)})),cancelText:_propTypes.default.string,cancelTextStyle:_propTypes.default.object,confirmText:_propTypes.default.string,confirmTextTextStyle:_propTypes.default.object,disabled:_propTypes.default.bool,allowZeroAfterCountryCode:_propTypes.default.bool};PhoneInput.defaultProps={initialCountry:\"us\",disabled:false,allowZeroAfterCountryCode:true};","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/react-native-phone-input/lib/index.js"],"names":["PhoneInput","json","Country","setCustomCountriesData","props","context","onChangePhoneNumber","bind","onPressFlag","selectCountry","getFlag","getISOCode","countriesList","disabled","initialCountry","countryData","PhoneNumber","getCountryDataByCode","state","iso2","formattedNumber","dialCode","value","updateFlagAndFormatNumber","nextProps","setState","number","actionAfterSetState","picker","show","getAllCountries","map","country","index","key","image","Flags","get","label","name","getDialCode","getNumberType","onSelectCountry","isValidNumber","allowZeroAfterCountryCode","phoneNumber","possiblyEliminateZeroAfterCountryCode","getCountryCodeOfNumber","startsWith","substr","length","inputPhone","focus","TextComponent","textComponent","TextInput","styles","container","style","flag","flagStyle","flex","marginLeft","offset","ref","text","textStyle","textProps","pickerButtonColor","pickerButtonTextStyle","itemStyle","cancelText","cancelTextStyle","confirmText","confirmTextStyle","pickerBackgroundColor","pickerItemStyle","Component","propTypes","PropTypes","func","string","object","arrayOf","shape","priority","areaCodes","confirmTextTextStyle","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Image, TextInput, TouchableWithoutFeedback, View } from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nimport Country from \"./country\";\nimport Flags from \"./resources/flags\";\nimport PhoneNumber from \"./phoneNumber\";\nimport styles from \"./styles\";\nimport CountryPicker from \"./countryPicker\";\n\nexport default class PhoneInput extends Component {\n  static setCustomCountriesData(json) {\n    Country.setCustomCountriesData(json);\n  }\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n    this.onPressFlag = this.onPressFlag.bind(this);\n    this.selectCountry = this.selectCountry.bind(this);\n    this.getFlag = this.getFlag.bind(this);\n    this.getISOCode = this.getISOCode.bind(this);\n\n    const { countriesList, disabled, initialCountry } = this.props;\n\n    if (countriesList) {\n      Country.setCustomCountriesData(countriesList);\n    }\n    const countryData = PhoneNumber.getCountryDataByCode(initialCountry);\n\n    this.state = {\n      iso2: initialCountry,\n      disabled,\n      formattedNumber: countryData ? `+${countryData.dialCode}` : \"\",\n      value: null\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.value) {\n      this.updateFlagAndFormatNumber(this.props.value);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value, disabled } = nextProps;\n    this.setState({ disabled });\n\n    if (value && value !== this.state.value) {\n      this.setState({ value });\n      this.updateFlagAndFormatNumber(value);\n    }\n  }\n\n  onChangePhoneNumber(number) {\n    const actionAfterSetState = this.props.onChangePhoneNumber\n      ? () => {\n          this.props.onChangePhoneNumber(number);\n        }\n      : null;\n    this.updateFlagAndFormatNumber(number, actionAfterSetState);\n  }\n\n  onPressFlag() {\n    if (this.props.onPressFlag) {\n      this.props.onPressFlag();\n    } else {\n      if (this.state.iso2) this.picker.selectCountry(this.state.iso2);\n      this.picker.show();\n    }\n  }\n\n  getPickerData() {\n    return PhoneNumber.getAllCountries().map((country, index) => ({\n      key: index,\n      image: Flags.get(country.iso2),\n      label: country.name,\n      dialCode: `+${country.dialCode}`,\n      iso2: country.iso2\n    }));\n  }\n\n  getCountryCode() {\n    const countryData = PhoneNumber.getCountryDataByCode(this.state.iso2);\n    return countryData.dialCode;\n  }\n\n  getAllCountries() {\n    return PhoneNumber.getAllCountries();\n  }\n\n  getFlag(iso2) {\n    return Flags.get(iso2);\n  }\n\n  getDialCode() {\n    return PhoneNumber.getDialCode(this.state.formattedNumber);\n  }\n\n  getValue() {\n    return this.state.formattedNumber;\n  }\n\n  getNumberType() {\n    return PhoneNumber.getNumberType(\n      this.state.formattedNumber,\n      this.state.iso2\n    );\n  }\n\n  getISOCode() {\n    return this.state.iso2;\n  }\n\n  selectCountry(iso2) {\n    if (this.state.iso2 !== iso2) {\n      const countryData = PhoneNumber.getCountryDataByCode(iso2);\n      if (countryData) {\n        this.setState(\n          {\n            iso2,\n            formattedNumber: `+${countryData.dialCode}`\n          },\n          () => {\n            if (this.props.onSelectCountry) this.props.onSelectCountry(iso2);\n          }\n        );\n      }\n    }\n  }\n\n  isValidNumber() {\n    return PhoneNumber.isValidNumber(\n      this.state.formattedNumber,\n      this.state.iso2\n    );\n  }\n\n  updateFlagAndFormatNumber(number, actionAfterSetState = null) {\n    const { allowZeroAfterCountryCode, initialCountry } = this.props;\n    let iso2 = initialCountry;\n    let phoneNumber = number;\n\n    if (number) {\n      if (phoneNumber[0] !== \"+\") phoneNumber = `+${phoneNumber}`;\n      phoneNumber = allowZeroAfterCountryCode\n        ? phoneNumber\n        : this.possiblyEliminateZeroAfterCountryCode(phoneNumber);\n      iso2 = PhoneNumber.getCountryCodeOfNumber(phoneNumber);\n    }\n    this.setState({ iso2, formattedNumber: phoneNumber }, actionAfterSetState);\n  }\n\n  possiblyEliminateZeroAfterCountryCode(number) {\n    const dialCode = PhoneNumber.getDialCode(number);\n    return number.startsWith(`${dialCode}0`)\n      ? dialCode + number.substr(dialCode.length + 1)\n      : number;\n  }\n\n  focus() {\n    this.inputPhone.focus();\n  }\n\n  render() {\n    const { iso2, formattedNumber, disabled } = this.state;\n    const TextComponent = this.props.textComponent || TextInput;\n    return (\n      <View style={[styles.container, this.props.style]}>\n        <TouchableWithoutFeedback\n          onPress={this.onPressFlag}\n          disabled={disabled}\n        >\n          <Image\n            source={Flags.get(iso2)}\n            style={[styles.flag, this.props.flagStyle]}\n            onPress={this.onPressFlag}\n          />\n        </TouchableWithoutFeedback>\n        <View style={{ flex: 1, marginLeft: this.props.offset || 10 }}>\n          <TextComponent\n            ref={ref => {\n              this.inputPhone = ref;\n            }}\n            editable={!disabled}\n            autoCorrect={false}\n            style={[styles.text, this.props.textStyle]}\n            onChangeText={text => {\n              this.onChangePhoneNumber(text);\n            }}\n            keyboardType=\"phone-pad\"\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\n            value={formattedNumber}\n            {...this.props.textProps}\n          />\n        </View>\n\n        <CountryPicker\n          ref={ref => {\n            this.picker = ref;\n          }}\n          selectedCountry={iso2}\n          onSubmit={this.selectCountry}\n          buttonColor={this.props.pickerButtonColor}\n          buttonTextStyle={this.props.pickerButtonTextStyle}\n          itemStyle={this.props.itemStyle}\n          cancelText={this.props.cancelText}\n          cancelTextStyle={this.props.cancelTextStyle}\n          confirmText={this.props.confirmText}\n          confirmTextStyle={this.props.confirmTextStyle}\n          pickerBackgroundColor={this.props.pickerBackgroundColor}\n          itemStyle={this.props.pickerItemStyle}\n        />\n      </View>\n    );\n  }\n}\n\nPhoneInput.propTypes = {\n  textComponent: PropTypes.func,\n  initialCountry: PropTypes.string,\n  onChangePhoneNumber: PropTypes.func,\n  value: PropTypes.string,\n  style: PropTypes.object,\n  flagStyle: PropTypes.object,\n  textStyle: PropTypes.object,\n  offset: PropTypes.number,\n  textProps: PropTypes.object,\n  onSelectCountry: PropTypes.func,\n  pickerButtonColor: PropTypes.string,\n  pickerBackgroundColor: PropTypes.string,\n  pickerItemStyle: PropTypes.object,\n  countriesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      iso2: PropTypes.string,\n      dialCode: PropTypes.string,\n      priority: PropTypes.number,\n      areaCodes: PropTypes.arrayOf(PropTypes.string)\n    })\n  ),\n  cancelText: PropTypes.string,\n  cancelTextStyle: PropTypes.object,\n  confirmText: PropTypes.string,\n  confirmTextTextStyle: PropTypes.object,\n  disabled: PropTypes.bool,\n  allowZeroAfterCountryCode: PropTypes.bool\n};\n\nPhoneInput.defaultProps = {\n  initialCountry: \"us\",\n  disabled: false,\n  allowZeroAfterCountryCode: true\n};\n"]},"metadata":{},"sourceType":"script"}