{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.isAudioEnabled=isAudioEnabled;exports.throwIfAudioIsDisabled=throwIfAudioIsDisabled;exports.setIsEnabledAsync=setIsEnabledAsync;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _reactNative=require(\"react-native\");var ExponentAV=_reactNative.NativeModules.ExponentAV;var _enabled=true;function isAudioEnabled(){return _enabled;}function throwIfAudioIsDisabled(){if(!_enabled){throw new Error('Cannot complete operation because audio is not enabled.');}}function setIsEnabledAsync(value){return _regenerator.default.async(function setIsEnabledAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_enabled=value;_context.next=3;return _regenerator.default.awrap(ExponentAV.setAudioIsEnabled(value));case 3:case\"end\":return _context.stop();}}},null,this);}","map":{"version":3,"sources":["../../../src/av/Audio/AudioAvailability.ts"],"names":[],"mappings":"mWAAA,yC,GAEQ,CAAA,U,CAAe,0B,CAAf,U,CAER,GAAI,CAAA,QAAQ,CAAG,IAAf,CAEM,QAAU,CAAA,cAAV,EAAwB,CAC5B,MAAO,CAAA,QAAP,CACD,CAEK,QAAU,CAAA,sBAAV,EAAgC,CACpC,GAAI,CAAC,QAAL,CAAe,CACb,KAAM,IAAI,CAAA,KAAJ,CAAU,yDAAV,CAAN,CACD,CACF,CAEM,QAAe,CAAA,iBAAf,CAAiC,KAAjC,8HACL,QAAQ,CAAG,KAAX,CADK,kDAEC,UAAU,CAAC,iBAAX,CAA6B,KAA7B,CAFD","sourcesContent":["import { NativeModules } from 'react-native';\n\nconst { ExponentAV } = NativeModules;\n\nlet _enabled = true;\n\nexport function isAudioEnabled(): boolean {\n  return _enabled;\n}\n\nexport function throwIfAudioIsDisabled(): void {\n  if (!_enabled) {\n    throw new Error('Cannot complete operation because audio is not enabled.');\n  }\n}\n\nexport async function setIsEnabledAsync(value: boolean): Promise<void> {\n  _enabled = value;\n  await ExponentAV.setAudioIsEnabled(value);\n  // TODO : We immediately pause all players when disabled, but we do not resume all shouldPlay\n  // players when enabled. Perhaps for completeness we should allow this; the design of the\n  // enabling API is for people to enable / disable this audio library, but I think that it should\n  // intuitively also double as a global pause/resume.\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}