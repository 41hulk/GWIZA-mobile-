{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _reactNative=require(\"react-native\");var EventEmitter=function(){function EventEmitter(nativeModule){(0,_classCallCheck2.default)(this,EventEmitter);this._listenersCount=0;this._nativeModule=nativeModule;this._eventEmitter=new _reactNative.NativeEventEmitter(nativeModule);}(0,_createClass2.default)(EventEmitter,[{key:\"addListener\",value:function addListener(eventName,listener){this._listenersCount+=1;if(_reactNative.Platform.OS==='android'&&this._nativeModule.startObserving){if(this._listenersCount===1){this._nativeModule.startObserving();}}return this._eventEmitter.addListener(eventName,listener);}},{key:\"removeAllListeners\",value:function removeAllListeners(eventName){var listenersToRemoveCount=this._eventEmitter.listeners(eventName).length;var newListenersCount=Math.max(0,this._listenersCount-listenersToRemoveCount);if(_reactNative.Platform.OS==='android'&&this._nativeModule.stopObserving&&newListenersCount===0){this._nativeModule.stopObserving();}this._eventEmitter.removeAllListeners(eventName);this._listenersCount=newListenersCount;}},{key:\"removeSubscription\",value:function removeSubscription(subscription){this._listenersCount-=1;if(_reactNative.Platform.OS==='android'&&this._nativeModule.stopObserving){if(this._listenersCount===0){this._nativeModule.stopObserving();}}this._eventEmitter.removeSubscription(subscription);}},{key:\"emit\",value:function emit(eventType){var _this$_eventEmitter;for(var _len=arguments.length,params=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){params[_key-1]=arguments[_key];}(_this$_eventEmitter=this._eventEmitter).emit.apply(_this$_eventEmitter,[eventType].concat(params));}}]);return EventEmitter;}();module.exports=EventEmitter;","map":{"version":3,"sources":["/Users/ntareguy/Downloads/gwizamobile1/node_modules/expo-react-native-adapter/src/EventEmitter.js"],"names":["EventEmitter","nativeModule","_listenersCount","_nativeModule","_eventEmitter","NativeEventEmitter","eventName","listener","Platform","OS","startObserving","addListener","listenersToRemoveCount","listeners","length","newListenersCount","Math","max","stopObserving","removeAllListeners","subscription","removeSubscription","eventType","params","emit","module","exports"],"mappings":"yQAEA,yC,GAWMA,CAAAA,Y,YAKJ,sBAAYC,YAAZ,CAAwC,sDAJxCC,eAIwC,CAJtB,CAIsB,CACtC,KAAKC,aAAL,CAAqBF,YAArB,CACA,KAAKG,aAAL,CAAqB,GAAIC,gCAAJ,CAAuBJ,YAAvB,CAArB,CACD,C,sFAEcK,S,CAAmBC,Q,CAAmC,CACnE,KAAKL,eAAL,EAAwB,CAAxB,CACA,GAAIM,sBAASC,EAAT,GAAgB,SAAhB,EAA6B,KAAKN,aAAL,CAAmBO,cAApD,CAAoE,CAClE,GAAI,KAAKR,eAAL,GAAyB,CAA7B,CAAgC,CAG9B,KAAKC,aAAL,CAAmBO,cAAnB,GACD,CACF,CACD,MAAO,MAAKN,aAAL,CAAmBO,WAAnB,CAA+BL,SAA/B,CAA0CC,QAA1C,CAAP,CACD,C,8DAEkBD,S,CAAyB,CAC1C,GAAMM,CAAAA,sBAAsB,CAAG,KAAKR,aAAL,CAAmBS,SAAnB,CAA6BP,SAA7B,EAAwCQ,MAAvE,CACA,GAAMC,CAAAA,iBAAiB,CAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,CAAY,KAAKf,eAAL,CAAuBU,sBAAnC,CAA1B,CAEA,GAAIJ,sBAASC,EAAT,GAAgB,SAAhB,EAA6B,KAAKN,aAAL,CAAmBe,aAAhD,EAAiEH,iBAAiB,GAAK,CAA3F,CAA8F,CAC5F,KAAKZ,aAAL,CAAmBe,aAAnB,GACD,CAED,KAAKd,aAAL,CAAmBe,kBAAnB,CAAsCb,SAAtC,EACA,KAAKJ,eAAL,CAAuBa,iBAAvB,CACD,C,8DAEkBK,Y,CAAkC,CACnD,KAAKlB,eAAL,EAAwB,CAAxB,CAEA,GAAIM,sBAASC,EAAT,GAAgB,SAAhB,EAA6B,KAAKN,aAAL,CAAmBe,aAApD,CAAmE,CACjE,GAAI,KAAKhB,eAAL,GAAyB,CAA7B,CAAgC,CAC9B,KAAKC,aAAL,CAAmBe,aAAnB,GACD,CACF,CAED,KAAKd,aAAL,CAAmBiB,kBAAnB,CAAsCD,YAAtC,EACD,C,kCAEIE,S,CAAwC,uDAAlBC,MAAkB,qDAAlBA,MAAkB,0BAC3C,0BAAKnB,aAAL,EAAmBoB,IAAnB,4BAAwBF,SAAxB,SAAsCC,MAAtC,GACD,C,4BAGHE,MAAM,CAACC,OAAP,CAAiB1B,YAAjB","sourcesContent":["// @flow\n\nimport { NativeEventEmitter, Platform } from 'react-native';\n\ntype NativeModule = {\n  startObserving: ?() => void,\n  stopObserving: ?() => void,\n};\n\ntype Subscription = {\n  remove: () => void,\n};\n\nclass EventEmitter {\n  _listenersCount = 0;\n  _nativeModule: NativeModule;\n  _eventEmitter: NativeEventEmitter;\n\n  constructor(nativeModule: NativeModule) {\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule);\n  }\n\n  addListener<T>(eventName: string, listener: T => void): Subscription {\n    this._listenersCount += 1;\n    if (Platform.OS === 'android' && this._nativeModule.startObserving) {\n      if (this._listenersCount === 1) {\n        // We're not awaiting start of updates\n        // they should start shortly.\n        this._nativeModule.startObserving();\n      }\n    }\n    return this._eventEmitter.addListener(eventName, listener);\n  }\n\n  removeAllListeners(eventName: string): void {\n    const listenersToRemoveCount = this._eventEmitter.listeners(eventName).length;\n    const newListenersCount = Math.max(0, this._listenersCount - listenersToRemoveCount);\n\n    if (Platform.OS === 'android' && this._nativeModule.stopObserving && newListenersCount === 0) {\n      this._nativeModule.stopObserving();\n    }\n\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenersCount = newListenersCount;\n  }\n\n  removeSubscription(subscription: Subscription): void {\n    this._listenersCount -= 1;\n\n    if (Platform.OS === 'android' && this._nativeModule.stopObserving) {\n      if (this._listenersCount === 0) {\n        this._nativeModule.stopObserving();\n      }\n    }\n\n    this._eventEmitter.removeSubscription(subscription);\n  }\n\n  emit(eventType: string, ...params: Array<*>) {\n    this._eventEmitter.emit(eventType, ...params);\n  }\n}\n\nmodule.exports = EventEmitter;\n"]},"metadata":{},"sourceType":"script"}